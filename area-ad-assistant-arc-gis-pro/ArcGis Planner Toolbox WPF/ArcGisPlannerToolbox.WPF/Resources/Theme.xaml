<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ArcGisPlannerToolbox.WPF.Startup"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:ArcGisPlannerToolbox.WPF.Controls"
                    xmlns:converters="clr-namespace:ArcGisPlannerToolbox.WPF.Converters"
                    xmlns:extensions="clr-namespace:ArcGIS.Desktop.Extensions;assembly=ArcGIS.Desktop.Extensions">
    <ResourceDictionary.MergedDictionaries>
        <extensions:DesignOnlyResourceDictionary Source="pack://application:,,,/ArcGIS.Desktop.Framework;component\Themes\Default.xaml"/>
        <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="Blue" SecondaryColor="LightBlue" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:BooleanToPackIconKind x:Key="BooleanToPackIconKindConverter" />
    <converters:ImageResourceFinderConverter x:Key="ImageResourceFinderConverter" />
    <converters:AppearanceRhythmToStringConverter x:Key="AppearanceRhythmToStringConverter" />
    <converters:TextToNumericConverter x:Key="TextToNumberConverter" />
    <converters:StepToContentConverter x:Key="StepToContentConverter" />
    <converters:CustomBooleanHeadingConverter x:Key="CustomBooleanHeadingConverter" />
    <converters:DictionaryToListBindingConverter x:Key="DictionaryToListBindingConverter" />
    <converters:CustomBooleanHeadingPlannerConverter x:Key="CustomBooleanHeadingPlannerConverter" />
    <converters:KeyValueToDictionaryConverter x:Key="KeyValueToDictionaryConverter" />
    <converters:TextWidthConverter x:Key="TextWidthConverter" />

    <SolidColorBrush Color="#2194F8" x:Key="PrimaryBackgroundColor" />
    <SolidColorBrush Color="#007AC2" x:Key="DarkModeHighlightColor" Opacity="0.7" />


    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source=local:App.Theme}" Value="Dark">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignGroupBox}">
        <Setter Property="materialDesign:ColorZoneAssist.Background" Value="{StaticResource PrimaryBackgroundColor}" />
        <Setter Property="materialDesign:ColorZoneAssist.Foreground" Value="#ffffff" />
        <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="Custom" />
    </Style>

    <Style TargetType="GroupBox" x:Key="GroupBoxWithoutHeader"></Style>

    <Style TargetType="DataGrid" x:Key="MaterialDesignCompactDataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalGridLinesBrush" Value="Gray" />
        <Setter Property="VerticalGridLinesBrush" Value="Gray" />
        <Setter Property="materialDesign:DataGridAssist.CellPadding" Value="4 2 2 2" />
        <Setter Property="materialDesign:DataGridAssist.ColumnHeaderPadding" Value="4 2 2 2"/>
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source=local:App.Theme}" Value="Dark">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
            
    </Style>

    <Style TargetType="GridViewColumnHeader" x:Key="MaterialDesignCompactGridViewColumnHeader">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <DockPanel>
                        <Thumb x:Name="PART_HeaderGripper"
                                    Margin="0,0,-8,0"
                                    DockPanel.Dock="Right"
                                    Style="{StaticResource MaterialDesignGridViewColumnHeaderGripper}" />
                        <Border x:Name="HeaderBorder"
                   Padding="{TemplateBinding Padding}"
                   BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="HeaderContent"
                               Margin="{TemplateBinding Padding}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               RecognizesAccessKey="True"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <DockPanel Name="PART_FloatingHeaderCanvas">
                                <Border BorderBrush="{DynamicResource MaterialDesign.Brush.Primary}" BorderThickness="1" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding Source={x:Static local:App.Theme}}" Value="Dark">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaterialDesignCompactGridViewItem" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Height" Value="20" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                Padding="0"
                Background="{TemplateBinding Background}"
                BorderBrush="LightGray"
                BorderThickness="0,0,0,1"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.ForegroundLight}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="SkyBlue" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.ListView.Selected}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".56" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.ListView.Hover}" />
            </Trigger>
            <DataTrigger Binding="{Binding Source={x:Static local:App.Theme}}" Value="Dark">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static local:App.Theme}}" Value="Dark" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DarkModeHighlightColor}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Source={x:Static local:App.Theme}}" Value="Dark" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColor}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type controls:WizardControl}" x:Key="WizardControlTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Heading}" Margin="20 0 0 10" FontSize="20" Foreground="DeepSkyBlue" />
            <ContentPresenter Grid.Row="1" Margin="20 10">
                <ContentPresenter.Content>
                    <MultiBinding Converter="{StaticResource StepToContentConverter}">
                        <Binding Path="CurrentStep" />
                        <Binding Path="." />
                    </MultiBinding>
                </ContentPresenter.Content>
            </ContentPresenter>
            <WrapPanel Grid.Row="2" HorizontalAlignment="Right">
                <Button Command="{Binding BackCommand}" IsEnabled="{Binding CanMoveBack}" Content="Back" Margin="0 0 2 0" />
                <Button Command="{Binding NextCommand}" IsEnabled="{Binding CanMoveNext}" Content="Next" Margin="5 0" />
                <Button Command="{Binding CancelCommand}" Content="Cancel">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="Foreground" Value="White" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CloseButtonVisibility}" Value="Visible">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Command="{Binding CloseCommand}" Content="Close" Visibility="{Binding CloseButtonVisibility}" />
            </WrapPanel>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:WizardControl}">
        <Setter Property="Template" Value="{StaticResource WizardControlTemplate}" />
    </Style>

    <ControlTemplate x:Key="ListViewGroupItemContainerTemplate">
        <Expander IsExpanded="True">
            <Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name, Converter={StaticResource CustomBooleanHeadingConverter}}" FontWeight="Bold" Foreground="Gray" FontSize="22" VerticalAlignment="Bottom" />
                    <TextBlock Text="{Binding ItemCount}" FontSize="22" Foreground="{StaticResource PrimaryBackgroundColor}" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                    <TextBlock Text=" item(s)" FontSize="22" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                </StackPanel>
            </Expander.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=ListView}}">
                <ItemsPresenter />
            </ScrollViewer>
            <Expander.Style>
                <Style TargetType="Expander">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static local:App.Theme}}" Value="Dark">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="Transparent" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
        </Expander>
    </ControlTemplate>

    <ControlTemplate x:Key="PlannerListViewGroupItemContainerTemplate">
            <Expander IsExpanded="True">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name, Converter={StaticResource CustomBooleanHeadingPlannerConverter}}" FontWeight="Bold" Foreground="Gray" FontSize="22" VerticalAlignment="Bottom" />
                        <TextBlock Text="{Binding ItemCount}" FontSize="22" Foreground="{StaticResource PrimaryBackgroundColor}" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                        <TextBlock Text=" item(s)" FontSize="22" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                    </StackPanel>
                </Expander.Header>
                <ItemsPresenter />
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static local:App.Theme}}" Value="Dark">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="Background" Value="Transparent" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
            </Expander>
    </ControlTemplate>

    <Style TargetType="GroupItem" x:Key="ListViewGroupItem">
        <Setter Property="Template" Value="{StaticResource ListViewGroupItemContainerTemplate}" />
    </Style>

    <Style TargetType="GroupItem" x:Key="PlannerListViewGroupItem">
        <Setter Property="Template" Value="{StaticResource PlannerListViewGroupItemContainerTemplate}" />
    </Style>

    <!--<Style TargetType="ListView" BasedOn="{StaticResource MaterialDesignListView}">
        <Setter Property="materialDesign:ListViewAssist.ListViewItemPadding" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignGridViewItem}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source=local:App.Theme}" Value="Dark">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="TabControl" BasedOn="{StaticResource MaterialDesignTabControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source=local:App.Theme}" Value="Dark">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="TabItem" BasedOn="{StaticResource MaterialDesignTabItem}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter>
                        <ContentPresenter.Content>
                            <TextBlock Text="{TemplateBinding Content}" Foreground="White" />
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="Light" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source=local:App.Theme}" Value="Dark">
                <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="Dark" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
        
</ResourceDictionary>
