<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArcGIS.Desktop.Framework</name>
    </assembly>
    <members>
        <member name="T:ArcGIS.Desktop.Framework.AddIns.AddInManagerDlg">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.AddIns.AddInManagerDlg.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.AddIns.SelectAddInView">
            <summary>
            Interaction logic for SelectAddInView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.AddIns.SelectAddInView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Categories">
             <summary>
             Retrieves components registered in a category.
             </summary>
             <remarks>
             <para>
             Component categories are defined in DAML. The DAML fragment below shows an example category declaration.
             </para>
             <para>
             <code>
            <pre>
            &lt;categories&gt;
              &lt;insertCategory id="ProjectContainers"/&gt;
            &lt;/categories&gt;
            </pre>
             </code>
             </para>
             <para>
             Anyone can then register a component in the category. A component can optionally have a content sub-element where 
             they can define any XML they wish. In the example below, just a few attributes have been added but this can be any XML desired.
             </para>
             <para>
             <code>
            <pre>
            &lt;categories&gt;
              &lt;updateCategory refID="ProjectContainers"&gt;
                &lt;insertComponent id="MapContainer" className="MapContainer"&gt;
                  &lt;content type="Map" displayName="Maps"/&gt;
                &lt;/insertComponent&gt;
              &lt;/updateCategory&gt;
            &lt;/categories&gt;
            </pre>
             </code>
             </para>
             <para>
             Any DAML command can also be added to a category by using by specifying a categoryRefID in its declaration.  In this case, you can
             also use the content sub-element to define any custom data. 
             </para>
             <para>
             <code>
            <pre>
            &lt;button id="openMap" caption="Open" className="Controls.Cut" categoryRefID="ProjectContainers"&gt;
              &lt;content type="Map" displayName="Maps"/&gt;
            &lt;/button&gt;
            </pre>
             </code>
             </para>
             <para>
             At runtime you can use the <see cref="M:ArcGIS.Desktop.Framework.Categories.GetComponentElements(System.String)" /> function to retrieve all the components registered in a particular 
             category, including DAML controls. When a <see cref="T:ArcGIS.Desktop.Framework.ComponentElement" /> is returned, you can call <see cref="M:ArcGIS.Desktop.Framework.ComponentElement.GetContent" /> to get a 
             Systm.DAML.Linq.XElement representing the content node or use <see cref="M:ArcGIS.Desktop.Framework.ComponentElement.ReadAttribute(System.String)" /> to simply read a 
             string attribute. Call <see cref="M:ArcGIS.Desktop.Framework.ComponentElement.CreateComponent(System.Object[])" /> to instantiate a new instance of the component. Note 
             CreateComponent throws an exception when the component is referencing a DAML command.
             </para>
             </remarks>
             <example>
        <code>
          Collection&lt;ArcGIS.Desktop.Framework.ComponentElement&gt; components;
          components = Categories.GetComponentElements("ProjectContainers");

          // Check the components
          foreach (ComponentElement component in components)
          {
          string value = component.ReadAttribute("type");
          if (value != key)
          continue;

          ProjectItemContainer container = null;
          try
          {
          container = component.CreateComponent() as ProjectItemContainer;
          if (container == null)
          return null;
          .
          .
          .
        </code>
      </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Categories.GetComponentElements(System.String)">
            <summary>
            Retrieves components registered in a component category.
            </summary>
            <param name="category">The name of the category as defined in DAML.</param>
            <returns>The elements registered in the category.</returns>
            <example>
        <code>
          Collection&lt;ArcGIS.Desktop.Framework.ComponentElement&gt; components;
          components = Categories.GetComponentElements("ProjectContainers");

          // Check the components
          foreach (ComponentElement component in components)
          {
          string value = component.ReadAttribute("type");
          if (value != key)
          continue;

          ProjectItemContainer container = null;
          try
          {
          container = component.CreateComponent() as ProjectItemContainer;
          if (container == null)
          return null;
          .
          .
          .
        </code>
      </example>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.ComponentElement">
            <summary>
            Represents a component registered in a category.
            </summary>
            <seealso cref="T:ArcGIS.Desktop.Framework.Categories"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ComponentElement.ID">
            <summary>
            Gets the DAML identifier.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ComponentElement.ContainerType">
            <summary>
            Gets the container type.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.ComponentElement.ReadAttribute(System.String)">
            <summary>
            Reads the string value of the specified attribute.
            </summary>
            <param name="name">The name of the attribute.</param>
            <returns>The value of the attribute.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.ComponentElement.GetContent">
            <summary>
            Returns the custom XML below the content node in DAML definition.
            </summary>
            <returns>The custom XML.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.ComponentElement.CreateComponent(System.Object[])">
            <summary>
            Instantiates the component.
            </summary>
            <param name="args"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">
            Throws an exception if the component is referencing a DAML control such as a Button.
            </exception>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.WebViewBrowser">
            <summary>
            ArcGIS WebViewBrowser control is a thin wrapper based on Microsoft's WebView2 control.
            The WebViewBrowser control requires Microsoft's WebView2 Runtime being installed.
            The WebView2 runtime comes in Evergreen and Fixed Version distribution modes.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.ActiveTool">
            <summary>
            Interaction logic for ActiveTool.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.ActiveTool.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.BurgerButton">
            <summary>
            ArcGIS burger button control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.TabControl">
            <summary>
            ArcGIS PanelHeader control.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.TabControl.Text">
            <summary>
            Gets and sets the text of the TabControl.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.TabControl.Tooltip">
            <summary>
            Gets and sets the Tooltip of the TabControl.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.TabControl.IsVisible">
            <summary>
            Gets and sets the visibility of the TabControl.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.TabIndicator">
            <summary>
            ArcGIS SubPanelIndicator control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.InfoButton">
            <summary>
            A 'more information' button showing a simple tooltip.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.InfoButton.OnApplyTemplate">
            <summary>
            OnApplyTemplate is invoked whenever System.Windows.FrameworkElement.ApplyTemplate
            is called.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.InfoButton.HeaderProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Framework.Controls.InfoButton.Header"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Framework.Controls.InfoButton.Header"/> dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.InfoButton.DescriptionProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Framework.Controls.InfoButton.Description"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Framework.Controls.InfoButton.Description"/> dependency property.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.InfoButton.Header">
            <summary>
            Gets or sets the tooltip's header.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.InfoButton.Description">
            <summary>
            Gets or sets the tooltip's description.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.CircularAnimationControl">
            <summary>
            ArcGIS circular animation control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.DateChangedEventArgs">
            <summary>
            Passed as the event parameter in the SelectedDateChanged event for the DateTimePickerControl.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateChangedEventArgs.DateTime">
            <summary>
            Gets the date/time.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateChangedEventArgs.Offset">
            <summary>
            Gets the date offset.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateChangedEventArgs.DateTimeOffset">
            <summary>
            Gets the date time offset. 
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.DateChangedEventHandler">
            <summary>
            Callback for the SelectedDateChanged event of the DateTimePickerControl.
            </summary>
            <param name="sender">The DateTimePickerControl instance</param>
            <param name="args">A DateChangedEventArgs with the selected dateTime.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.DateTimeMode">
            <summary>
            The mode in which the DateTimePickerControl should operate.  See <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.Mode"/>.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimeMode.DateTime">
            <summary>
            Display as a date time control.  Use this format with a field of type <see cref="F:ArcGIS.Core.Data.FieldType.Date"/>.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimeMode.DateTimeMS">
            <summary>
            Display as a date time control with milliseconds.  Use this format with a field of type <see cref="F:ArcGIS.Core.Data.FieldType.Date"/> and
            <see cref="P:ArcGIS.Core.Data.Field.Precision"/> = 1 (high precision).
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimeMode.DateOnly">
            <summary>
            Display as a date only control. Use this format with a field of type <see cref="F:ArcGIS.Core.Data.FieldType.DateOnly"/>.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimeMode.TimeOnly">
            <summary>
            Display as a time only control. Use this format with a field of type <see cref="F:ArcGIS.Core.Data.FieldType.TimeOnly"/>.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimeMode.DateTimeOffset">
            <summary>
            Display as a date time with offset.  Use this format with a field of type <see cref="F:ArcGIS.Core.Data.FieldType.TimestampOffset"/>.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl">
            <summary>
            The DateTimePickerControl provides a UI for displaying or choosing a date/time.
            </summary>
            <summary>
            DateTimePickerControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.#ctor">
            <summary>
            The datetime picker control constructor. This will be called via the parent control or window on which the DateTimePickerControl is hosted.
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDateChanged">
            <summary>
            The SelectedDateChanged event is raised when the datetime is changed in the control UI.
            </summary>
            <remarks>The SelectedDate dependency property can also be used for notification of the date time changing.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OnDateChanged">
            <summary>
            This raises our 'public' event for a dateTime change. Users can hook up delegates or use the SelectedDate dependency property.
            property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OnDateOffsetChanged">
            <summary>
            This raises our 'public' event for a DateTimeOffset change. Users can hook up delegates or use the SelectedDate / Offset dependency properties. 
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.PopupOpened">
            <summary>
            The PopupOpened event occurs when the <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.IsPopupOpen"/> property changes to true.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OnPopupOpened(System.EventArgs)">
            <summary>
            This raises our 'public' event. 
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.PopupClosed">
            <summary>
            The PopupClosed event occurs when the <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.IsPopupOpen"/> property changes to false.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OnPopupClosed(System.EventArgs)">
            <summary>
            This raises our 'public' event. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ShowTextBoxProperty">
            <summary>
            Gets the dependency property for ShowTextBox which controls whether a text box to display the date/time is shown next to the picker control.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ShowTextBox">
            <summary>
            Gets or sets whether a text box to display the date/time is shown next to the picker control.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDateProperty">
            <summary>
            Gets the dependency property for the selected datetime.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDate">
            <summary>
            Gets or sets the DateTime value. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OffsetProperty">
            <summary>
            Gets the OffsetProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.Offset">
            <summary>
            Gets or sets the Offset property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.IsNullAllowedProperty">
            <summary>
            Gets the dependency property for IsNullAllowed which determines whether the <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDate"/> can be set to null.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.IsNullAllowed">
            <summary>
            Gets or sets whether the <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDate"/> property can be set to null.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.NullDateTextProperty">
            <summary>
            Gets the dependency property for NullDateText which sets the string value to display when the <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDate"/> value is null.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.NullDateText">
            <summary>
            Gets or sets the string value to display when the <see cref="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.SelectedDate"/> value is null.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ShowDateProperty">
            <summary>
            Gets the dependency property for ShowDate which determines whether the control displays date.  
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ShowDate">
            <summary>
            Gets or sets whether the control shows date. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ShowTimeProperty">
            <summary>
            Gets the dependency property for ShowTime which determines whether the control displays time.  
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ShowTime">
            <summary>
            Gets or sets whether the control shows time. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.ModeProperty">
            <summary>
            Gets the dependency property for Mode which determines the display mode of the control.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.Mode">
            <summary>
            Gets or sets whether the mode of the control. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.TimeZoneIDProperty">
            <summary>
            Gets the dependency property for TimeZoneID.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.TimeZoneID">
            <summary>
            Gets or sets the TimeZoneID property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OnTimeZoneIDChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles when the timezone properties are changed.
            </summary>
            <param name="d">This object</param>
            <param name="e">Event parameters</param>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.IsPopupOpenProperty">
            <summary>
            Gets the dependency property for IsPopupOpen which determines whether the popup is open.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.IsPopupOpen">
            <summary>
            Gets or sets whether the popup is open.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.OnIsPopupOpenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles when the IsPopupOpen propertu is changed.
            </summary>
            <param name="d">This object</param>
            <param name="e">Event parameters</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.UseDefaultCalendar">
            <summary>
            Gets whether the control displays the default calendar.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.UseHijriCalendar">
            <summary>
            Gets whether the control displays the Hijri calendar. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.CalendarMaxDate">
            <summary>
            Gets the calendar maximum date.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.CalendarMinDate">
            <summary>
            Gets the calendar minimum date.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.DateTimePickerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.EmbeddableControl">
            <summary>
            Represents a control that can be hosted in multiple locations.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.EmbeddableControl._options">
            <exclude/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Controls.EmbeddableControl._canChangeOptions">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.#ctor(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
             Creates a new instance of the EmbeddableControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.Dispose">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.Options">
            <summary>
            Gets or sets the configuration options.
            </summary>
            <remarks>For the majority of embeddable controls which are registered in the
            DAML category "esri_embeddableControls", options will always be null and can be
            ignored. Options are only needed if an enbeddable control is hosted within Task
            (should be registered in the DAML category "esri_tasks_embeddableControls")
            or an Editor Template in conjunction with a construction tool</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.CanChangeOptions">
            <summary>
            Gets and sets whether or not the EmbeddedControl can change its options.
            </summary>
            <remarks>If CanChangeOptions is true, the EmbeddedControl can set its CanCommit property
            according to whether or not it has changed its options and the changes can be committed.
            Embeddable controls that do not support options (which is the majority of cases) can ignore
            this property.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.OpenAsync">
            <summary>
            Occurs when the control is hosted.
            </summary>
            <remarks>
            Leaf classes should override this function if they need to perform any asynchronous initialization.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.CloseAsync">
            <summary>
            Occurs when the controls is closed.
            </summary>
            <remarks>
            Leaf classes should override this function if they need to perform any asynchronous cleanup when the control is removed.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.CommitAsync">
            <summary>
            Occurs when control is executed or has changes to its options to be commited.
            </summary>
            <remarks>
            Leaf classes should override this function if they need to perform an action such as creating or editing a feature.
            </remarks>
            <returns>Task</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.CanCommit">
            <summary>
            Gets if the control can perform a <see cref="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.CommitAsync"/>.
            </summary>
            <remarks>This is usually set in conjunction with CanChangeOptions</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.OnOptionsChanged">
            <summary>
            Occurs when the options are updated.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.Create(System.String)">
            <summary>
            Creates an instance of an EmbeddableControl and its View in a ViewModel-View fashion.
            </summary>
            <remarks>
            This function assumes the EmbeddableControl is registered in the "esri_embeddableControls" category in DAML. 
            The DAML definition must additionally contain the View associated with the EmbeddableControl. 
            </remarks>
            <param name="damlID">The DAML ID of the component declaring the EmbeddedControl.</param>
            <returns>The ViewModel-View pair.</returns>
            <example>
            <code lang="XML">
            &lt;categories&gt;
              &lt;updateCategory refID="esri_embeddableControls"&gt;
                &lt;insertComponent id="EmbeddedDockPane_control" className="SampleEmbeddableControlViewModel"&gt;
                  &lt;content className="SampleEmbeddableControlView" relatedCommand="EmbeddedDockPane_SampleDockPane_ShowButton" /&gt;
                &lt;/insertComponent&gt;
              &lt;/updateCategory&gt;
            &lt;/categories&gt;
            </code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.EmbeddableControl.Create(System.String,System.String,System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Creates an instance of an EmbeddableControl and its View in a ViewModel-View fashion.
            </summary>
            <remarks>
            This function assumes the EmbeddableControl is registered in the DAML category passed in
            as a parameter. The DAML definition must additionally contain the View associated with the 
            EmbeddableControl. 
            </remarks>
            <param name="damlID">The DAML ID of the component declaring the EmbeddedControl.</param>
            <param name="category">The DAML category containing the EmbeddableControl</param>
            <param name="options">The XML configuration data.</param>
            <param name="canChangeOptions">True if the options can be edited. Default is false</param>
            <returns>The ViewModel-View pair.</returns>
            <example>
            <code lang="XML">
            &lt;categories&gt;
              &lt;updateCategory refID="esri_embeddableControls"&gt;
                &lt;insertComponent id="EmbeddedDockPane_control" className="SampleEmbeddableControlViewModel"&gt;
                  &lt;content className="SampleEmbeddableControlView" relatedCommand="EmbeddedDockPane_SampleDockPane_ShowButton" /&gt;
                &lt;/insertComponent&gt;
              &lt;/updateCategory&gt;
            &lt;/categories&gt;
            </code>
            </example>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.MessageLabel">
            <summary>
            ArcGIS message label control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.ProWindow">
            <summary>
            ArcGIS Pro styled window control.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Controls.ProWindow.ShowDialog">
            <summary>
            Opens a window and returns only when the newly opened window is closed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.SearchTextBox">
            <summary>
            ArcGIS search textbox control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Controls.WaitingCursorControl">
            <summary>
            ArcGIS waiting cursor control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.BackstageTab">
             <summary>
             Represents a tab in the application backstage. This is an abstract class.
             </summary>
             <remarks>
             <para>
             The Backstage is a full-screen user interface view that exposes additional functionality for the application and current project. The backstage consists of
             tabs and buttons. Each tab is scoped to a particular task and presents its own user interface. Buttons are simply commands that perform an operation and have
             no additional user interface in the backstage.
             </para>
             <para>Backstage tabs are also contextual and will appear disabled in they specify a condition that has not been satisfied.
             </para>
             <para>A custom BackstageTab has two components: a component class that derives from BackstageTab and a view class that derives from FrameworkElement, typically a
             UserControl. Backstage tabs must be defined in DAML.
             </para>
             	<table>
             		<tbody>
             			<tr>
             				<th>DAML attributes</th>
             			</tr>
             			<tr>
             				<td>id</td>
             				<td>Required identifier.</td>
             			</tr>
             			<tr>
             				<td>caption</td>
             				<td>The tab label.</td>
             			</tr>
             			<tr>
             				<td>keytip</td>
             				<td>The access key for the tab in keytip mode.</td>
             			</tr>
             			<tr>
             				<td>condition</td>
             				<td>The DAML condition ID if the tab is contextual.</td>
             			</tr>
             			<tr>
             				<td>separator</td>
             				<td>Show a separator before the item.</td>
             			</tr>
             			<tr>
             				<td>className</td>
             				<td>Required class identifier. Optionally include namespace if not in default namespace.</td>
             			</tr>
             			<tr>
             				<td>assembly</td>
             				<td>Assembly name if not in the default assembly.</td>
             			</tr>
             			<tr>
             				<td>publicKeyToken</td>
             				<td>The necessary public key token if the assembly is strongly named.</td>
             			</tr>
             			<tr>
             				<td>version</td>
             				<td>The version of the dll if the assembly is strongly named.</td>
             			</tr>
             		</tbody>
             	</table>
             	<para></para>
             </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.Button"></seealso>
             <example>
             <code lang="XML">
             &lt;backstage&gt;
                &lt;insertTab id=acme_backstage_Options keytip="D" className="AcmeBackstageVM" caption="Options&gt;
                 &lt;content className="AcmeBackstageTabOptionsView"/&gt;
               &lt;/insertTab&gt;
             &lt;/backstage&gt;
             </code>
            <code title="Example Code (CS)" source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\Framework\BackstageTab.cs" lang="CS"></code>
             </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.BackstageTab.#ctor">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.BackstageTab.Caption">
            <summary>
            Gets the caption (title) of the BackstageTab.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.BackstageTab.ID">
            <summary>
            Gets the DAML string identifier for the BackstageTab.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.BackstageTab.Content">
            <summary>
            Gets the content portion of the BackstageTab.
            </summary>
            <remarks>
            BackstageTabs have two portions: a view-model class that must derive from <c>BackstageTab</c> and a view
            class that must be a FrameworkElement (typically a custom UserControl). The two components are either
            associated with each other through DAML or manually via OnCreateContent. If necessary, the <c>Content</c> property
            provides the view-model with access to the view.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.BackstageTab.UninitializeAsync">
            <summary>
            Called whenever a BackstageTab is unselected.
            </summary>
            <remarks>
            Override this function to perform any uninitialization logic. Backstage tabs are uninitialized
            each time they are hidden.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.BackstageTab.InitializeAsync">
            <summary>
            Called whenever a BackstageTab is unselected. 
            </summary>
            <remarks>
            Override this function to perform any initialization logic. BackstageTabs are reloaded each time
            they are made visible.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.BackstageTab.OnCreateContent">
            <summary>
            Optional override to create the visible content of the control.
            </summary>
            <remarks>
            If the visible content (the View) of the backstage tab was not specified in DAML, 
            override this function to provide it.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.DropHandlerBase">
            <summary>
            Represents a class that wants to process drag and drop operations. This is an abstract class.
            </summary>
            <remarks>
            <para>
            This DropHandlerBase class provides little implementation, it satisfies the IDropTarget interface
            as simply as possible.
            </para>
            </remarks>
            <example>
            <code>
            <pre>
            &lt;TreeView ItemsSource="{Binding Items}"
                      framework:DragDrop.IsDragSource="true"
                      framework:DragDrop.IsDropTarget="true"              
                      framework:DragDrop.DropHandler="{Binding myViewModel.TreeDropHandler}" 
                      framework:DragDrop.DragHandler="{Binding myViewModel.TreeDropHandler}" &gt;
            </pre>
            </code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DropHandlerBase.OnDragOver(ArcGIS.Desktop.Framework.DragDrop.DropInfo)">
            <summary>
            Derived classes should override this function to process drag over events.
            </summary>
            <param name="dropInfo">Information related to the data being dropped.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DropHandlerBase.OnDrop(ArcGIS.Desktop.Framework.DragDrop.DropInfo)">
            <summary>
            Derived classes should override this function to handle the drop operation.
            </summary>
            <param name="dropInfo">Information related to the data being dropped.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase">
            <summary> 
            A base class that implements the infrastructure for property change notification and automatically performs UI thread marshalling. 
            </summary> 
        </member>
        <member name="E:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase.PropertyChanged">
            <summary> 
            Occurs when a property value changes. 
            </summary> 
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase.SetProperty``1(``0@,``0,System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>
             Sets a property value and calls NotifyPropertyChanged when the new value differs from the current value.
             </summary>
             <returns>    
             Returns true if the property changes.
            </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase.SetProperty``1(``0@,``0,System.String)">
             <summary>
             Sets a property value and calls NotifyPropertyChanged when the new value differs from the current value.
             </summary>
             <returns>    
             Returns true if the property changes.
            </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase.NotifyPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the PropertyChanged event for the specified property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase.NotifyPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event for the specified property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PropertyChangedBase.NotifyPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Raises the PropertyChanged event for the specified property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Button">
             <summary>
             Represents a button control. This is an abstract class.
             </summary>
             <remarks>
        <para>
          All ribbon control elements share several attributes. The loadOnClick attribute determines when the control should be
          created by the framework. By default, controls appear enabled, but are not actually instantiated until they are
          clicked. This simple just-in-time (JIT) strategy improves resource utilization and startup time by deferring the instantiation
          of controls until they are initiated by the end user. Note that non-visible controls are never loaded until
          they become visible (or are executed programmatically), regardless of the value assigned to loadOnClick.
        </para>
        <para>
          Tooltips are defined using the tooltip sub-element and may span as many lines as necessary.  The image attribute is used
          to supply an image that will appear next to the tip text. Command tooltips also support a disabledText element, this string
          is additional displayed when the command is disabled.
        </para>
        <para>
          Most controls support multiple sizes in the ribbon. For example, a button can render small (small icon only),
          medium (small icon with text), and large (large icon over text). Use the smallImage and largeImage attributes to
          specify unique images for the different sizes.  Images don’t have to be graphics, you can also use XAML. You can
          also use overlayLargeImage and overlaySmallImage to draw a graphic or XAML overtop of the corresponding images. If
          the image should flip when running right-to-left, e.g. arrow buttons, set the flipImageRTL attribute to true.
        </para>
        <para>
          The disableIfBusy element is used to signal that the control should be disabled whenever the primary worker thread is
          busy. This prevents work from queuing up. This element is true by default. Controls that always need to be enabled such
          as the close application button should set this to false.
        </para>
        <para>
          All control declarations support a condition attribute allowing the assignment of a condition.  If the specified condition
          isn’t met, the control will be automatically disabled by the framework.  In addition, controls remain unloaded until their
          is met.  If no condition is specified, the control is assumed to be always relevant.
        </para>
      </remarks>
             <remarks>
             <para>
             Declaring Buttons in DAML:
             <code>
            <pre>
            &lt;button id="acme_bufferFeature" caption="Buffers a feature"  
                       className="BufferButton" 
                       smallImage="pack://application:,,,/Acme;component/Images/Buffer16.png" 
                       largeImage="pack://application:,,,/Acme;component/Images/Buffer32.png"&gt;
              &lt;tooltip heading="Buffer" image="pack://application:,,,/Acme;component/Images/Buffer16.png"&gt;
                Adds a new feature by buffering the currently selected feature.
                &lt;disabledText&gt;Requires a selected feature&lt;/disabledText&gt;
              &lt;/tooltip&gt;
            &lt;/button&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The button's heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>smallImage</term><description>Image (16x16) used when button is small and middle size.</description></item>
             <item><term>largeImage</term><description>Image (32x32) used when button is large size.</description></item>
             <item><term>overlaySmallImage</term><description>Optional image overlay.</description></item>
             <item><term>overlayLargeImage</term><description>Optional image overlay.</description></item>
             <item><term>flipImageRTL</term><description>Option to flip the image when running right-to-left. Default is false.</description></item>
             <item><term>keytip</term><description>The key that selects the button in keytip mode (Alt navigation).</description></item>
             <item><term>loadOnClick</term><description>Delay creating the actual control until it has been clicked. Default is true.</description></item>
             <item><term>categoryRefID</term><description>Adds button to a specific component category.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>DAML Child Elements</term>
            </listheader>
            <item>
              <term>tooltip</term>
              <description>Description of the control.</description>
            </item>
            <item>
              <term>content</term>
              <description>Optional custom XML data when registered in a component category.</description>
            </item>
          </list>
        </para>
      </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.Categories" />
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Button.IsChecked">
            <summary>
            Gets or sets whether the <see cref="T:ArcGIS.Desktop.Framework.Contracts.Button"/> is checked.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Button.OnClick">
            <summary>
            Called when the Button is clicked.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.CheckBox">
             <summary>
             Represents a check box control. This is an abstract class.
             </summary>
             <remarks>
        <para>
          All ribbon control elements share several attributes. The loadOnClick attribute determines when the control should be
          created by the framework. By default, controls appear enabled, but are not actually instantiated until they are
          clicked. This simple just-in-time (JIT) strategy improves resource utilization and startup time by deferring the instantiation
          of controls until they are initiated by the end user. Note that non-visible controls are never loaded until
          they become visible (or are executed programmatically), regardless of the value assigned to loadOnClick.
        </para>
        <para>
          Tooltips are defined using the tooltip sub-element and may span as many lines as necessary.  The image attribute is used
          to supply an image that will appear next to the tip text. Command tooltips also support a disabledText element, this string
          is additional displayed when the command is disabled.
        </para>
        <para>
          Most controls support multiple sizes in the ribbon. For example, a button can render small (small icon only),
          medium (small icon with text), and large (large icon over text). Use the smallImage and largeImage attributes to
          specify unique images for the different sizes.  Images don’t have to be graphics, you can also use XAML. You can
          also use overlayLargeImage and overlaySmallImage to draw a graphic or XAML overtop of the corresponding images. If
          the image should flip when running right-to-left, e.g. arrow buttons, set the flipImageRTL attribute to true.
        </para>
        <para>
          The disableIfBusy element is used to signal that the control should be disabled whenever the primary worker thread is
          busy. This prevents work from queuing up. This element is true by default. Controls that always need to be enabled such
          as the close application button should set this to false.
        </para>
        <para>
          All control declarations support a condition attribute allowing the assignment of a condition.  If the specified condition
          isn’t met, the control will be automatically disabled by the framework.  In addition, controls remain unloaded until their
          is met.  If no condition is specified, the control is assumed to be always relevant.
        </para>
      </remarks>
             <remarks>
        <para>
          Controls can also be registered into component categories using the categoryRefID attribute. In this scenario, you can
          additionally use the content sub-element to define any custom data. For example, the Editing module may define a
          component category for 'sketch tools' and your custom sketch tool would need to be registered in this category for it
          to appear in their custom tool palette.
        </para>
      </remarks>
             <remarks>
             <para>
             Declaring Checkboxes in DAML:
             <code>
            <pre>
            &lt;checkBox id="acme_labelClassEnableCheckBox" 
                         condition="acme_labeledLayerSelectedCondition" 
                         caption="Label Features In This Class" 
                         className="LabelClassEnableCheckBox"&gt;
              &lt;tooltip heading=""&gt;Label the features defined by the current label class.&lt;/tooltip&gt;
            &lt;/checkBox&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The default DockPane heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>keytip</term><description>The key that selects the button in keytip mode (Alt navigation).</description></item>
             <item><term>loadOnClick</term><description>Delay creating the actual control until it has been clicked. Default is true.</description></item>
             <item><term>categoryRefID</term><description>Adds control to a specific component category.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>DAML Child Elements</term>
            </listheader>
            <item>
              <term>tooltip</term>
              <description>Description of the control.</description>
            </item>
            <item>
              <term>content</term>
              <description>Optional custom XML data when registered in a component category.</description>
            </item>
          </list>
        </para>
      </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.Button" />
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CheckBox.IsChecked">
            <summary>
            Gets or sets whether the <see cref="T:ArcGIS.Desktop.Framework.Contracts.CheckBox"/> is checked.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Tool">
             <summary>
             Represents a tool control. This is an abstract class.
             </summary>
             <remarks>
        <para>
          All ribbon control elements share several attributes. The loadOnClick attribute determines when the control should be
          created by the framework. By default, controls appear enabled, but are not actually instantiated until they are
          clicked. This simple just-in-time (JIT) strategy improves resource utilization and startup time by deferring the instantiation
          of controls until they are initiated by the end user. Note that non-visible controls are never loaded until
          they become visible (or are executed programmatically), regardless of the value assigned to loadOnClick.
        </para>
        <para>
          Tooltips are defined using the tooltip sub-element and may span as many lines as necessary.  The image attribute is used
          to supply an image that will appear next to the tip text. Command tooltips also support a disabledText element, this string
          is additional displayed when the command is disabled.
        </para>
        <para>
          Most controls support multiple sizes in the ribbon. For example, a button can render small (small icon only),
          medium (small icon with text), and large (large icon over text). Use the smallImage and largeImage attributes to
          specify unique images for the different sizes.  Images don’t have to be graphics, you can also use XAML. You can
          also use overlayLargeImage and overlaySmallImage to draw a graphic or XAML overtop of the corresponding images. If
          the image should flip when running right-to-left, e.g. arrow buttons, set the flipImageRTL attribute to true.
        </para>
        <para>
          The disableIfBusy element is used to signal that the control should be disabled whenever the primary worker thread is
          busy. This prevents work from queuing up. This element is true by default. Controls that always need to be enabled such
          as the close application button should set this to false.
        </para>
        <para>
          All control declarations support a condition attribute allowing the assignment of a condition.  If the specified condition
          isn’t met, the control will be automatically disabled by the framework.  In addition, controls remain unloaded until their
          is met.  If no condition is specified, the control is assumed to be always relevant.
        </para>
      </remarks>
             <remarks>
        <para>
          Controls can also be registered into component categories using the categoryRefID attribute. In this scenario, you can
          additionally use the content sub-element to define any custom data. For example, the Editing module may define a
          component category for 'sketch tools' and your custom sketch tool would need to be registered in this category for it
          to appear in their custom tool palette.
        </para>
      </remarks>
             <remarks>
             <para>
             Generally speaking, an active tool is established whenever a Pane is selected. Several rules are involved
             in determining which tool should be activated; many of these rules involve the incoming and outgoing panes.
             <list type="number">
             <item> 
             <description>If the two panes have the same <see cref="P:ArcGIS.Desktop.Framework.Contracts.Pane.ContentID" />, carry over the currently active tool</description> 
             </item> 
             <item> 
             <description>Restore the incoming pane's cached tool only if it is sticky.</description> 
             </item> 
             <item> 
             <description>Restore incoming pane's cached (non-sticky) tool if the previous pane's tool is sticky</description> 
             </item> 
             <item> 
             <description>Restore the last active tool for the incoming pane if available; otherwise, use its default tool</description> 
             </item> 
             </list> 
             </para>
             <para>
             Declaring Tools in DAML:
             <code>
            <pre>
            &lt;tool id="acme_selectByRectangleTool" className="Acme.Mapping.SelectTool" 
              largeImage="pack://application:,,,/Acme;component/Images/SelectionSelectTool32.png" 
              smallImage="pack://application:,,,/Acme;component/Images/SelectionSelectTool16.png" 
              caption="Select By Rectangle" 
              condition="esri_mapping_mapPane"&gt;
              &lt;tooltip heading="Select By Rectangle"&gt;Select features by clicking them or dragging a box around them.
                &lt;disabledText&gt;&lt;/disabledText&gt;
              &lt;/tooltip&gt;
            &lt;/tool&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The default DockPane heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>smallImage</term><description>Image (16x16) used when button is small and middle size.</description></item>
             <item><term>largeImage</term><description>Image (32x32) used when button is large size.</description></item>
             <item><term>overlaySmallImage</term><description>Optional image overlay.</description></item>
             <item><term>overlayLargeImage</term><description>Optional image overlay.</description></item>
             <item><term>flipImageRTL</term><description>Option to flip the image when running right-to-left. Default is false.</description></item>
             <item><term>keytip</term><description>The key that selects the button in keytip mode (Alt navigation).</description></item>
             <item><term>loadOnClick</term><description>Delay creating the actual control until it has been clicked. Default is true.</description></item>
             <item><term>categoryRefID</term><description>Adds control to a specific component category.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>DAML Child Elements</term>
            </listheader>
            <item>
              <term>tooltip</term>
              <description>Description of the control.</description>
            </item>
            <item>
              <term>content</term>
              <description>Optional custom XML data when registered in a component category.</description>
            </item>
          </list>
        </para>
      </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.#ctor">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnActivePaneChanged(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called on the active tool when a pane change occurrs to see if the tool
            wants to remain active.
            </summary>
            <param name="pane"></param>
            <returns></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Tool.Shortcuts">
            <summary>
            Gets a read only ShortCut collection for the current tool.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is pressed on a Pane and the tool is active.
            </summary>
            <param name="e">Provides data for mouse button related events. </param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer moves over a Pane and the tool is active. 
            </summary>
            <param name="e">Provides data for mouse related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when any mouse button is released over a Pane.
            </summary>
            <param name="e">Provides data for mouse button related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is clicked on a Pane two or more times. 
            </summary>
            <param name="e">Provides data for mouse related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnPointerDown(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a pointer is pressed on a Pane and the tool is active.
            </summary>
            <param name="e">Provides data for pointer related events. </param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnPointerUp(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a pointer is released over a Pane.
            </summary>
            <param name="e">Provides data for pointer related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnTouch(ArcGIS.Desktop.Framework.Events.TouchInputEventArgs)">
            <summary>
            Occurs when a touch event occurs over a Pane.
            </summary>
            <param name="e">Provides data for touch related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnPaneActivateAsync(System.Boolean)">
            <summary>
            Called to inform the Tool a Pane referencing it as the active tool is activating or deactivating.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnActivateAsync(System.Boolean)">
            <summary>
            Called to inform the Tool it has been activated or deactivated.
            </summary>
            <param name="isActive"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed and the tool is active. 
            </summary>
            <param name="k">Provides data for the key events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is released and the tool is active. 
            </summary>
            <param name="k">Provides data for the key events.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Tool.Cursor">
            <summary>
            Gets or sets the mouse pointer for this tool.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Tool.UpdateCursor">
            <summary>
            Occurs when a cursor is set on this tool. 
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ShortCut">
            <summary>
            Represents a keyboard short-cut for a DAML command.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.Key">
            <summary>
            Gets the key associated with this short-cut.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.Modifiers">
            <summary>
            Gets the modifier keys associated with this short-cut.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.CommandRefID">
            <summary>
            Gets the command ID associated with this short-cut.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.ExecutesOnKeyUp">
            <summary>
             Gets a boolean indicating whether this short-cut should be executed on key up. 
             The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.CancelOnMouseMove">
            <summary>
             Gets a boolean indicating whether this short-cut should be canceled if mouse moves. 
             This is only evaluated if ExecutesOnKeyUp is true. 
             The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.DisplayString">
            <summary>
            Gets the display string associated with this short-cut.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.IsDisabled">
            <summary>
             Gets a boolean indicating whether this shortcut is disabled.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ShortCut.IsRemoved">
            <summary>
             Gets a boolean indicating whether this shortcut is removed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ComboBox">
             <summary>
             Represents a selection control with a drop-down list that can be shown or hidden by clicking the arrow on the control. This is an abstract class.
             </summary>
             <remarks>
        <para>
          All ribbon control elements share several attributes. The loadOnClick attribute determines when the control should be
          created by the framework. By default, controls appear enabled, but are not actually instantiated until they are
          clicked. This simple just-in-time (JIT) strategy improves resource utilization and startup time by deferring the instantiation
          of controls until they are initiated by the end user. Note that non-visible controls are never loaded until
          they become visible (or are executed programmatically), regardless of the value assigned to loadOnClick.
        </para>
        <para>
          Tooltips are defined using the tooltip sub-element and may span as many lines as necessary.  The image attribute is used
          to supply an image that will appear next to the tip text. Command tooltips also support a disabledText element, this string
          is additional displayed when the command is disabled.
        </para>
        <para>
          Most controls support multiple sizes in the ribbon. For example, a button can render small (small icon only),
          medium (small icon with text), and large (large icon over text). Use the smallImage and largeImage attributes to
          specify unique images for the different sizes.  Images don’t have to be graphics, you can also use XAML. You can
          also use overlayLargeImage and overlaySmallImage to draw a graphic or XAML overtop of the corresponding images. If
          the image should flip when running right-to-left, e.g. arrow buttons, set the flipImageRTL attribute to true.
        </para>
        <para>
          The disableIfBusy element is used to signal that the control should be disabled whenever the primary worker thread is
          busy. This prevents work from queuing up. This element is true by default. Controls that always need to be enabled such
          as the close application button should set this to false.
        </para>
        <para>
          All control declarations support a condition attribute allowing the assignment of a condition.  If the specified condition
          isn’t met, the control will be automatically disabled by the framework.  In addition, controls remain unloaded until their
          is met.  If no condition is specified, the control is assumed to be always relevant.
        </para>
      </remarks>
             <remarks>
             <para>
             The ComboBox allows the user to select an item from a drop-down list or optionally to enter new text in the text box of the control.
             A ComboBox can contain a collection of objects of any type (such as string or image).
             </para>
             <para>
             The IsEditable and IsReadOnly attributes specify how the ComboBox behaves.
             </para>
             <para>
             <list type="table">
             <listheader>
             <term />
             <term>IsReadOnly true</term>
             <term>IsReadOnly false</term>
             </listheader>
             <item>
             <term>IsEditable true</term>
             <term>
             <list type="bullet">
             <item>
             <description>Cannot select an item in the ComboBox by entering a string.</description>
             </item>
             <item>
             <description>Cannot enter a string that does not correspond to an item in the ComboBox.</description>
             </item> 
             <item>
             <description>Can select part of the string in the ComboBox text box.</description>
             </item> 
             <item>
             <description>Can copy the string in the ComboBox text box, but cannot paste a string into the ComboBox text box.</description>
             </item> 
             </list>
             </term>
             <term>
             <list type="bullet">
             <item>
             <description>Can select an item in the ComboBox by entering a string.</description>
             </item>
             <item>
             <description>Can enter a string that does not correspond to an item in the ComboBox.</description>
             </item> 
             <item>
             <description>Can select part of the string in the ComboBox text box.</description>
             </item> 
             <item>
             <description>Can copy or paste the string in the ComboBox text box.</description>
             </item> 
             </list>
             </term>
             </item>
             <item>
             <term>IsEditable false</term>
             <term>
             <list type="bullet">
             <item>
             <description>Can select an item in the ComboBox by entering a string.</description>
             </item>
             <item>
             <description>Cannot enter a string that does not correspond to an item in the ComboBox.</description>
             </item> 
             <item>
             <description>Cannot select part of the string in the ComboBox.</description>
             </item> 
             <item>
             <description>Cannot copy or paste the string in the ComboBox.</description>
             </item> 
             </list>
             </term>
             <term>
             <list type="bullet">
             <item>
             <description>Can select an item in the ComboBox by entering a string.</description>
             </item>
             <item>
             <description>Cannot enter a string that does not correspond to an item in the ComboBox.</description>
             </item> 
             <item>
             <description>Cannot select part of the string in the ComboBox. </description>
             </item> 
             <item>
             <description>Cannot copy or paste the string in the ComboBox.</description>
             </item> 
             </list>
             </term>
             </item>
             </list>
             </para>
             <para>
             Declaring ComboBoxes in DAML:
             <code>
            <pre>
            &lt;comboBox id="acme_cityComboBox" 
                     caption="Cities" 
                     isEditable="false"
                     isReadOnly="true"
                     isTextSearchEnabled="true"
                     editHint="Select a city..." 
                     className="CityComboBox" 
                     sizeString="areallylongcityname" 
                     image="pack://application:,,,/Acme;component/Images/Cities16.png"&gt;
              &lt;tooltip heading="Major Cities"&gt;Select a major city.&lt;/tooltip&gt;
            &lt;/comboBox&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The text to appear beside the combo box.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>dataTemplateFile</term><description>The path to the file containing the custom item template</description></item>
             <item><term>editHint</term><description>The text to display when the combo box is empty.</description></item>
             <item><term>image</term><description>An image to optionally show beside the combo box.</description></item>
             <item><term>itemHeight</term><description>Used with the number of rows to calculate the  maximum height of the combo box drop-down.</description></item>
             <item><term>itemWidth</term><description>Used to size the combo box if the sizeString is empty.</description></item>
             <item><term>isEditable</term><description>Enables or disables editing of the text in text box. Default is true.</description></item>
             <item><term>isReadOnly</term><description> Sets the selection-only mode, in which the contents of the combo box are selectable but not editable. Default is false.</description></item>
             <item><term>resizable</term><description>Is the combo box drop-down resizable.</description></item>
             <item><term>rows</term><description>The number of rows to show in the combo box drop-down</description></item>
             <item><term>templateID</term><description>The template ID in the dataTemplateFile.</description></item>
             <item><term>sizeString</term><description>The control sizes to accommodate the sizeString.</description></item>
             <item><term>isTextSearchEnabled</term><description>Enables a user to quickly access items in a set by typing prefixes of strings. Default is true.</description></item>
             <item><term>categoryRefID</term><description>Adds combo box to a specific component category.</description></item>
             <item><term>condition</term><description>Automatically disable the combo box if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the combo box if the application is busy. Default true.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>DAML Child Elements</term>
            </listheader>
            <item>
              <term>tooltip</term>
              <description>Description of the control.</description>
            </item>
            <item>
              <term>content</term>
              <description>Optional custom XML data when registered in a component category.</description>
            </item>
          </list>
        </para>
      </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.Categories" />
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.#ctor">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBox.ItemCollection">
            <summary>
            Gets the combo box items.
            </summary>
            <remarks>
            <para>
            The default item template for combo boxes expects a collection of <see cref="T:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem"/>. If you are using your own item template, you can
            fill the collection with whatever type is appropriate.
            </para>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become UI content.
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.Add(System.Object)">
            <summary>
            Adds an item to the collection.
            </summary>
            <remarks>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become UI content.
            </para>
            </remarks>
            <param name="item">The item being added to the combo box.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <remarks>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become UI content.
            </para>
            </remarks>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The item being added to the combo box.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The item being removed from the combo box.</param>
            <returns>True if successfully removed; otherwise, false. This method also returns false if the object was not found in the collection.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection.
            </summary>
            <param name="oldIndex">The zero-based index of the item to move.</param>
            <param name="newIndex">The zero-based index to move the item to.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.CopyFrom(System.Collections.ICollection)">
            <summary>
            Add items from an existing collection.
            </summary>
            <remarks>
            <para>
            Clears the internal collection before copying begins.
            </para>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become UI content.
            </para>
            </remarks>
            <param name="collection">Existing collection of items to copy from.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.Clear">
            <summary>
            Removes all the items from the internal collection.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBox.SelectedIndex">
            <summary>
            Gets or sets the zero-based index of the selected item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBox.SelectedItem">
            <summary>
            Gets or sets the selected combo box item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBox.Text">
            <summary>
            Gets or sets the text of the currently selected item. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBox.ItemTemplate">
            <summary>
            Gets or sets the custom item template.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.OnSelectionChange(ArcGIS.Desktop.Framework.Contracts.ComboBoxItem)">
            <summary>
            Invoked when the selected item changes and it is a ComboBoxItem.
            </summary>
            <param name="item">The selected ComboBoxItem.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.OnSelectionChange(System.Object)">
            <summary>
            Invoked when the selected item changes and the collection is filled with custom items.
            </summary>
            <param name="item">The selected item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.OnEnter">
            <summary>
            Invoked when the 'Enter' key is pressed inside the combo box's textbox.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.OnTextChange(System.String)">
            <summary>
            Invoked when the text in the combo box's textbox changes.
            </summary>
            <param name="text">The new string.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.OnDropDownOpened">
            <summary>
            Invoked when the combo box's drop-down list is opened.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked when the combo box loses keyboard focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem">
            <summary>
            Represents a selectable item in a <see cref="T:ArcGIS.Desktop.Framework.Contracts.ComboBox"/>.
            </summary>
            <remarks>
            <para>
            The default item template for ComboBox expects ComboBoxItems. If you're using a custom item template you can
            fill the combo box with whatever type is appropriate.
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.Icon">
            <summary>
            Gets or sets the icon for the combo box item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.Text">
            <summary>
            Gets or sets the label for the combo box item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.Tooltip">
            <summary>
            Gets or sets the tooltip for the combo box item.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.#ctor">
            <summary>
            Initializes a <c>ComboBoxItem</c> class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.#ctor(System.String)">
            <summary>
             Initializes a <c>ComboBoxItem</c> class.
            </summary>
            <param name="text">The label for the combo box item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.#ctor(System.String,System.Object)">
            <summary>
             Initializes a ComboBoxItem class.
            </summary>
            <param name="text">The label for the combo box item.</param>
            <param name="icon">The combo box item image.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.ToString">
            <summary>
            Overridden to return the item's Text property as its ToString representation.
            </summary>
            <returns>The item's Text property.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.#ctor(System.String,System.Object,System.String)">
            <summary>
             Initializes a <c>ComboBoxItem</c> class.
            </summary>
            <param name="text">The label for the combo box item.</param>
            <param name="icon">The combo box item image.</param>
            <param name="tooltip">The tooltip for the combo box item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ComboBoxItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a <c>ComboBoxItem</c> class.
            </summary>
            <param name="text">The label for the gallery item.</param>
            <param name="imagePath">The path to the image to use.</param>
            <param name="tooltip">The tooltip for the combo box item.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.CustomControl">
             <summary>
             Represents a user designed ribbon control. This is an abstract class.
             </summary>
             <remarks>
             <para>
             Even though DAML supports a rich set of pre-defined ribbon controls, occasionally
             it may be necessary to author a custom control. The CustomControl class is the base class for
             these rare occasions.
             </para>
             <para>
             There are two types of custom controls. The first type is a custom UIElement
             hosted directly in the ribbon control much like an in-line gallery. The second is a Framework drop down button
             that presents the custom control in a popup control. The later is very similar
             to a drop down gallery except in this case the control author has complete 
             control of the drop down.
             </para>
             <para>
             For in-ribbon custom controls the control must be 22 pixels tall if the representation
             is small or middle, and 68 pixels if large.
             </para>
             </remarks>
             <remarks>
        <para>
          All ribbon control elements share several attributes. The loadOnClick attribute determines when the control should be
          created by the framework. By default, controls appear enabled, but are not actually instantiated until they are
          clicked. This simple just-in-time (JIT) strategy improves resource utilization and startup time by deferring the instantiation
          of controls until they are initiated by the end user. Note that non-visible controls are never loaded until
          they become visible (or are executed programmatically), regardless of the value assigned to loadOnClick.
        </para>
        <para>
          Tooltips are defined using the tooltip sub-element and may span as many lines as necessary.  The image attribute is used
          to supply an image that will appear next to the tip text. Command tooltips also support a disabledText element, this string
          is additional displayed when the command is disabled.
        </para>
        <para>
          Most controls support multiple sizes in the ribbon. For example, a button can render small (small icon only),
          medium (small icon with text), and large (large icon over text). Use the smallImage and largeImage attributes to
          specify unique images for the different sizes.  Images don’t have to be graphics, you can also use XAML. You can
          also use overlayLargeImage and overlaySmallImage to draw a graphic or XAML overtop of the corresponding images. If
          the image should flip when running right-to-left, e.g. arrow buttons, set the flipImageRTL attribute to true.
        </para>
        <para>
          The disableIfBusy element is used to signal that the control should be disabled whenever the primary worker thread is
          busy. This prevents work from queuing up. This element is true by default. Controls that always need to be enabled such
          as the close application button should set this to false.
        </para>
        <para>
          All control declarations support a condition attribute allowing the assignment of a condition.  If the specified condition
          isn’t met, the control will be automatically disabled by the framework.  In addition, controls remain unloaded until their
          is met.  If no condition is specified, the control is assumed to be always relevant.
        </para>
      </remarks>
             <remarks>
             <para>
             Declaring Custom Controls in DAML:
             <code>
            <pre>
            &lt;customControl id="acme_customControl"  
                            caption="My custom control"  
                            extendedCaption="Extended caption"
                            className="CustomControls.CustomControlVM" 
                            smallImage="pack://application:,,,/Acme;component/Images/AcmeImage16.png" 
                            largeImage="pack://application:,,,/Acme;component/Images/AcmeImage32.png"
                            condition="acme" 
                            isDropDown="false"&gt;
              &lt;content className="CustomControls.CustomControlView" /&gt;
              &lt;tooltip heading="My Heading" image="pack://application:,,,/Acme;component/Images/Acme16.png"&gt;My custom control's tooltip&lt;/tooltip&gt;
            &lt;/customControl&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>isDropDown</term><description>Is the custom control directly in the ribbon or is it in a popup. Default is false.</description></item>
             <item><term>staysOpenOnClick</term><description>Should the popup stay open when an inner element is clicked. Default is false.</description></item>
             <item><term>smallImage</term><description>Image (16x16) used when button is small and middle size.</description></item>
             <item><term>largeImage</term><description>Image (32x32) used when button is large size.</description></item>
             <item><term>overlaySmallImage</term><description>Optional image overlay.</description></item>
             <item><term>overlayLargeImage</term><description>Optional image overlay.</description></item>
             <item><term>flipImageRTL</term><description>Option to flip the image when running right-to-left. Default is false.</description></item>
             <item><term>keytip</term><description>The key that selects the button in keytip mode (Alt navigation).</description></item>
             <item><term>loadOnClick</term><description>Delay creating the actual control until it has been clicked. Default is true.</description></item>
             <item><term>categoryRefID</term><description>Adds control to a specific component category.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>DAML Child Elements</term>
            </listheader>
            <item>
              <term>tooltip</term>
              <description>Description of the control.</description>
            </item>
            <item>
              <term>content</term>
              <description>Optional custom XML data when registered in a component category.</description>
            </item>
          </list>
        </para>
      </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CustomControl.Content">
            <summary>
            Gets and sets the FrameworkElement associated with the PlugIn.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CustomControl.OnCreateContent">
            <summary>
            Called to create the PlugIn's visual component if not specified in DAML.
            </summary>
            <returns>The visual component associated with the custom control.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CustomControl.OnDropDownOpened">
            <summary>
            If the CustomControl specifies the DAML attribute 'isDrop=true', this function is called whenever its drop-down is opened.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CustomControl.OnDropDownClosed">
            <summary>
            If the CustomControl specifies the DAML attribute 'isDrop=true', this function is called whenever its drop-down is closed.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CustomControl.Keytip">
            <summary>
            Gets the key tip access text for the control.
            </summary>
            <remarks>
            Use this property when creating custom ribbon controls that support key tip access.
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.CustomizationFilter">
            <summary>
            Represents a filter that is consulted before commands are executed. This is an abstract class.
            </summary>
            <remarks>
            <para>
            CustomizationFilters give developers the opportunity to limit functionality. Before any DAML defined command is executed, the
            registered CustomizationFilters are consulted; if any filter returns <c>true</c>, the sequence is stopped and the command
            is not executed.
            </para>
            <para>
            Use <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.RegisterCustomizationFilter(ArcGIS.Desktop.Framework.Contracts.CustomizationFilter)"/> to register a custom CustomizationFilter with the application.
            </para>
            </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.RegisterCustomizationFilter(ArcGIS.Desktop.Framework.Contracts.CustomizationFilter)"/>
            <seealso cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.UnregisterCustomizationFilter(ArcGIS.Desktop.Framework.Contracts.CustomizationFilter)"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CustomizationFilter.OnExecuteCommand(System.String)">
            <summary>
            
            </summary>
            <param name="ID">The DAML ID of the command about to execute.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CustomizationFilter.OnCanExecuteCommand(System.String,System.String)">
            <summary>
            Gives a customizaiton filter the ability to disable commands.
            </summary>
            <param name="cmdID">The DAML ID of the command about to execute.</param>
            <param name="moduleID">The command's parent module DAML ID.</param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.DockPaneState">
            <summary>
            DockPane positions.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.DockPaneState.None">
            <summary>
            Content is not associated with any <see cref="T:ArcGIS.Desktop.Framework.DockPaneManager"/> (Default State).
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.DockPaneState.Docked">
            <summary>
            Content is docked within the application.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.DockPaneState.AutoHide">
            <summary>
            Content is hosted by a fly-out window and is visible only when the user moves the mouse over an anchor thumb located in the application border.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.DockPaneState.DockableWindow">
            <summary>
            Content is hosted by a floating window and the user can re-dock it within the application.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.DockPaneState.FloatingWindow">
            <summary>
            Content is hosted by a floating window that can't be docked within the application.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.DockPaneState.Hidden">
            <summary>
            Content is hidden.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.DockPane">
             <summary>
             Represents the base class for DockPanes. This is an abstract class.
             </summary>
             <remarks>
             <para>
             Dock panes are modeless dialogs that can be docked at the top, right, left, or bottom of the view area within 
             the application.  Dock panes can also be: grouped with other dock panes, docked relative to each other (i.e. 
             below, above, etc), or floated.  Finally, dock panes can also be pinned/un-pinned so 
             that they slide back into the frame to save space. The framework persists and preserves the docking state of each dock pane
             so that when they are shown in subsequent sessions, they appear in their last position.
             </para>
             <para>
             Dock panes are singletons: there is never more than one instance of a particular dock pane and once created, 
             they are not destroyed until the application shuts down. Use <see cref="M:ArcGIS.Desktop.Framework.DockPaneManager.Find(System.String)"/> to access a specific dock pane. 
             </para>
             <para>
             Declaring DockPanes in DAML:
             <code>
            &lt;dockPanes&gt;
              &lt;dockPane id="acme_TOCDockPane" caption="Contents" className="TOCViewModel" 
                           condition="acme_basicPane" dock="group" dockWith="acme_ProjectDockPane"&gt;
                &lt;content className="TOC.TOCDockPane"/&gt;
              &lt;/dockPane&gt;
            &lt;/dockPanes&gt;
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The default DockPane heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>isDropTarget</term><description>Flag specifying whether the DockPane processes drag and drop events directly. Defaults to false.</description></item>
             <item><term>smallImage</term><description>Image appearing in tab header.</description></item>
             <item><term>autoHide</term><description>Flag specifying whether the DockPane comes up pinned or unpinned. Default is false, unpinned.</description></item>
             <item><term>delayLoadMessage</term><description>Message that appears when DockPane is created from persisted dock state but it is currently out of context.</description></item>
             <item><term>dock</term><description>Where the DockPane should initially appear.</description></item>
             <item><term>dockWith</term><description>The DAML ID of the DockPane to dock relative to.</description></item>
             <item><term>hasHelp</term><description>Show the help button.</description></item>
             <item><term>height</term><description>The initial height. Used when applicable.</description></item>
             <item><term>helpContextID</term><description>For Esri internal use.</description></item>
             <item><term>image</term><description>Image for DockPane.</description></item>
             <item><term>width</term><description>The initial width. Used when applicable.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.Pane"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.#ctor">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Process key down
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.Content">
            <summary>
            Gets or sets the content portion of the DockPane.
            </summary>
            <remarks>
            DockPanes have two portions: a view-model class that must derive from the<c>DockPane</c> abstract class and a view
            class that must be a FrameworkElement (typically a custom UserControl). The two components are either
            associated with each other through DAML or manually via OnCreateContent. If necessary, the <c>Content</c> property
            provides the view-model with access to the view.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.OnSetContent">
            <summary>
            Called when the <see cref="P:ArcGIS.Desktop.Framework.Contracts.DockPane.Content"/> is specified.
            </summary>
            <remarks>
            Provides derived classes with the opportunity of knowing when the DockPane's Content is set.
            This may be useful in scenarios where the Framework stitches together the DockPane and its
            Content via DAML. Note, the derived DockPane class is automatically set as the DataContext
            for the Content.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.OnActivate(System.Boolean)">
            <summary>
            Called whenever the DockPane is activated or deactivated.
            </summary>
            <param name="isActive">Has the Pane been activated or deactivated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.OnShow(System.Boolean)">
            <summary>
            Called when the visibility of the DockPane changes.
            </summary>
            <remarks>
            This method is also called when the DockPane is auto hidden - collapsed into the non-client area.
            </remarks>
            <param name="isVisible">The DockPane's visibility.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.OnHidden">
            <summary>
            Called when the DockPane is completely hidden.
            </summary>
            <remarks>
            DockPanes are singletons and pushing their Close button really just hides them.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.OnCreateContent">
            <summary>
            Optional override to create the visible content of the control.
            </summary>
            <remarks>
            If the visible content (the View portion) of the DockPane was not specified in DAML, 
            override this function to provide it.
            </remarks>
            <returns>The DockPane's user interface.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.OnHelpRequested">
            <summary>
            Help requested for the DockPane.
            </summary>
            <remarks>
            This function is only called if a <code>HelpContextID</code> is not specified. Do not call the base class if you
            don't want Esri's help to appear.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.HelpContextID">
            <summary>
            Gets or sets the help topic ID to show.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.HasHelp">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.Activate">
            <summary>
            Activates the DockPane and gives it focus.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.Activate(System.Boolean)">
            <summary>
            Activates the DockPane.
            </summary>
            <param name="focus">Whether or not the dockpane should receive focus.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.IsVisible">
            <summary>
            Gets or sets the DockPane's visibility.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.DockState">
             <summary>
             Gets the DockPane's position.
             </summary>
            
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.IsFloating">
             <summary>
             Gets the DockPane's floating state.
             </summary>
            
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.IsBusy">
            <summary>
            Gets a boolean to let clients know the DockPane is currently processing a Task.
            </summary>
            <remarks>
            Derived classed should set this flag whenever they are running a Task.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.Caption">
            <summary>
            Gets or sets the DockPane's caption.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.TabText">
            <summary>
            Gets or sets the dockpane's lower tab text. This appears only when the dock pane is grouped with other tabs.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DockPane.OperationManager">
            <summary>
            Gets the OperationManager associated with the DockPane.
            </summary>
            <remarks>
            <para>
            Each Pane and DockPane instance by default has their own OperationManager which represents an operation stack. The application's undo/redo controls
            work with the current OperationManager which is established by the active window. When a Pane or DockPane is activated,
            its OperationManager is requested. Derived classes can use this method to provide their own OperationManager. For example, Map Panes representing
            a specific Map, all share the same OperationManager.
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.Hide">
            <summary>
            Hides the DockPane.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.Pin">
            <summary>
            Pins the DockPane
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DockPane.UnPin">
            <summary>
            Restores the DockPane from its pinned state.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.DynamicMenu">
             <summary>
             Represents a menu that is populated at run-time. This is an abstract class.
             </summary>
             <remarks>
             <para>
             Unlike declaratively defined menus, dynamic menus are populated at run-time. Derived classes must add items in their
             <see cref="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.OnPopup"/> override which is invoked before the menu opens. Dynamic menus may contain simple items consisting of a caption
             and image, or references to existing DAML controls including other dynamic menus. The <see cref="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.OnClick(System.Int32)"/> override
             is invoked with the specified index when an item is clicked. All menu items are cleared after the popup closes.
             </para>
             <para>
             Dynamic menus can reside directly on the ribbon or on other menus. If the dynamic menu is on a menu and 
             the inline attribute is set to true, the items will be added directly onto the hosting menu instead of 
             being added to a pull-right submenu.
             </para>
             <para>
              Declaring Dynamic menus in DAML:
             <code>
            <pre>
            &lt;dynamicMenu caption="Acme Menu " 
                         className="DynoMenu" 
                         id="acme_dynoMenu" 
                         largeImage="pack://application:,,,/ProTestApp;component/Images/MenuImage32.png" 
                         smallImage="pack://application:,,,/ProTestApp;component/Images/MenuImage16.png" &gt;
              &lt;tooltip heading="Heading" image="pack://application:,,,/Acme;component/Images/MenuImage16.png"&gt;Some text&lt;/tooltip&gt;
            &lt;/dynamicMenu&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>caption</term><description>The heading.</description></item>
             <item><term>categoryRefID</term><description>Adds control to a specific component category.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>largeImage</term><description>Image (32x32) used when button is large size.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>smallImage</term><description>Image (16x16) used when button is small and middle size.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <example>
             <code lang="CS">
            internal sealed class DynoMenu : ArcGIS.Desktop.Framework.Contracts.DynamicMenu
            {
              internal delegate void MathAction(double number);
            
              protected override void OnPopup()
              {
                double angle = 28.0;
            
                MathAction action = Test;
            
                this.Add("item 1", @"pack://application:,,,/Images/Image1.png", true, true, false, action, angle);
                this.Add("item 2", @"pack://application:,,,/Images/Image2.png");
                this.AddSeparator();
                this.AddReference("acme_basicButton");
                this.AddReference("acme_basicMenu");
                this.AddReference("acme_basicGallery");
              }
            
              protected override void OnClick(int index)
              {
                switch (index)
                {
                  case 1:
                    System.Windows.MessageBox.Show("2nd item");
                    break;
                }
              }
            
              private void Test(double angle)
              {
                System.Windows.MessageBox.Show(angle.ToString());
              }
            }
             </code>
             </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.AddReference(System.String)">
            <summary>
            Adds an existing DAML control to the menu.
            </summary>
            <param name="refID">The DAML to add to the menu.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.AddReference(System.String,System.String,System.Func{System.Object})">
            <summary>
            Adds an existing DAML control to the menu with an option to update the control's caption.
            </summary>
            <param name="refID">the DAML to add to the menu.</param>
            <param name="newCaption">The updated caption.</param>
            <param name="menuContext">A function for the menus context menu.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.Add(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds a new item to the menu that points to a delegate.
            </summary>
            <param name="caption">The menu item label.</param>
            <param name="imagePath">The path to an image file to use.</param>
            <param name="isChecked">Is the menu button checked. Default is false.</param>
            <param name="isEnabled">Is the menu button enabled. Default is true.</param>
            <param name="isBold">Is the menu button label bold. Default is false.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.Add(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Delegate,System.Object[])">
            <summary>
            Adds a new item to the menu that points to a delegate.
            </summary>
            <param name="caption">The menu item label.</param>
            <param name="imagePath">The path to an image file to use.</param>
            <param name="isChecked">Is the menu button checked. Default is false.</param>
            <param name="isEnabled">Is the menu button enabled. Default is true.</param>
            <param name="isBold">Is the menu button label bold. Default is false.</param>
            <param name="method">The delegate to call when the menu button is clicked.</param>
            <param name="args">The arguments to pass to the delegate.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.Add(System.String,System.String,System.String,System.String,System.Windows.Media.ImageSource,System.Boolean,System.Boolean,System.Boolean,System.Delegate,System.Object[])">
            <summary>
            Adds a new item to the menu that points to a delegate.
            </summary>
            <param name="caption">The menu item label.</param>
            <param name="imagePath">The path to an image file to use.</param>
            <param name="tooltipTitle">The tooltip heading.</param>
            <param name="tooltipText">The tooltip body.</param>
            <param name="tooltipImage">The image to show with the tooltip.</param>
            <param name="isChecked">Is the menu button checked. Default is false.</param>
            <param name="isEnabled">Is the menu button enabled. Default is true.</param>
            <param name="isBold">Is the menu button label bold. Default is false.</param>
            <param name="method">The delegate to call when the menu button is clicked.</param>
            <param name="args">The arguments to pass to the delegate.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.AddSeparator">
            <summary>
            Adds a separator between the menu items.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.OnPopup">
            <summary>
            Invoked when the menu is opened.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.OnClick(System.Int32)">
            <summary>
            Invoked when a menu item is clicked.
            </summary>
            <param name="index">The index of the menu item clicked.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.DynamicMenu.ContextItem">
            <summary>
            Gets and sets the contextItem.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.EditBox">
             <summary>
             Represents a control that can be used to display and edit strings, doubles, or integers. This is an abstract class.
             </summary>
             <remarks>
        <para>
          All ribbon control elements share several attributes. The loadOnClick attribute determines when the control should be
          created by the framework. By default, controls appear enabled, but are not actually instantiated until they are
          clicked. This simple just-in-time (JIT) strategy improves resource utilization and startup time by deferring the instantiation
          of controls until they are initiated by the end user. Note that non-visible controls are never loaded until
          they become visible (or are executed programmatically), regardless of the value assigned to loadOnClick.
        </para>
        <para>
          Tooltips are defined using the tooltip sub-element and may span as many lines as necessary.  The image attribute is used
          to supply an image that will appear next to the tip text. Command tooltips also support a disabledText element, this string
          is additional displayed when the command is disabled.
        </para>
        <para>
          Most controls support multiple sizes in the ribbon. For example, a button can render small (small icon only),
          medium (small icon with text), and large (large icon over text). Use the smallImage and largeImage attributes to
          specify unique images for the different sizes.  Images don’t have to be graphics, you can also use XAML. You can
          also use overlayLargeImage and overlaySmallImage to draw a graphic or XAML overtop of the corresponding images. If
          the image should flip when running right-to-left, e.g. arrow buttons, set the flipImageRTL attribute to true.
        </para>
        <para>
          The disableIfBusy element is used to signal that the control should be disabled whenever the primary worker thread is
          busy. This prevents work from queuing up. This element is true by default. Controls that always need to be enabled such
          as the close application button should set this to false.
        </para>
        <para>
          All control declarations support a condition attribute allowing the assignment of a condition.  If the specified condition
          isn’t met, the control will be automatically disabled by the framework.  In addition, controls remain unloaded until their
          is met.  If no condition is specified, the control is assumed to be always relevant.
        </para>
      </remarks>
             <remarks>
             <para>
             EditBoxes can present strings, doubles, or integers; use the <code>format</code> attribute to specify the type. With
             the double format, you can additionally use the <code>format</code> attribute to specify how the double should be formatted. 
             For example, use 'C' to present a currency or F4 for a double with 4 decimals.
             </para>
             <para>
             Declaring EditBoxes in DAML:
             <code>
            <pre>
            &lt;editBox id="acme_filterEditBox" 
                     caption="Filter Text:" 
                     className="FilterDomainsEditBox" 
                     disableIfBusy="false" 
                     sizeString="1234567890123456789012" 
                     condition="esri_mapping_domainsPane"&gt;
              &lt;tooltip heading=""&gt;Type filter text.
                &lt;disabledText&gt;&lt;/disabledText&gt;
              &lt;/tooltip&gt;
            &lt;/editBox&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item> 
             <item><term>sizeString</term><description>The control sizes to accommodate the sizeString.</description></item>
             <item><term>dataType</term><description>The type of data the edit box hosts: string, double, or integer.</description></item>
             <item><term>editHint</term><description>The text to display when the edit box is empty for string data type.</description></item>
             <item><term>format</term><description>The double format string, e.g. 'C' for currency and F4 for 4 decimals. Default is F2.</description></item>
             <item><term>smallImage</term><description>Image (16x16) used when button is small and middle size.</description></item>
             <item><term>categoryRefID</term><description>Adds control to a specific component category.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <remarks>
        <para>
          <list type="table">
            <listheader>
              <term>DAML Child Elements</term>
            </listheader>
            <item>
              <term>tooltip</term>
              <description>Description of the control.</description>
            </item>
            <item>
              <term>content</term>
              <description>Optional custom XML data when registered in a component category.</description>
            </item>
          </list>
        </para>
      </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.Categories" />
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.EditBox.Text">
            <summary>
            Gets or sets the text contents of the text box.
            </summary>
            <remarks>
            <para>
            Getting this property returns a string copy of the value in the edit box. Setting this property replaces the 
            contents of the edit box with the specified string.
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.EditBox.OnEnter">
            <summary>
            Called when the 'Enter' key is pressed inside this control or when the control loses keyboard focus.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.EditBox.OnTextChange(System.String)">
            <summary>
            Called whenever the text in the control changes.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.EditBox.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked when the combo box loses keyboard focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Gallery">
             <summary>
             Represents an abstract base class for a gallery ribbon control.
             </summary>
             <remarks>
             <para>
             A Gallery is a control that displays a collection of related items or Commands in the Ribbon. If there 
             are too many items in the gallery, an expand arrow is provided to display the rest of the collection in an expanded pane.  
             Galleries typically provide a richer representation of the choices offered, each often representing 
             a preview of the result if chosen.  Galleries can be organized to show multiple rows and columns 
             simultaneously and are excellent choices when you don’t want to be constrained by the smaller one 
             dimensional area offered by a menu. 
             </para>
             <para>
             Galleries can present a condensed grid within the ribbon itself using the in-line gallery representation. 
             The items presented in this way are often either the most common or most recently used items depending on 
             the implementation.  The actual contents of a gallery are normally populated at runtime.  The Gallery 
             declaration below is populated entirely at runtime.  Relatively static aspects such as the caption, the 
             dropdown image, the tooltip, and the number of columns, are specified declaratively.
             </para>
             <para>
             Gallery items are typically modeled through the <see cref="T:ArcGIS.Desktop.Framework.Contracts.GalleryItem"/> class. GalleryItems have the following 
             properties: Icon, LargeIcon, Text, Group, and Tooltip. Custom GalleryItems can be created 
             through inheritance to encapsulate any additional properties and/or behavior as needed.
             </para>
             <para>
             Gallery items are represented in the UI via an ItemTemplate. Galleries (and ComboBoxes) can specify a 
             custom template in their declaration. A simple default template is used for all galleries and combo boxes 
             that do not specify one. The default item template for galleries assumes a collection of GalleryItems; if you are using 
             your own item template, you can fill the collection with whatever type is appropriate. Note, when specifying a custom 
             template, you must list the file and its key. Also,  if you want grouping, make sure the objects
             expose a public Group property of type string as the binding logic uses this.
             </para>
             <para>
             To better support a responsive UI experience, the framework provides a waiting spinner and 
             loading message on the gallery’s dropdown when it is trying to asynchronously load a large number 
             of items. The <see cref="P:ArcGIS.Desktop.Framework.Contracts.Gallery.LoadingMessage"/> can be updated at runtime or set statically using the 
             loadingMessage attribute. Note, to get this default behavior, no heavy code should be put in the 
             gallery’s constructor since it will block the UI thread and prevent the spinner from showing up. The loading
             message only appears in drop down galleries (not in-inline).
             </para>
             <para>
             All items added to the ItemCollection must be created on the main UI thread as these ultimately become the content 
             of buttons added to the gallery popup control.
             </para>
             <para>
             Declaring Galleries in DAML:
             <code>
            <pre>
            &lt;galleries&gt;
              &lt;gallery id="acme_BasemapGallery" 
                     className="BasemapGallery" 
                     caption="Basemap" 
                     itemsInRow="3" 
                     helpContextID="120000190" 
                     itemWidth="140" 
                     dataTemplateFile="pack://application:,,,/Acme;component/Styles/GalleryTemplates.xaml"
                     templateID="BasemapItemTemplate" 
                     showItemCaption="true" 
                     resizable="true" 
                     smallImage="pack://application:,,,/Acme;component/Images/Basemap16.png"
                     largeImage="pack://application:,,,/Acme;component/Images/Basemap32.png"&gt;
                &lt;tooltip&gt;Choose a basemap for your map.&#xd;&#xd;The basemap is the reference data that displays under the notes and 
                         other GIS data you have added to the map.
                &lt;/tooltip&gt;
              &lt;/gallery&gt;
            &lt;/galleries&gt;
            </pre>
            </code>
             </para>
             <para>
             Galleries can also be nested to produce a gallery of galleries. This is accomplished by adding a gallery element 
             within the gallery’s declaration.
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The gallery heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item>
             <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
             <item><term>loadOnClick</term><description>Delay creating the actual control until it has been clicked. Default is true.</description></item>
             <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
             <item><term>loadingMessage</term><description>Temporary message appearing while Pane is initializing.</description></item>
             <item><term>helpContextID</term><description>The help topic to show.</description></item>
             <item><term>smallImage</term><description>Image (16x16) used when button is small and middle size.</description></item>
             <item><term>largeImage</term><description>Image (32x32) used when button is large size.</description></item>
             <item><term>overlaySmallImage</term><description>Optional image overlay.</description></item>
             <item><term>overlayLargeImage</term><description>Optional image overlay.</description></item>
             <item><term>dataTemplateFile</term><description>The path to the file containing the custom item template.</description></item>
             <item><term>templateID</term><description>The template ID in the dataTemplateFile.</description></item>
             <item><term>menuStyle</term><description>Single column.</description></item>
             <item><term>resizable</term><description>Controls whether the gallery's drop down window is expandable. Default is true.</description></item>
             <item><term>itemsInRow</term><description>The number of items per row.</description></item>
             <item><term>itemWidth</term><description>The width of the gallery items. Default is 32 pixels.</description></item>
             <item><term>dropDownHeight</term><description>The height of drop down gallery.</description></item>
             <item><term>showGroup</term><description>Specifies whether the items should be categorized according to their group. Default is false.</description></item>
             <item><term>showItemCaption</term><description>Used with the default item template to hide or show the item's text below its image. Default is true.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <example>
             <code lang="CS">
            class BasemapGallery : Gallery
            {
              private bool _initialized;
              
              protected override void OnDropDownOpened()
              {
                 LoadItems());
              }
            
              private void LoadItems()
              {
                  if (_initialized)
                   return;
                   
                for (int x = 0; x &lt; 28; x++)
                {
                  GalleryItem galleryItem = new GalleryItem("GalleryItem " + x.ToString(), null, "tip: " + x.ToString());
                  this.Add(galleryItem);
                }
                
                _initialized = true;
              }
            
              protected override void OnClick(GalleryItem item)
              {
                System.Windows.MessageBox.Show(item.Text);
              }
            }
             </code>
             </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.#ctor">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.ItemCollection">
            <summary>
            Gets the gallery's items.
            </summary>
            <remarks>
            <para>
            The default item template for galleries expects GalleryItems. If you are using your own item template, you can
            fill the collection with whatever type is appropriate; in this case, if you want grouping, make sure the objects
            expose a public Group property of type string as the binding logic uses this.
            </para>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become the content 
            of buttons added to the gallery popup control.
            </para>
            <para>
            Do not iterate over this collection manually as it may be changing while you do so; instead, use ItemCollectionCopy 
            which provides a copy of the collection. This is usually used to bind against.
            </para>/// 
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.ItemCollectionCopy">
            <summary>
            Gets a copy of the gallery's items which is safe to iterate over from any thead.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.CollectionView">
            <summary>
             InRibbonGallery's bounded ItemSource. This collection filters out the items whose value of IGalleryItem.IsGroupVisible is false.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.SetItemCollection(System.Collections.ObjectModel.ObservableCollection{System.Object})">
            <summary>
            Derived classes can push in an entire collection instead of adding items piecemeal.
            </summary>
            <remarks>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become the content 
            of buttons added to the gallery popup control.
            </para>
            </remarks>
            <param name="items"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.DefaultItems">
            <summary>
            Gets or sets default gallery groups or items used to restore the dialog.
            This is necessary for gallery customization dialog.   
            </summary>  
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.CloneItem(System.Object)">
            <summary>  
            This is necessary for gallery customization dialog.   
            It is used to create a new item when adding a new gallery item.  
            </summary>  
            <param name="sourceItem"></param>  
            <returns></returns>  
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.Add(System.Object)">
            <summary>  
            Adds an item to the collection.
            </summary>
            <remarks>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become the content 
            of buttons added to the gallery popup control.
            </para>
            </remarks>
            <param name="item">The item being added to the gallery.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <remarks>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become the content 
            of buttons added to the gallery popup control.
            </para>
            </remarks>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The item being added to the gallery.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The item being removed from the gallery.</param>
            <returns>True if successfully removed; otherwise, false. This method also returns false if the object was not found in the collection.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.Move(System.Int32,System.Int32)">
            <summary>
            Moves the item at the specified index to a new location in the collection.
            </summary>
            <param name="oldIndex">The zero-based index of the item to move.</param>
            <param name="newIndex">The zero-based index to move the item to.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.CopyFrom(System.Collections.ICollection)">
            <summary>
            Add items from an existing collection.
            </summary>
            <remarks>
            <para>
            Automatically clears the internal collection before copying begins.
            </para>
            <para>
            All items added to the ItemCollection must be created on the main UI thread as these ultimately become the content 
            of buttons added to the gallery popup control.
            </para>
            </remarks>
            <param name="collection">Existing collection of items to copy from.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.Clear">
            <summary>
            Removes all the items from the internal collection.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.ClearSelection">
            <summary>
            Clears the selection set.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.SelectedIndex">
            <summary>
            Gets or sets the zero-based index of the selected item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.AlwaysFireOnClick">
            <summary>
            Gets or sets the boolean to fire the click event even if the item is currently selected. The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.SelectedItem">
            <summary>
            Gets or sets the selected gallery item.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.OnClick(ArcGIS.Desktop.Framework.Contracts.GalleryItem)">
            <summary>
            Called when a <see cref="T:ArcGIS.Desktop.Framework.Contracts.GalleryItem"/> is clicked.
            </summary>
            <param name="item">The gallery item clicked.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.OnClick(System.Object)">
            <summary>
            Called when a custom gallery item is clicked.
            </summary>
            <param name="item">The custom gallery object clicked.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.OnDropDownOpened">
            <summary>
            Called when the gallery is expanded.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Gallery.Uninitialize">
            <summary>
            Called when the gallery is disposed to give the control an opportunity to clean up any resources.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.ItemTemplate">
            <summary>
            Gets or sets the custom item template.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.LoadingMessage">
            <summary>
            Gets or sets the message to show while items are loading into collection.
            </summary>
            <remarks>
            <para>
            To better support a responsive UI experience, the framework provides a waiting spinner and 
            loading message on the gallery’s dropdown when it is trying to asynchronously load a large number 
            of items. The loading message can be updated at runtime or set statically using the 
            loadingMessage attribute. Note, to get this default behavior, no heavy code should be put in the 
            gallery’s constructor since it will block the UI thread and prevent the spinner from showing up. The loading
            message only appears in drop down galleries (not in-inline).
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Gallery.HasFailedToLoadItems">
            <summary>
            Gets or sets the flag indicating the gallery has not initialized properly.
            </summary>
            <remarks>
            Set this flag along with an updated <see cref="P:ArcGIS.Desktop.Framework.Contracts.Gallery.LoadingMessage"/> if your gallery has failed to load its items properly.
            These should be set in your <see cref="M:ArcGIS.Desktop.Framework.Contracts.Gallery.OnDropDownOpened"/> override. If this flag is not set, the default
            progressor that appears in the drop down will remain visible as it is waiting for items to load. 
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.GalleryItem">
            <summary>
            Represents a selectable item in a <see cref="T:ArcGIS.Desktop.Framework.Contracts.Gallery"/>.
            </summary>
            <remarks>
            <para>
            The default item template for Galleries expects GalleryItems. If you're using a custom item template you can
            fill the gallery with whatever type is appropriate.
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.GalleryItem.#ctor(System.String,System.Object,System.String,System.String)">
            <summary>
             Initializes a <c>GalleryItem</c> class.
            </summary>
            <param name="text">The label for the gallery item.</param>
            <param name="icon">The gallery item image.</param>
            <param name="tooltip">The tooltip for the gallery item.</param>
            <param name="group">The group label the gallery item should appear under if appropriate.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.GalleryItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a <c>GalleryItem</c> class.
            </summary>
            <param name="text">The label for the gallery item.</param>
            <param name="imagePath">The path to the image to use.</param>
            <param name="tooltip">The tooltip for the galery item.</param>
            <param name="group">The group label the gallery item should appear under if appropriate.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.Icon">
            <summary>
            Gets or sets the gallery item icon.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.IconLarge">
            <summary>
            Gets or sets the large icon.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.Text">
            <summary>
            Gets or sets the label for the gallery item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.Group">
            <summary>
            Gets or sets the group the gallery item belongs to.
            </summary>
            <remarks>
            <para>
            Gallery items can optionally be grouped. All gallery items with the same <code>Group</code>
            will appear grouped under this heading in the gallery drop down menu.
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.Tooltip">
            <summary>
            Gets or sets the tooltip to show when the mouse pauses over the gallery item.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.GalleryItem.ToString">
            <summary>
            Gets human readable name of item.  Used by Narrator.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.Caption">
            <summary>
            Gets the caption.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.IsGroupVisible">
            <summary>
            Gets or sets the IsGroupVisible flag.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.Thumbnail">
            <summary>
            Gets or sets the associated thumbnail.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.GalleryItem.FlipImageRTL">
            <summary>  
            Gets or sets a boolean indicating if the gallery item's icon should be flipped or not when the FlowDirection is Right-To-Left
            </summary>  
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.IGalleryItem">
            <summary>  
            Implement this interface for a gallery item class if the gallery needs to be displayed  
            in the gallery customization dialog.  
            </summary>  
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IGalleryItem.Group">
            <summary>  
            Gets or sets the gallery item's group name.  
            </summary>  
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IGalleryItem.Caption">
            <summary>  
            Gets the gallery item's caption in the gallery customization dialog.  
            </summary>  
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IGalleryItem.IsGroupVisible">
            <summary>  
            Gets or sets a boolean indicating if the gallery item's belonging group is visible or not.  
            </summary>  
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IGalleryItem.FlipImageRTL">
            <summary>  
            Gets or sets a boolean indicating if the gallery item's icon should be flipped or not when the FlowDirection is Right-To-Left
            </summary>  
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IGalleryItem.Thumbnail">
            <summary>  
            Gets or sets the gallery item's icon in the gallery customization dialog.  
            </summary>  
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.IConfigureCustomizations">
            <exclude></exclude>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager">
             <summary>
              Use a ConfigurationManager to create a custom ArcGIS Pro user experience. 
             </summary>
             <remarks>
             <para>
             Besides having all the capabilities of an add-in, configurations give developers many 
             additional customization opportunities to give ArcGIS Pro a custom look and feel. For 
             example, a configuration can show a custom splash screen and a custom start page; it can 
             inject business logic into the startup sequence including license checking; it can alter 
             the ribbon layout; and, like an add-in, it can introduce new functionality like modules 
             and buttons. A configuration can also control add-ins by setting the add-in security level and 
             specifying additional folders to probe for add-ins. Configurations can also block the customize
             dialog from appearing in the application options so user's can't modify the configuration.
             </para>
             <para>
             With these additional extensibility points, a configuration can, for example, use role based 
             logic to present a more appropriate user interface and workflow based on the currently logged in user.
             </para>
             <para>
             Declaring Configurations in DAML:
             <code>
            <pre>
            &lt;Configuration blockCustomizeDialog="true" blockPerfMeter="true" checkForUpdatesAtStartup="false"&gt;
              &lt;ConfigurationManager className = "ConfigurationManager1" /&gt;
                &lt;AddIns securityLevel="1"&gt;
                  &lt;AdditionalWellKnownFolder&gt;\\NetworkShare\public\add-ins&lt;/AdditionalWellKnownFolder&gt;
              &lt;/AddIns>
            &lt;/Configuration&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>blockCustomizeDialog</term><description>Hides the customize dialog.</description></item>
             <item><term>blockPerfMeter</term><description>Blocks the performance meter.</description></item>
             <item><term>checkForUpdatesAtStartup</term><description>Prevents the application from checking for updates.</description></item>
             </list>
             </para>
             </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnCanExecuteCommand(System.String,System.String)">
            <summary>
            Gives a configuration the ability to disable commands.
            </summary>
            <param name="cmdID">The DAML ID of the command about to execute.</param>
            <param name="moduleID">The command's parent module DAML ID.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnExecuteCommand(System.String,System.String)">
            <summary>
            Allows a configuration to reject a command's execution.
            </summary>
            <param name="cmdID">The DAML ID of the executing command.</param>
            <param name="moduleID">The command's parent module DAML ID.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnApplicationInitializing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the application is initializing. It is safe to communicate with Portal at this time. The 
            DAML records have not been processed at this point.
            </summary>
            <param name="cancelEventArgs">Returning false signals a problem has occurred and
            the application should shut down.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnCreateDaml">
            <summary>
            Opportunity for the configuration to provide DAML at run-time.
            </summary>
            <returns>The DAML to process in the form on an XML string.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.RuntimeDamlFile">
            <summary>
            Opportunity for the configuration to provide DAML file at run-time.
            </summary>
            <returns>The path to a DAML file to process.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.ApplicationName">
            <summary>
            Gets the new application name for the configuration.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.TitleBarText">
            <summary>
            Gets the title bar text. The default implementation returns the Title unless it is empty in which case Name is used.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnShowWebHelp(System.String)">
            <summary>
            Called when web help is requested.
            </summary>
            <param name="helpContextID"></param>
            <returns>Returning false signals the action was not handled and the application should process it.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.Icon">
            <summary>
            Gets the new application icon for the configuration.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnValidateLicense">
            <summary>
            Gives the configuration the chance to perform its own license checking. Returning false 
            signals a licensing problem has occurred and the application should shut down.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnUpdateDatabase(System.Xml.Linq.XDocument)">
            <summary>
            The last chance for the configuration to manipulate the DAML before it is processed.
            </summary>
            <remarks>
            A configuration may find it necessary to edit the raw
            database to achieve a desired look. For example, a configuration may want to delete all 
            the tabs in the system except for its own.
            <para>
            This is the raw DAML database in XML form, edit with extreme caution. 
            </para>
            </remarks>
            <param name="database">The entire merged DAML database.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.SkipStartPage">
            <summary>
            Return true to skip showing a start page at startup.
            </summary>
            <remarks>
            This is useful if opening a specific project during start up.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnShowStartPage">
            <summary>
            The custom start page (landing page) to show once the appliation starts.
            </summary>
            <returns>The user control to show.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnShowSplashScreen">
            <summary>
            The custom splash screen for the configuration.
            </summary>
            <returns>The custom window to show during startup.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnShowAboutPage">
            <summary>
            Allows the configuration to inject some custom user interface into the about page.
            </summary>
            <returns>The element to add to the about page.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnApplicationReady">
            <summary>
            Called when the appliation has fully initialized.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ConfigurationManager.OnCreateQuickAccessToolbar">
            <summary>
            The list of commands to show in the quick access toolbar.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Module">
            <summary>
            Represents the central access point for a sub-system. This is an abstract class. 
            </summary>
            <remarks>
            <para>
            Modules are singletons that are instantiated automatically by the Framework when access is explicitly requested in executing code, or 
            when the Module becomes "relevant" due to a context shift.  Modules have program elements that are explicitly declared as such; these elements 
            include: Ribbon Buttons, Tools, Galleries, Combo Boxes, Edit Boxes, Palettes, and other controls, as well as application Panes and Docking Panes.  
            The well-defined relationship between a Module and its associated components lets the application initialize, un-initialize, and remove entire 
            subsystems as a whole.
            </para>
            <para>
            Modules act as the hub and central access point for their subsystem; if you need access to the functionality within a subsystem, you start with the Module. 
            By convention, all public properties and methods on Modules should be static; clients can reference the associated assembly and then directly use the Module 
            class without having to call Find (or pass the Module ID).
            </para>
            <para>
            Most of the logic in a sub system should reside in a module or a helper (non-UI) class the module directly manages. For example, when writing a button, 
            the Button class itself should have no business logic in it; all the logic should be centralized in its parent module. Centralizing the business logic 
            reduces the spaghetti-effect. For example, instead of several buttons each listening to a particular event, it’s better to have one Module listen to the 
            event and each Button instead polls the Module in OnUpdate.
            </para>
            <para>Modules support several patterns to make centralizing business logic much easier; for instance, modules automatically load whenever one 
            of their plug-ins (program elements) load.  For example, in most cases a button on the ribbon doesn’t load until it is clicked; when this happens, the button’s parent 
            Module is also loaded. Similarly, when a dock pane loads, its parent Module also loads.
            </para>
            <para>Modules also have a pattern for working with Panes. Modules are automatically notified whenever one of its panes are activated, deactivated, 
            opened, or closed. This means a Module doesn’t have to listen to the Framework’s ActivePaneChanged event and from here filter for its panes; instead, 
            Modules are given direct notification that one of their panes changed.
            </para>
            <para>
            Declaring Modules in DAML:
            <code>
            <modules>
             <insertModule id="acme_mainModule" className="MainModule" caption="Acme Program Manager"
                           description="The Program Manager…" autoLoad="true">
               <!--Declare additional Customizations here..-->
             </insertModule>
            </modules>
            </code>
            </para>
            <para>
            DAML attributes:
            <list type="DAML attributes">
            <item>id <description>Required identifier.</description></item>
            <item>caption <description>The name of the Module.</description></item>
            <item>description <description>A description of the Module.</description></item>
            <item>autoLoad <description>Controls whether the Module loads just-in-time (JIT), the default, or automatically at startup.</description></item>
            <item>className <description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
            <item>assembly <description>Assembly name if not in the default assembly.</description></item>
            <item>publicKeyToken <description>The necessary public key token if the assembly is strongly named.</description></item>
            <item>version <description>The version of the dll if the assembly is strongly named.</description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.#ctor">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Module.Caption">
            <summary>
            Gets the name of the Module.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.Initialize">
            <summary>
            When overridden in a derived class, gives the custom Module a chance to initialize itself and return its status to the calling Framework.
            </summary>
            <remarks>
            <para>
            A custom Module has two opportunities to initialize itself: its class constructor and its Initialize method. The Framework calls both 
            functions whenever a Module is loaded. Modules load either explicitly with <c>FrameworkApplication.FindModule</c> or implicitly whenever
            any of their DAML elements (Panes, DockPanes, Controls, etc) are loaded. For example, when a DockPane or a Button on a Ribbon Tab is created, 
            their parent module will automatically load if it hasn't already done so.
            </para>
            <para>
            The Initialize method has the added benefit of returning whether the initialization was successful
            or not. If initialization fails, the Framework immediately calls <c>Uninitialize</c>.
            </para>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.Uninitialize">
            <summary>
            When overridden in a derived class, gives the custom Module a chance to uninitialize itself.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Module.ID">
            <summary>
            Gets the DAML identifier.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanUnload">
            <summary>
            When overridden in a derived class, a Module can return that it can't be unloaded.
            </summary>
            <remarks>
            If the Framework makes the determination that a Module should be unloaded, it will first call
            <c>CanUnload</c> to verify with the Module that it is okay to do so.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnPaneClosing(ArcGIS.Desktop.Framework.Contracts.Pane,ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs)">
            <summary>
            Called by the Framework when one of the Module's Pane is about to close.
            </summary>
            <remarks>
        Modules are automatically notified whenever one of its panes are activated, deactivated, opened, or closed. This means a Module doesn’t have to listen
        to the Framework’s ActivePaneChanged event and from here filter for its panes; instead, Modules are given direct notification that one of their panes changed.
      </remarks>
            <param name="pane">The Pane being closed.</param>
            <param name="e">The event data associated with the closing event. Set the Cancel property to false to cancel the action.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnPaneClosed(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
             Called by the Framework when a Pane is closed.
            </summary>
            <remarks>
        Modules are automatically notified whenever one of its panes are activated, deactivated, opened, or closed. This means a Module doesn’t have to listen
        to the Framework’s ActivePaneChanged event and from here filter for its panes; instead, Modules are given direct notification that one of their panes changed.
      </remarks>
            <param name="pane">The Pane being closed.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnPaneOpened(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called by the Framework when a new Pane is opened. This occurs after the pane has been fully initialized.
            </summary>
            <param name="pane">The new Pane.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnPaneActivated(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called by the Framework when a Pane is activated. 
            </summary>
            <remarks>
        Modules are automatically notified whenever one of its panes are activated, deactivated, opened, or closed. This means a Module doesn’t have to listen
        to the Framework’s ActivePaneChanged event and from here filter for its panes; instead, Modules are given direct notification that one of their panes changed.
      </remarks>
            <param name="incomingPane">The Pane being activated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnPaneDeactivated(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Called by the Framework when a Pane is deactivated.
            </summary>
            <remarks>
        Modules are automatically notified whenever one of its panes are activated, deactivated, opened, or closed. This means a Module doesn’t have to listen
        to the Framework’s ActivePaneChanged event and from here filter for its panes; instead, Modules are given direct notification that one of their panes changed.
      </remarks>
            <param name="outgoingPane">The Pane being deactivated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.ExecuteCommand(System.String)">
            <summary>
            Override this method to allow users to execute DAML commands specified in this module.
            </summary>
            <param name="id">The DAML control identifier.</param>
            <returns>A user defined function that will execute asynchronously when invoked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.ExecuteCommandArgs(System.String)">
            <summary>
            Override this method to allow users to execute DAML commands specified in this module.
            </summary>
            <param name="id">The DAML control identifier.</param>
            <returns>A user defined function, with arguments, that will execute asynchronously when invoked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnReadSettingsAsync(ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader)">
            <summary>
            Override this method to read custom settings written to the current project.
            </summary>
            <param name="settings">A dictionary type object to store and retrieve values.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnWriteSettingsAsync(ArcGIS.Desktop.Framework.Contracts.ModuleSettingsWriter)">
            <summary>
            Override this method to write custom settings to the current project when it is saved.
            </summary>
            <param name="settings">A dictionary type object to store and retrieve values.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.OnUpdate">
            <summary>
            Called periodically by the framework once the module has been loaded. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.GetSuggestedCMDIDs(System.String)">
            <summary>
            Gets the set of Search Suggestion IDs. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's Copy button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyAsync">
            <summary>
            Called when the Copy command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyPathAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's Copy Path button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyPathAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyPathAsync">
            <summary>
            Called when the CopyPath command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyPathAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's Paste button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteAsync">
            <summary>
            Called when the Paste command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteSpecialAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's PasteSpecial button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteSpecialAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteSpecialAsync">
            <summary>
            Called when the PasteSpecial command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteSpecialAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCutAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's Cut button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CutAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CutAsync">
            <summary>
            Called when the Cut command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCutAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanDeleteAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's Delete button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.DeleteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.DeleteAsync">
            <summary>
            Called when the Delete command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCutAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.CanDuplicateAsync">
            <summary>
            Modules are constantly polled giving them the opportunity to enable the application's Duplicate button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.DuplicateAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Module.DuplicateAsync">
            <summary>
            Called when the Duplicate command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanDuplicateAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.IExtensionConfig">
            <summary>
            Provides access to members that describe an extension.  
            </summary>
            <remarks>
            If you want your extension to be exposed in the backstage's Extensions table, the extension's information needs to be specified in module's &lt;extensionConfig&gt; node in DAML.
            If your module needs to load to get the extension's information, your module needs to implement the IExtensionConfig interface. 
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IExtensionConfig.Message">
            <summary>
            Gets or sets the message to appear beside the ProductName in the Extensions table.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IExtensionConfig.ProductName">
            <summary>
            Gets or sets the name of the extension as it should appear in the Extensions table.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.IExtensionConfig.State">
            <summary>
            Gets or sets the current state of the extension.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ExtensionState">
            <summary>
            The Extension's state.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.ExtensionState.Enabled">
            <summary>
            The Extension is ready to use.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.ExtensionState.Disabled">
            <summary>
            The Extension is currently disabled.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.ExtensionState.Unavailable">
            <summary>
            The Extension is currently unavailable.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader">
            <summary>
            Provides a mechanism for reading settings written to a project.
            </summary>
            <remarks>
            When a project loads, each loaded Module is given a chance to read any custom settings
            it may have written to the project (see <see cref="M:ArcGIS.Desktop.Framework.Contracts.Module.OnReadSettingsAsync(ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader)"/>). When
            a module loads for the first time and a project has already been opened, the module is also
            afforded the same opportunity.
            </remarks>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsWriter"/>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.OnReadSettingsAsync(ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader)"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader.Item(System.String)">
            <summary>
            Gets or sets the object persisted in the project identified by the specified key.
            </summary>
            <param name="key">The identifier.</param>
            <returns>The object associated with the key.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader.Get(System.String)">
            <summary>
            Returns the object persisted in the project identified by the specified key.
            </summary>
            <param name="key">The identifier.</param>
            <returns>The object associated with the key.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsWriter">
            <summary>
            Provides a mechanism for writing settings to a project.
            </summary>
            <remarks>
            When a project is saved, each loaded Module is given the opportunity to persist data.
            </remarks>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsReader"/>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.OnWriteSettingsAsync(ArcGIS.Desktop.Framework.Contracts.ModuleSettingsWriter)"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.ModuleSettingsWriter.Add(System.String,System.String)">
            <summary>
            Writes a new string value with the specified identifier to the project.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Operation">
            <summary>
            Represents an action, or group of actions, that can be undone and redone. This is an abstract class.
            </summary>
            <remarks>
            <para>
            To participate in the undo/redo framework, an Operation must be created and added to the appropriate
            <see cref="T:ArcGIS.Desktop.Framework.OperationManager"/>. There isn't one operation stack for the application, each <c>Pane</c> and
            <c>DockPane</c> decides how its operations are managed. For example, different maps have their own
            operation stack; deleting a feature in one map will not be undoable if the focus switches to a different
            map. Although each Pane and DockPane are given the opportunity to provide their own <c>OperationManager</c>,
            they may elect to share the same one. For example, all map panes rely on an <c>OperationManager</c> managed
            by a <c>Map</c> object. This way, all the map panes for the same Map share the same OperationManager. In this
            case, deleting a feature will show up in the undo/redo stack for all map panes showing this <c>Map</c>.
            </para>
            <para>
            Operations can also be categorized so that operations belonging only to a specific category can be undone.
            For example, ArcGIS Pro has editing and mapping operations; if these operations are intermixed, users can 
            elect to just undo the editing operations and skip over the mapping operations. Categorized operations 
            must be mutually exclusive.
            </para>
            </remarks>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.Operation._id">
            <exclude/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.Operation._category">
            <exclude/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.Operation._subCategory">
            <exclude/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Contracts.Operation._categoryID">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.ID">
            <summary>
            Gets or sets a unique identifier for the Operation. Default value is -1.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.Name">
            <summary>
            Gets the name of the operation as it is to appear in the undo/redo lists.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.Category">
            <summary>
             Gets the category name.
            </summary>
            <remarks>
            Operations can also be categorized so that operations belonging only to a specific category can be undone.
            For example, ArcGIS Pro has editing and mapping operations; if these operations are intermixed, users can 
            elect to just undo the editing operations and skip over the mapping operations. Categorized operations 
            must be mutually exclusive.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.SubCategory">
            <summary>
             Gets the sub-category name.
            </summary>
            <remarks>
            Operations belonging to a particular category can be further classified using a sub category.
            This enables a subset of a particular category to be cleared from the undo and redo lists if,
            for example, those operations refer to a dialog which has been closed.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo">
            <summary>
            Gets a boolean indicating if the operation can be undone.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanRedo">
            <summary>
            Gets a boolean indicating if the operation can be redone.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Operation.DirtiesProject">
            <summary>
            Gets a boolean indicating if the operation should dirty the project.
            </summary>
            <remarks>
            <para>
            Operations that return true for <c>DirtiesProject</c> will cause the Project Save
            button to enable when they are added to an <c>OperationManager</c>.
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync">
            <summary>
            Perform the operation asynchronously.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Operation.Do">
            <summary>
            Perform the operation synchronously.
            </summary>
            <returns>A bool indicating the success of the operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Operation.UndoAsync">
            <summary>
            Undo the operation to reset the action from <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.Do"/> or <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync"/>.
            </summary>
            <returns>Return a <c>Task</c> the application can wait on.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Operation.RedoAsync">
            <summary>
            Restarts the <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.Do"/> or <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync"/> action.
            </summary>
            <returns>Return a <c>Task</c> the application can wait on.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Operation.Dispose">
            <summary>
            Provides a mechanism for releasing unmanaged resources.
            </summary>
            <remarks>
            Before an <c>OperationManager</c> removes an <c>Operation</c> from its stack, it calls the
            Operation's Dispose method to give the Operation an opportunity to release any unmanaged resources.
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Operation.RecoverableException">
            <summary>
            The exception that a subclass should throw when it encounters a recoverable error condition and cannot execute.
            </summary>
            <remarks>
            The framework handles this specific exception, and leaves the operation off the stack.
            Meant to be called in DoAsync, UndoAsync, RedoAsync implementations. It is assumed that
            the subclass handles the error appropriately and preserves application invariants.
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.CompositeOperation">
            <summary>
            Represents a list of Operation instances that are collectively applied.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.#ctor(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Framework.Contracts.Operation},System.String,System.String)">
            <summary>
            Initializes a new CompositeOperation instance.
            </summary>
            <param name="operations">Collection of operations to initially add.</param>
            <param name="name">The name of the operation as it is to appear in the undo/redo lists.</param>
            <param name="category">Optionally, the category the operation falls into.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.Name">
            <summary>
            Gets the name of the operation as it is to appear in the undo/redo lists.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.Category">
            <summary>
            Gets the category the operation falls into.
            </summary>
            <remarks>
            Operations can also be categorized so that operations belonging only to a specific category can be undone.
            For example, ArcGIS Pro has editing and mapping operations; if these operations are intermixed, users can 
            elect to just undo the editing operations and skip over the mapping operations. Categorized operations 
            must be mutually exclusive.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.RemoveSubCategory(System.String,System.String)">
            <summary>
            Perform the operation asynchronously.
            </summary>
            <remarks>
            Calls DoAsync on each <see cref="T:ArcGIS.Desktop.Framework.Contracts.Operation"/> in the list.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.DoAsync">
            <summary>
            Perform the operation asynchronously.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.Do">
            <summary>
            Perform the operation synchronously.
            </summary>
            <remarks>
            Calls Do on each <see cref="T:ArcGIS.Desktop.Framework.Contracts.Operation"/> in the list. The cycle terminates if any Operation.Do returns false.
            </remarks>
            <returns>Returns True if all the operations succeed.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.RedoAsync">
            <summary>
            Redo the operation to redo the action from the <c>DoAsync</c> method.
            </summary>
            <returns>Return a <c>Task</c> the application can wait on.</returns>
            <remarks>
            Call RedoAsync on each <c>Operation</c> in the list.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.UndoAsync">
            <summary>
            Undo the operation to reset the action from the <c>DoAsync</c> method.
            </summary>
            <returns>Return a <c>Task</c> the application can wait on.</returns>
            <remarks>
            Calls UndoAsync on each <c>Operation</c> in the list.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.CanUndo">
            <summary>
            Gets a boolean value indicating if an Operation permits Undo. Returns False if any Operation in any of its OperationManager instances returns False; otherwise, returns True.
            </summary>
            <seealso cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.CanRedo">
            <summary>
            Gets a boolean value indicating if an Operation permits Redo. Returns False if any Operation in any of its OperationManager instances returns False; otherwise, returns True.
            </summary>
            <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanRedo"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.CompositeOperation.Dispose">
            <summary>
            Provides a mechanism for releasing unmanaged resources.
            </summary>
            <remarks>
            Before an <c>OperationManager</c> removes an <c>Operation</c> from its stack, it calls the
            Operation's Dispose method to give the Operation an opportunity to release any unmanaged resources.
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Pane">
             <summary>
             Represents a primary window within the application. This is an abstract class.
             </summary>
             <remarks>
             <para>
             The framework supports multiple panes, letting users display and interact with multiple subjects.  Only 
             one pane can be active at a time.  The active pane helps establish what is available on the ribbon; switching 
             between different panes may result in changes to the visible tabs.  The active pane 
             represents what the user is working with at any given time and therefore provides the primary context for 
             the application. You can open many panes at the same time and these can be grouped or tiled.  
             </para>
             <para>
             Panes can be associated with a default tab and a default tool such that if no other relevant tool/tab is 
             already selected, the default will automatically be selected when the pane is activated.
             </para>
             <para>
             Panes have two components: a component class that derives from the Pane abstract class and 
             a view class that derives from FrameworkElement, typically a UserControl. Panes must be
             defined in DAML.
             </para>
             <para>
             Declaring Panes in DAML:
             <code>
             <pre>
            &lt;panes&gt;
              &lt;pane id="acme_basicPane" className="BasicPaneViewModel" caption="Basic Pane" isDropTarget="true" loadingMessage="Initializing..." 
                    defaultTab="acme_mainTab" defaultTool="acme_selectTool" smallImage="pack://application:,,,/Acme;component/Images/BasicPane.png" &gt;
                &lt;content className="BasicPaneView"/&gt;
              &lt;/pane&gt;
            &lt;/panes&gt;
             </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>caption</term><description>The default Pane heading.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item>
             <item><term>loadingMessage</term><description>Temporary message appearing while Pane is initializing.</description></item>
             <item><term>showLoadingMessage</term><description>Loading message visibility.</description></item>
             <item><term>isDropTarget</term><description>Flag specifying whether the Pane processes drag/drop events directly. Defaults to true.</description></item>
             <item><term>defaultTab</term><description>Tab to activate when Pane activates.</description></item>
             <item><term>defaultTool</term><description>Tool to activate when Pane activates.</description></item>
             <item><term>defaultDockPane</term><description>DockPane to activate when Pane activates.</description></item>
             <item><term>hasCloseAllButThisCommand</term><description>Enable or disable the 'Close all but this' command on the Pane's context menu.</description></item>
             <item><term>smallImage</term><description>Image appearing in tab header.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.#ctor">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.GroupID">
            <summary>
            Setting the GroupID property enables Pane numbering.
            </summary>
            <remarks>
            The application keeps track of the number of Panes opened with the same GroupID and this count is presented
            in the Pane captions; for example, 'MyMap (1/2)' and 'MyMap (2/2)'.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Process key down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.CombineState(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Combines the Pane's state with the specified Pane.
            </summary>
            <param name="pane"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.IsPermanantHidden">
            <summary>
            For internal esri use only
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.Content">
            <summary>
            Gets or sets the content portion of the Pane.
            </summary>
            <remarks>
            Panes have two portions: a view-model class that must derive from the<c>Pane</c> abstract class and a view
            class that must be a FrameworkElement (typically a custom UserControl). The two components are either
            associated with each other through DAML or manually via OnCreateContent. If necessary, the <c>Content</c> property
            provides the view-model with access to the view.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.Impersonate(System.String)">
            <summary>
            Allows a Pane to override the state it sets when activated.
            </summary>
            <remarks>
            Panes set an implicit state within the overall application when activated. Many user interface elements
            respond to changes in application state; for example, different tabs appear depending on the type of Pane activated. When
            a Pane is activated, its DAML ID is by default added to application level State; the Impersonate
            method allows the Pane to override this behavior and instead specify a custom state.
            For example, when a Map is activated inside a Layout, the Layout impersonates a Map Pane so that all of the mapping 
            functionality will become available to the activated Map.
            </remarks>
            <param name="paneID">The state to impersonate. The state may be a custom setting or an implicit one like a Pane ID.</param>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Pane.Unimpersonate"/>
            <exception cref="T:System.ArgumentException">Thrown when an empty state is passed in.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.Unimpersonate">
            <summary>
            Stops the Pane from impersonating a different state.
            </summary>
            <see cref="M:ArcGIS.Desktop.Framework.Contracts.Pane.Impersonate(System.String)"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnCreateContent">
            <summary>
            Optional override to create the visible content of the control.
            </summary>
            <remarks>
            If the visible content (the View) of the Pane was not specified in DAML, 
            override this function to provide it.
            </remarks>
            <returns>The Pane's user interface.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnActivate(System.Boolean)">
            <summary>
            Called whenever the Pane is activated or deactivated.
            </summary>
            <param name="isActive">Has the Pane been activated or deactivated.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when any mouse button is pressed while the pointer is over this element.
            </summary>
            <param name="e">Provides data for mouse button related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when the mouse pointer moves while over this element. 
            </summary>
            <param name="e">Provides data for mouse related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Occurs when any mouse button is released over this element.
            </summary>
            <param name="e">Provides data for mouse button related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnDoubleClick(System.Windows.Input.MouseEventArgs)">
            <summary>
            Occurs when a mouse button is clicked two or more times. 
            </summary>
            <param name="e">Provides data for mouse related events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnPointerDown(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a pointer is pressed while over this element.
            </summary>
            <param name="e">Provides data for routed events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnPointerUp(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a pointer is released over this element.
            </summary>
            <param name="e">Provides data for routed events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnTouch(ArcGIS.Desktop.Framework.Events.TouchInputEventArgs)">
            <summary>
            Occurs when a touch event occurs over this element.
            </summary>
            <param name="e">Provides data for routed events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is pressed while focus is on this element. 
            </summary>
            <param name="k">Provides data for the key events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <summary>
            Occurs when a key is released while focus is on this element. 
            </summary>
            <param name="k">Provides data for the key events.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnContextMenu(System.Windows.Controls.ContextMenu)">
            <summary>
            Provides the Pane with the option to customize its ContextMenu before it is displayed.
            </summary>
            <param name="contextMenu">The default ContextMenu for the Pane.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnClosing(ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs)">
            <summary>
            Called when a request has been made to close the Pane.
            </summary>
            <remarks>
            <para>
            The Pane can decide to override and cancel the close request by setting the <see cref="P:ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs.Cancel"/> property to true.
            </para>
            </remarks>
            <param name="e">The <see cref="T:ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnFloated">
            <summary>
            Notification letting the Pane know it has been floated.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnDocked">
            <summary>
            Notification letting the Pane know it has been docked.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnClosed">
            <summary>
            Notification letting the Pane know it has been closed.
            </summary>
            <remarks>
            This is called after <see cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.UninitializeAsync"/>.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.OnHidden">
            <summary>
            Notification letting the Pane know it has been hidden.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.OperationManager">
            <summary>
            Gets the OperationManager associated with the Pane.
            </summary>
            <remarks>
            <para>
            Each Pane and DockPane instance by default has their own OperationManager which represents an operation stack. The application's undo/redo controls
            work with the current OperationManager which is established by the active window. When a Pane or DockPane is activated,
            its OperationManager is requested. Derived classes can use this method to provide their own OperationManager. For example, Map Panes representing
            a specific Map, all share the same OperationManager.
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.Secondary">
            <summary>
            This is for Esri internal use only.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.IsBusy">
            <summary>
            Gets a boolean to let clients know the Pane is currently processing a Task.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.ContentID">
            <summary>
            Allows derived classes to provide a unique identifier for the Pane. The DAML ID is returned by default.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.Close">
            <summary>
            Close the Pane.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.ToolElement">
            <summary>
            Gets or sets the Pane's HwndHost if applicable.
            </summary>
            <remarks>
            If your custom Pane ultimately hosts a <see cref="T:System.Windows.Interop.HwndHost"/>, use this
            property to give the framework access to the HwndHost so it may properly establish focus./>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.State">
            <summary>
            Gets the Pane's state table.
            </summary>
            <remarks>
            <para>
            Contextual elements in the application, tabs for example, respond to application state changes. The application's state consists of
            state tables maintained and merged from two levels: Application level state, and Pane level state. Each pane may have state 
            which is relevant only to that instance and should not be altered if the user simply switches to another pane; for example, 
            the current selection. For this reason, each pane instance maintains its own state table. The
            Application state and active Pane state tables are merged to create the current overall state.
            <example>
            <code>
            // Activate the feature selected state.
            _pane.State.Activate("esri_mapping_FeatureSelected");  
            </code>
            </example>
            </para>
            </remarks>
            <seealso cref="T:ArcGIS.Desktop.Framework.State"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.InstanceID">
            <summary>
            Gets the Framework assigned ID. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.FullCaption">
            <summary>
            Gets the Pane's Caption including its GroupID count.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.Caption">
            <summary>
            Gets or sets the Pane's caption.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.TabTooltip">
            <summary>
            Gets or sets the Pane's tab tooltip.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Pane.LoadingMessage">
            <summary>
            Gets or sets the message presented while the Pane is initializing.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.Activate">
            <summary>
            Makes the Pane the active Pane and active window.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Pane.Flash">
            <summary>
            Flashes the Pane's tab.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.PaneBase">
            <summary>
            Represents the base class for Panes and DockPanes. This is an abstract class.
            </summary>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.Pane"/>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.#ctor">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.OnKeyCommand(System.String)">
            <summary>
            Called during OnKeyDown if when a register shortcut matches.
            </summary>
            <param name="commandID"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.InitializeAsync">
            <summary>
            Called when the pane is first created to give it the opportunity to initialize itself asynchronously.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.UninitializeAsync">
            <summary>
            Called when the pane is closed to give it the opportunity to uninitialize itself asynchronously.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.OnDragOver(ArcGIS.Desktop.Framework.DragDrop.DropInfo)">
            <summary>
            Invoked when an object is dragged over the window. Implement this method to add class
            handling for this event.
            </summary>
            <remarks>
            OnDragOver is automatically called by the framework whenever an object is dragged
            onto a Pane or DockPane that is registered as a drop target (DAML <c>isDropTarget</c>). If the 
            pane wants to allow the drop, it must set the <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Effects"/> accordingly. 
            </remarks>
            <param name="dropInfo">The data being dragged over.</param>
            <seealso cref="T:ArcGIS.Desktop.Framework.DragDrop.DropInfo"/>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.OnDrop(ArcGIS.Desktop.Framework.DragDrop.DropInfo)"/>
            <seealso cref="T:System.Windows.DragDropEffects"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.OnDrop(ArcGIS.Desktop.Framework.DragDrop.DropInfo)">
            <summary>
            Invoked when an object is dropped onto the pane. Implement this method to add class
            handling for this event.
            </summary>
            <remarks>
            <para>
            Panes and DockPanes that have registered themselves as drop targets (DAML <c>isDropTarget</c>) and have set
            <c>DropInfo.Effects</c> appropriately in <c>OnDragOver</c>, are automatically called by the framework 
            whenever an object is dropped on them.
            </para>
            <example>
            <code lang="CS">
            public override void OnDrop(ArcGIS.Desktop.Framework.DragDrop.DropData dropData)
            {
              foreach (var item in dropData.Items)
              {
                if (System.IO.Path.GetExtension(item.Data as string) == ".txt")
                {
                  item.Handled = true;
                  ReadTextFile(item.Data as string);
                  return;
                }
              }
            }
            </code>
            </example>
            </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.OnDragOver(ArcGIS.Desktop.Framework.DragDrop.DropInfo)"/>
            <param name="dropInfo">The data being dropped.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PaneBase.Initialized">
            <summary>
            Gets a boolean indicating whether the pane has been fully initialized or not.
            </summary>
            <remarks>
            A pane is considered initialized after it has returned from <c>InitializeAsync</c>.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanCopyAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's Copy button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CopyAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CopyAsync">
            <summary>
            Called when the Copy command is clicked.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanCopyAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanCopyPathAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's CopyPath button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CopyPathAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyPathAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyPathAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CopyPathAsync">
            <summary>
            Called when the CopyPath command is clicked.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanCopyPathAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CopyPathAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCopyPathAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanPasteAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's Paste button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.PasteAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.PasteAsync">
            <summary>
            Called when the Paste command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanPasteAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.PasteSpecialAsync">
            <summary>
            Called when the PasteSpecial command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanPasteSpecialAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteSpecialAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteSpecialAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanPasteSpecialAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's PasteSpecial button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.PasteSpecialAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanPasteSpecialAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.PasteSpecialAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanCutAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's Cut button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CutAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCutAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CutAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CutAsync">
            <summary>
            Called when the Cut command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanCutAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CutAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanCutAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanDeleteAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's Delete button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.DeleteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.DeleteAsync">
            <summary>
            Called when the Delete command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanDeleteAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanDuplicateAsync">
            <summary>
            The active pane is constantly polled giving it the opportunity to enable the application's Duplicate button.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.DuplicateAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.DuplicateAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanDuplicateAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.DuplicateAsync">
            <summary>
            Called when the Duplicate command is executed.
            </summary>
            <remarks>
        To facilitate clipboard operations, the framework has created four commands (Copy, Paste, PasteSpecial, and Cut) that are
        registered to appear in the Clipboard group in several ribbon tabs. These commands, like most, are polled constantly
        for their enabled state. The unique feature about these commands is that they defer their logic to active window (<c>Pane</c> or <c>DockPane</c>)
        first and if this object returns false, they then consult each currently loaded module (until one returns true). For example, when a
        feature is selected in a map, the map pane may return false for <c>CanCopyAsync</c> but the Editing module, which has no pane
        of its own, may return true. The object that returns true for any of the ‘Can’ functions is the object that is called
        if the user clicks on the command.
      </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PaneBase.CanPasteAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanDuplicateAsync" />
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.Module.DuplicateAsync" />
            <returns>
        A Task so the main user interface thread is not blocked while processing this request.
      </returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.PlugIn">
            <summary>
            Represents the base class for most framework commands including <c>Button</c> and <c>Tool</c>. This is an abstract class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.Enabled">
            <summary>
            Gets or sets a boolean to specify whether the control is enabled. 
            </summary>
            <seealso cref="M:ArcGIS.Desktop.Framework.Contracts.PlugIn.OnUpdate"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.Caption">
            <summary>
            Gets or sets the command label as it appears in the ribbon and customize dialog.
            </summary>
            <remarks>
            <para>
            The Caption will by default return the caption attribute entered in its DAML declaration. Use this property if you 
            need to change the Caption at run-time.
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.Tooltip">
            <summary>
            Gets or sets a brief description of the command that appears in a small pop-up window when a user pauses the 
            mouse pointer over an element, such as over a Button.
            </summary>
            <remarks>
            <para>
            The Tooltip will by default return the tooltip text entered in its DAML declaration. Use this property if you 
            need to change the tooltip at run-time.
            </para>
            </remarks>
            <example>
            <code lang="XML">
            <pre>
            &lt;button id="acme_rename" caption="Rename" className="RenameProjectItem" smallImage="/Images/GenericPencil16.png"&gt;
              &lt;tooltip heading="Rename">Rename the project item.
                &lt;disabledText&gt;No project loaded.&lt;/disabledText&gt;
              &lt;/tooltip&gt;
            &lt;/button&gt;
            </pre>
            </code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.TooltipHeading">
            <summary>
            Gets or sets a one or two word label that appears above the tooltip.
            </summary>
            <remarks>
            <para>
            This property will by default return the tooltip attribute entered in its DAML declaration. Use this property if you 
            need to change the heading at run-time.
            </para>
            </remarks>
            <seealso cref="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.Tooltip"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.DisabledTooltip">
            <summary>
            Gets or sets the supplementary text that appears with the <c>Tooltip</c> only when the command is disabled.
            </summary>
            <remarks>
            <para>
            This property will by default return the <c>disabledText</c> text entered in its DAML declaration. Use this property if you 
            need to change the heading at run-time.
            </para>
            </remarks>
            <seealso cref="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.Tooltip"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.SmallImage">
            <summary>
            Gets or sets the small representation of the command, this may be an image or a xaml element.
            </summary>
            <remarks>
            <para>
            Many ribbon controls have three size definitions: large, middle, and small. The large representation is a 32x32
            image over its caption. Middle is a 16x16 image beside its caption and small is a 16x16 image only. You should 
            always supply both a large and small image as these may automatically swap depending on the available space in the 
            ribbon.
            </para>
            <para>
            This property will by default return the small image specified in its DAML declaration. Use this property if you 
            need to change the small image at run-time.
            </para>
            </remarks>
            <example>
            <code lang="XML">
            <pre>
            &lt;button id="acme_rename" caption="Rename" className="RenameProjectItem" smallImage="/Images/GenericPencil16.png"&gt;
              &lt;tooltip heading="Rename"&gt;Rename the project item.
                &lt;disabledText&gt;No project loaded.&lt;/disabledText&gt;
              &lt;/tooltip&gt;
            &lt;/button&gt;
            </pre>
            </code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.LargeImage">
            <summary>
            Gets or sets the large representation of the command, this may be an image or a xaml element.
            </summary>
            <seealso cref="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.SmallImage"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.PlugIn.ID">
            <summary>
            Gets the DAML identifier.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.PlugIn.OnUpdate">
            <summary>
            Called periodically by the framework once the tool has been created. 
            </summary>
            <remarks>
            <para>
            The OnUpdate method is called periodically by the framework once the control has been created. This provides an 
            opportunity to run some code within your customization. One typical use of OnUpdate is to determine 
            and set the <c>Enabled</c> property of the control. Note, since OnUpdate is called very frequently, you should avoid lengthy 
            operations in this method as this would reduce the responsiveness of the application user interface. 
            </para>
            <para>
            Control PlugIns are primarily enabled and disabled based on their associated condition. The control 
            object itself will not be loaded or created until its specified condition is initially met, and thereafter, OnUpdate 
            will not be called unless the supplied context is currently satisfied.  Note that the <c>loadOnClick</c> 
            attribute is checked after the <c>condition</c>, so delay loaded controls will still appear disabled if 
            their condition hasn’t yet been satisfied.
            </para>
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Spinner">
            <summary>
            Represents a control that can be used to display and edit doubles. This is an abstract class.
            </summary>
            <remarks>
            <para>
            Spinners edit doubles like an edit box except they additionally provide increment and decrement buttons and support a range 
            established with the minimum and maximum attributes. In DAML you can also specify a default value and an increment value. Use the format attribute to 
            specify how to display the double. For example, use 'C' to present a currency or F4 for a double with 4 decimals. In addition, use the suffix attribute
            to tag on a trailing string such as a '%' sign.
            </para>
            <para>
            Spinners do not support delay loading with loadOnClick, they are instantiated when they become visible.
            </para>
            <para>
            <list type="table">
            <listheader><term>DAML attributes</term></listheader>
            <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
            <item><term>caption</term><description>The heading.</description></item>
            <item><term>categoryRefID</term><description>Adds control to a specific component category.</description></item>
            <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
            <item><term>condition</term><description>Automatically disable the button if the condition is not satisfied.</description></item>
            <item><term>defaultValue</term><description>The initial value.</description></item>
            <item><term>disableIfBusy</term><description>Automatically disable the button if the application is busy. Default true.</description></item>
            <item><term>extendedCaption</term><description>A more descriptive title.</description></item>
            <item><term>format</term><description>The double format string, e.g. 'C' for currency and F4 to show 4 decimal places. Default is F2.</description></item>
            <item><term>helpContextID</term><description>The help topic to show.</description></item>
            <item><term>id</term><description>Required identifier.</description></item>
            <item><term>image</term><description>Image (16x16) used when spinner is middle and large sized.</description></item>
            <item><term>increment</term><description>The amount to add and subtract to the value when the increment and decrement buttons are clicked. Default is 1.0.</description></item>
            <item><term>maximum</term><description>The maximum value.</description></item>
            <item><term>minimum</term><description>The minimum value.</description></item>
            <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
            <item><term>suffix</term><description>Trailing string such as '%'.</description></item>
            <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
            <item><term>width</term><description>The width of the control.</description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Spinner.#ctor">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Spinner.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Spinner.OnValueChanged(System.Nullable{System.Double})">
            <summary>
            Invoked whenever the value changes.
            </summary>
            <param name="value">The new value.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.ViewModelBase">
            <summary>
            Base class for ViewModels. Implements INotifyPropertyChange.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.ViewModelBase.Model">
            <summary>
            Gets or sets the view-model's model object.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.Page">
             <summary>
             Represents a page inside a property sheet. This is an abstract class.
             </summary>
             <remarks>
        <para>
          Property sheets hold a collection of individual unrelated property pages. Each
          page contains controls for setting a group of related properties. A property sheet can be shown modal or modeless.
        </para>
        <para>
          Property sheets are purely declarative, they are defined only in DAML and have no corresponding managed class. Property
          pages, like <see cref="T:ArcGIS.Desktop.Framework.Contracts.Pane" />s and <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane" />s, have both declarative and active
          components. The active portion of all property pages must derive from this class.
        </para>
        <para>
          Property pages only load when they become visible. They are not loaded when the sheet loads - the
          page has to be visited.
          When a page does load, its <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsLoading" /> property is first set to true. Next, its
          <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.InitializeAsync" /> function is executed. When the returned task completes, its
          IsLoading is reset to false.
        </para>
        <para>
          Property pages have the option of being conditional. If a condition has been specified for the page in DAML, the
          page will not appear with the sheet unless its condition is currently satisfied.
        </para>
        <para>
          Pages can also be grouped within a sheet by setting the sheet's <code>hasGroups</code> attribute to true
          and specifying a group heading by setting the page's <code>group</code> attribute.
        </para>
        <para>
          When a property sheet is displayed with either <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.Show(System.String,System.String,System.Object[])" />
          or <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.ShowDialog(System.String,System.String,System.Object[])" />, data can be passed in as one of the arguments and
          this data can be accessed by all of its pages using the <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.Data" /> property.
        </para>
        <para>
          The property sheet dialog includes a title bar and several buttons: OK, Cancel, and Apply. The
          Apply button is only presented when the sheet is modeless. The OK button remains enabled as long as all
          pages report that they are valid, see <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsValid" />.
          The Apply button enables once any page in the sheet sets its <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsModified" /> property to true and all 
          page are valid. Once Apply or OK are clicked, each page that has set its IsModified flag to true will have its 
          <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.CommitAsync" /> invoked. Similarly, if the Cancel button is clicked, their <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.CancelAsync" /> is invoked.
        </para>
        <para>
          When a property sheet closes, each loaded page will have its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.Uninitialize" /> invoked.
        </para>
      </remarks>
             <remarks>
             <para>
             Declaring Pages in DAML:
            <code>
            <pre>
            &lt;insertSheet id="acme_mainSheet" caption="Test sheet"&gt;
              &lt;page id="acme_testPage" 
                    caption="test page" 
                    className="Pages.TestPage"&gt;
                &lt;content className="Pages.TestPageView"/&gt;
              &lt;/page&gt;
            &lt;/insertSheet&gt;
            </pre>
             </code>
             </para>
             <para>
             <list type="table">
             <listheader><term>DAML attributes</term></listheader>
             <item><term>assembly</term><description>Assembly name if not in the default assembly.</description></item>
             <item><term>caption</term><description>The default page heading.</description></item>
             <item><term>className</term><description>Required class identifier. Optionally include namespace if not in default namespace.</description></item>
             <item><term>condition</term><description>Only show the page in the sheet if the condition is valid.</description></item>
             <item><term>extendedCaption</term><description>A more descriptive title.</description></item>
             <item><term>group</term><description>Optional group heading.</description></item>
             <item><term>id</term><description>Required identifier.</description></item>
             <item><term>publicKeyToken</term><description>The necessary public key token if the assembly is strongly named.</description></item>
             <item><term>version</term><description>The version of the dll if the assembly is strongly named.</description></item>
             </list>
             </para>
             </remarks>
             <seealso cref="T:ArcGIS.Desktop.Framework.PropertySheet" />
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.#ctor">
            <exlude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.Uninitialize">
            <summary>
            Invoked before a page is destroyed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.CommitAsync">
            <summary>
            Invoked when the ok or apply button on the property sheet has been clicked.
            </summary>
            <remarks>
            This function is only called if the page has set its <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsModified"/> flag to true.
            </remarks>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.CancelAsync">
            <summary>
            Invoked when the cancel button on the property sheet has been clicked.
            </summary>
            <remarks>
            This function is only called if the page has set its <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsModified"/> flag to true.
            </remarks>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.InitializeAsync">
            <summary>
            Invoked when a page loads because it has become visible inside the sheet.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.ReinitializeAsync">
            <summary>
            Invoked when any Page in the sheet calls ReloadAsync.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.ReloadSheetAsync">
            <summary>
            Triggers a ReinitializeAsync call in each loaded Page in the sheet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.Page.ResetAsync">
            <summary>
            Invoked when the reset button on the property sheet has been clicked.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.IsModified">
            <summary>
            Gets or sets a boolean to notify the system that the page has been modified. 
            </summary>
            <remarks>
            <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.CommitAsync"/> and <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.CancelAsync"/> are only called if the page
            has set this property and <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsValid"/> to true.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.Parent">
            <summary>
            Gets or sets parent page of the page, if the property sheet is using a tree representation.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.Data">
            <summary>
            Gets or sets the data passed to the property sheet.
            </summary>
            <remarks>
            When a property sheet is displayed with either <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.Show(System.String,System.String,System.Object[])"/>
            or <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.ShowDialog(System.String,System.String,System.Object[])"/>, data can be passed in as one of the 
            arguments. This function allows each page to access the data.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.CanReset">
            <summary>
            Gets a flag to notify the system that the page can be reset. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.IsValid">
            <summary>
             Gets or sets a boolean notifying the application whether the page is valid or not.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.HasError">
            <summary>
             Gets or sets a boolean notifying the application whether the page produced an error during commit. If any page errors, the property sheet will not close during commit.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.Caption">
            <summary>
            Gets or sets the page's label as presented in the property sheet.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.IsLoading">
            <summary>
            Gets a boolean indicating if the page is currently loading.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.IsSelected">
            <summary>
            Gets or sets a boolean indicating if the page is currently selected.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.ID">
            <summary>
            Gets the page's DAML identifier.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.Page.IsEnabled">
            <summary>
            Gets or sets a boolean indicating if the page is currently enabled.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Contracts.WizardPage">
            <summary>
            Represents a page inside a wizard. This is an abstract class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.WizardPage.OnInitialize">
            <summary>
            Called when the page is first created to give it the opportunity to fully initialize itself. The Data member is set at this point. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.Data">
            <summary>
            Gets or sets the data passed to the wizard.
            </summary>
            <remarks>
            When a wizard is displayed using <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShowWizard(System.String,System.Object)"/>, data is passed in as one of the 
            arguments. This function allows each page to access the data.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.WizardPage.Dispose">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.ID">
            <summary>
            Gets the page's DAML identifier.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.Caption">
            <summary>
            Gets the page's label as presented in the wizard.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.Tooltip">
            <summary>
            Gets or sets the extra information about the page appearing in a pop-up window.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.InvalidTooltip">
            <summary>
            Gets or sets extra information about why the page is invalid. This text appears under the tooltip. If this property is left null, a default string is presented. 
            To not show any supplementary tooltip set this property to an empty string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.IsCurrentPage">
            <summary>
            Gets a boolean value of true if this page is the current page.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.IsValid">
            <summary>
            Override this function to indicate whether the page is valid or not.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.IsVisible">
            <summary>
            Set this property to change if the page is displayed in the wizard or not
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.WizardPage.CanJumpTo">
            <summary>
            Override this function to control whether the wizard can jump directly to this page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Contracts.WizardPage.GetNextPageID">
            <summary>
            Override this function if the page wants to override which page is next in the wizard.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Contracts.WizardPage.ClickCommand">
            <summary>
            Gets the command which, when executed, causes the CurrentPage 
            property to reference the next page in the workflow.  If the user
            is viewing the last page in the workflow, this causes the Wizard
            to finish and be removed from the user interface.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ApplicationStartupEvent">
            <summary>
            Occurs once the start-up sequence has fully completed and the splash screen has been hidden.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationStartupEvent.Subscribe(System.Action{System.EventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationStartupEvent.Unsubscribe(System.Action{System.EventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationStartupEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ApplicationReadyEvent">
            <summary>
            Occurs once the application has initialized itself.
            </summary>
            <remarks>
            This event fires before ApplicationStartupEvent.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationReadyEvent.Subscribe(System.Action{System.EventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationReadyEvent.Unsubscribe(System.Action{System.EventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationReadyEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ApplicationClosingEvent">
            <summary>
            Occurs when the the application is attempting to shutdown and can be handled to cancel the closure.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationClosingEvent.Subscribe(System.Func{System.ComponentModel.CancelEventArgs,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationClosingEvent.Unsubscribe(System.Func{System.ComponentModel.CancelEventArgs,System.Threading.Tasks.Task})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ApplicationClosingEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ActivePaneChangedEvent">
            <summary>
            Occurs when the active pane changes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActivePaneChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Framework.Events.PaneEventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActivePaneChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Framework.Events.PaneEventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActivePaneChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ActivePaneChangingEvent">
            <summary>
            Occurs when the active pane changes. This event fires before the application changes the current application state and current tool.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActivePaneChangingEvent.Subscribe(System.Action{ArcGIS.Desktop.Framework.Events.PaneEventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActivePaneChangingEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Framework.Events.PaneEventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActivePaneChangingEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.PaneEventArgs">
            <summary>
            Represents the current change in pane state. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.PaneEventArgs.IncomingPane">
            <summary>
            Gets the pane being activated.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.PaneEventArgs.OutgoingPane">
            <summary>
            Gets the pane being deactivated.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ActiveToolChangedEvent">
            <summary>
            Occurs when the active tool changes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActiveToolChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Framework.Events.ToolEventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActiveToolChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Framework.Events.ToolEventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActiveToolChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ToolEventArgs">
            <summary>
            Provides data for the ActiveToolChangedEvent.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.ToolEventArgs.CurrentID">
            <summary>
            Gets the DAML ID of the newly activated tool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.ToolEventArgs.PreviousID">
            <summary>
            Gets the DAML ID of the previously active tool.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ClipboardChangedEvent">
            <summary>
            Occurs when something is copied to the clipboard.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ClipboardChangedEvent.Subscribe(System.Action{System.EventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ClipboardChangedEvent.Unsubscribe(System.Action{System.EventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ClipboardChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs">
            <summary>
            Provides data for a cancelable event.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.CancelRoutedEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be canceled.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.ActiveWindowChangedEvent">
            <summary>
            Occurs when the active window changes. This can be a Pane or a Dockpane.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActiveWindowChangedEvent.Subscribe(System.Action{ArcGIS.Desktop.Framework.Events.WindowEventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActiveWindowChangedEvent.Unsubscribe(System.Action{ArcGIS.Desktop.Framework.Events.WindowEventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.ActiveWindowChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.DictionaryChangedEvent">
            <summary>
            Occurs when words are added or removed from the dictionary.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.DictionaryChangedEvent.Subscribe(System.Action{System.EventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.DictionaryChangedEvent.Unsubscribe(System.Action{System.EventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Events.DictionaryChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.WindowEventArgs">
            <summary>
            The active window.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.WindowEventArgs.Window">
            <summary>
            Gets the pane being activated.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Events.TouchInputEventArgs">
            <summary>
            Provides data for the Touch event.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Events.TouchInputEventArgs.InputCount">
            <summary>
            Gets the touch input count.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Notification">
             <summary>
             Represents a toast style notification.
             </summary>
             <remarks>
             <para>
             A toast notification is a transient message to the user that contains relevant, time-sensitive 
             information and provides quick access to related content in an application. Notifications appear 
             in the top right hand corner of the display and last for a few seconds unless the mouse pointer 
             is over top them. Up to four notifications can appear at the same time. If more than four notifications 
             are sent, each new notification bumps off the oldest one in the queue.
             </para>
             <para>
             Use <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.AddNotification(ArcGIS.Desktop.Framework.Notification)"/> to pop-up a new notification.
             </para>
             </remarks>
             <example>
             <code lang="CS">
             protected internal override void OnClick()
             {
               Notification notification = new Notification()
               {
                 Title = "Command completion",
                 Message = "Your task has completed",
                 ImageSource = (ImageSource)Application.Current["BexDog32"]
               };
            
               FrameworkApplication.AddNotification(notification);
             }
             </code></example>
             <seealso cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.AddNotification(ArcGIS.Desktop.Framework.Notification)"/>
             <seealso cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.RemoveNotification(ArcGIS.Desktop.Framework.Notification)"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Notification.#ctor">
            <summary>
            Initializes an empty instance of the <see cref="T:ArcGIS.Desktop.Framework.Notification"/> class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.Id">
            <summary>
            Gets or sets the framework assigned id.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.ImageUrl">
            <summary>
            Gets or sets the image to show. Use ImageSource if you have a resource.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.ImageSource">
            <summary>
            Gets or sets the image to show. ImageUrl must be null for this property to work properly.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.HelpTopic">
            <summary>
            Gets or sets the Help topic link. (optional)
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.HasHelpTopic">
            <summary>
            Gets if there is a help topic link.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.HelpText">
            <summary>
            Gets or sets the text accompanying the HelpTopic (if set).
            default: "Learn More..."
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Notification.OnClick">
            <summary>
            Occurs when a notification message is clicked by the user.
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.Notification.PropertyChanged">
            <summary>
            Occurs when a property is updated.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Notification.Severity">
            <summary>
            Toast notification severity
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Notification.SeverityLevel">
            <summary>
            Toast notification severity
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Notification.SeverityLevel.Low">
            <summary>
            Low severity notification is controled by the notification interval
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Notification.SeverityLevel.High">
            <summary>
            High severity notification is not controlled by the notificaiton interval
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Dialogs.MessageBox">
            <summary>
            Represents a dialog box for simple messages.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.String)">
            <summary>
             Displays a message box that has a message and that returns a result.  
            </summary>
            <param name="messageText"></param>
            <returns>Specifies which message box button the user clicked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.String,System.String)">
            <summary>
            Displays a message box that has a message and title bar caption; and that returns a result. 
            </summary>
            <param name="messageText">The message.</param>
            <param name="caption">The window caption.</param>
            <returns>Specifies which message box button the user clicked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.String,System.String,System.String)">
            <summary>
            Displays a message box that has a message and title bar caption; and that returns a result. 
            </summary>
            <param name="messageText">The message.</param>
            <param name="caption">The window caption.</param>
            <param name="helpContextID">Help ID.</param>
            <returns>Specifies which message box button the user clicked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Windows.Window,System.String)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message and returns a result. 
            </summary>
            <param name="owner">The parent window.</param>
            <param name="messageText">The message.</param>
            <returns>Specifies which message box button the user clicked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Windows.Window,System.String,System.String)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message and title bar caption; and it returns a result. 
            </summary>
            <param name="owner">The parent window.</param>
            <param name="messageText">The message.</param>
            <param name="caption">The window caption.</param>
            <returns>Specifies which message box button the user clicked.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            Displays a message box that has a message, title bar caption, and button; and that returns a result. 
            </summary>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and it also returns a result. 
            </summary>
            <param name="owner"></param>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays a message box that has a message, title bar caption, button, and icon; and that returns a result. 
            </summary>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; 
            and it also returns a result. 
            </summary>
            <param name="owner"></param>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; 
            and accepts a default message box result and returns a result. 
            </summary>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <param name="defaultResult"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.String)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; 
            and accepts a default message box result, complies with the specified options, and returns a result. 
            </summary>
            <param name="owner"></param>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <param name="defaultResult"></param>
            <param name="helpContextID"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Boolean@,System.String,System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.String)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a checkbox where users may 
            opt to disable its appearance in the future.  
            The message box also displays a message, title bar caption, button, and icon. 
            The caller may also specify a default message box result. 
            On return, the ref Boolean argument will be set to true if the checkbox was checked by the user. 
            </summary>
            <param name="noRemind"></param>
            <param name="checkBoxMessage"></param>
            <param name="owner"></param>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <param name="defaultResult"></param>
            <param name="helpContextID"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.String,System.String,System.String)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; 
            and accepts a default message box result, complies with the specified options, and returns a result. 
            </summary>
            <param name="owner"></param>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <param name="defaultResult"></param>
            <param name="helpContextID"></param>
            <param name="moreInfoText"></param>
            <param name="helpLinkText"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.MessageBox.Show(System.Boolean@,System.String,System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.String,System.String,System.String)">
            <summary>
            Displays a message box in front of the specified window. The message box displays a checkbox where users may 
            opt to disable its appearance in the future.  
            The message box also displays a message, title bar caption, button, and icon. 
            The caller may also specify a default message box result. 
            On return, the ref Boolean argument will be set to true if the checkbox was checked by the user. 
            </summary>
            <param name="noRemind"></param>
            <param name="checkBoxMessage"></param>
            <param name="owner"></param>
            <param name="messageText"></param>
            <param name="caption"></param>
            <param name="button"></param>
            <param name="icon"></param>
            <param name="defaultResult"></param>
            <param name="helpContextID"></param>
            <param name="moreInfoText"></param>
            <param name="helpLinkText"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc">
            <summary>
            C# definition of the IMalloc interface.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc.Alloc(System.UInt32)">
            <summary>
            Allocate a block of memory
            </summary>
            <param name="cb">Size, in bytes, of the memory block to be allocated.</param>
            <returns>a pointer to the allocated memory block.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc.Realloc(System.IntPtr,System.UInt32)">
            <summary>
            Changes the size of a previously allocated memory block.
            </summary>
            <param name="pv">Pointer to the memory block to be reallocated</param>
            <param name="cb">Size of the memory block, in bytes, to be reallocated.</param>
            <returns>reallocated memory block</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc.Free(System.IntPtr)">
            <summary>
            Free a previously allocated block of memory.
            </summary>
            <param name="pv">Pointer to the memory block to be freed.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc.GetSize(System.IntPtr)">
            <summary>
            This method returns the size, in bytes, of a memory block previously allocated with IMalloc::Alloc or IMalloc::Realloc.
            </summary>
            <param name="pv">Pointer to the memory block for which the size is requested</param>
            <returns>The size of the allocated memory block in bytes.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc.DidAlloc(System.IntPtr)">
            <summary>
            This method determines whether this allocator was used to allocate the specified block of memory.
            </summary>
            <param name="pv">Pointer to the memory block</param>
            <returns>
            1 - allocated 
            0 - not allocated by this IMalloc Instance.
            -1 if DidAlloc is unable to determine whether or not it allocated the memory block.
            </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Dialogs.Interop.IMalloc.HeapMinimize">
            <summary>
            Minimizes the heap by releasing unused memory to the operating system.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.AddInInfo">
            <summary>
            Add-in metadata. 
            </summary>
            <remarks>
            Use <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.GetAddInInfos"/> to retrieve the collection of currently loaded add-ins.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Name">
            <summary>
            Gets and sets the add-in's name.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Description">
            <summary>
             Gets and sets the add-in's description.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.ImagePath">
            <summary>
             Gets and sets the path to the add-ins specified image.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Author">
            <summary>
             Gets and sets the add-in author.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Company">
            <summary>
             Gets and sets the company publishing the add-in.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Date">
            <summary>
             Gets and sets the add-in's publishing date.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Version">
            <summary>
             Gets and sets the add-in's version number.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.FullPath">
            <summary>
             Gets and sets the full path to the add-in.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.DigitalSignature">
            <summary>
             Gets and sets the digital signature status (none, authenticated, invalid, or untrusted).
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.IsCompatible">
            <summary>
             Gets and sets whether or not the add-in is compatible with the running version of ArcGIS Pro.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.IsDeleted">
            <summary>
             Gets and sets whether or not the add-in has been deleted during the current ArcGIS Pro session.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.TargetVersion">
            <summary>
             Gets and sets the version of ArcGIS Pro the add-in targets.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.ErrorMsg">
            <summary>
             Gets and sets error messages reported during processing of the add-in.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.ID">
            <summary>
             Gets and sets the add-in's ID.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.AddInInfo.Image">
            <summary>
             Gets and sets the add-in's image.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.State">
             <summary>
             
             </summary>
             <remarks>
             <para>
             The framework incorporates a mechanism for triggering the activation of customizations based on 
             user defined conditions. Unlike classic events or callbacks, the binding between condition and 
             customizations is provided statically (declaratively) using DAML.  This mechanism provides a simplified 
             and declarative means for expressing when various GUI elements such as ribbon tabs, dock panes, 
             buttons and tools should and shouldn’t be visible or enabled within the application. Using 
             conditions also ensures that code modules and their associated resources are loaded and consumed 
             only when they are relevant, a feature that is critical to scalability, efficiency, and fast 
             application startup. The use of Conditions and State also simplifies coding by greatly reducing the 
             need for complex and largely redundant event wiring associated with more traditional models.
             </para>
             <para>
             States are named Boolean values which symbolize a particular aspect of the application’s overall status; 
             for example, whether a particular view is active, or whether a particular type of feature is selected. 
             States are declared using ordinary character strings; to avoid name collisions, they are typically named 
             using the Plugin naming convention
             </para>
             <para>
             Conditions are DAML expressions composed of one or more states, such as (A or B), where both A and B 
             are states. Conditions themselves are named so that they can be referenced by those DAML elements which 
             permit the use of conditions; for instance, a custom ribbon tab can be caused to show up on the ribbon 
             only when a map view is active, and hide when any other type of view is active
             </para>
             <para>
             DECLARING STATES AND CONDITIONS:
             </para>
             <para>
             States and Conditions are declared using DAML elements as follows:
             </para>
             <para>
             A simple condition (consisting of only one state):
             </para>
             <para>
             <code>
             <pre>
            &lt;conditions&gt;
              &lt;insertCondition id="aSimpleCondition"&gt; 
               &lt;state id="someState"/&gt; 
              &lt;/insertCondition&gt;
            &lt;/conditions&gt;
            </pre>
            </code>
             </para>
             <para>
             A more complex condition:
             </para>
             <para>
             <code>
             <pre>
            &lt;conditions&gt;
              &lt;insertCondition id="aMoreComplexCondition"&gt; 
                &lt;and&gt;
                  &lt;state id="someState"/&gt; 
                  &lt;or/&gt;
                    &lt;state id="someOtherState"/&gt;
                    &lt;state id="yetAnotherState"/&gt;
                  &lt;/or/&gt;
                &lt;and&gt;
              &lt;/insertCondition&gt;
            &lt;/conditions&gt;
            </pre>
            </code>
             </para>
             <para>
             The above condition evaluates to (someState AND (someOtherState OR yetAnotherState)). 
             </para>
             <para>
             Conditions are defined at the root level in the DAML file—outside the scope of any extension block—since 
             they are simply expressions (without an active aspect), and do not need to be associated with any 
             controlling extension; conditions should be considered global in scope.  The Boolean operators And, Or, 
             and Not can be combined recursively to form complex conditional expressions if necessary, but conditions 
             themselves cannot be used (recursively) in place of  states within another Condition block.  
             </para>
             <para>
             Conditions are associated with a particular Plugin using the Condition attribute:
             </para>
             <para>
             The specified custom dockpane appears only when active view is a map view.
             </para>
             <para>
             The specified custom dockpane appears only when active view is a map view.
             <code>
             <pre>
             &lt;dockpane id="myDockPane" condition="esri_mapping_MapView"/&gt;
            </pre>
            </code>
             </para>
             <para>
             STATE ACTIVATION
             </para>
             <para>
             The framework defines a fixed set of activation behaviors which can be triggered using conditions. States are 
             maintained in state tables, where state is said to be activated if the state exists in the table, and 
             deactivated otherwise. While the application runs, the state tables within the framework are periodically 
             monitored for changes. When a change is detected, the tables are matched against any conditions currently 
             defined, and the appropriate activation (or deactivation) is triggered in response.
             </para>
             <para>
             <list type="table">
             <listheader>
             <term></term>
             <term>Plugin Type</term>
             <term>Framework Provided Activation</term>
             </listheader>
             <item>
             <term>Ribbon Tab</term>
             <description>
             Tab is shown or hidden based on the associated condition.  When the Tab first appears, other 
             objects which appear on the tab may load if they are visible.</description>
             </item>
             <item>
             <term>DockPane</term>
             <description>
             DockPanes can initially be shown based on the associated condition. The DockPane object itself will 
             not be loaded or created until the condition is initially met. DockPanes are not automatically
             hidden when their condition no longer matches.</description>
             </item>
             <item>
             <term>Controls (Buttons, Tools, Etc.)</term>
             <description>
             Control Plugins are enabled and disabled based on their associated condition. The Control Plugin object 
             itself will not be loaded or created until the condition is initially met, and thereafter, OnUpdate will 
             not be called unless the supplied context is currently satisfied.  Note that the loadOnClick attribute 
             is checked after the Condition, so loadOnClick controls will still appear disabled if their Condition 
             hasn’t yet been satisfied..</description>
             </item>
             <item>
             <term>Property Page</term>
             <description>
             A property sheet contains a collection of property pages. The sheet will not show pages that specify a 
             condition that is not met.</description>
             </item>
             </list>
             </para>
             <para>
             IMPLICIT AND EXPLICIT STATE
             </para>
             <para>
             States can be either implicit or explicit. Implicit states are those which are intrinsically defined and 
             controlled by the framework itself; these states are activated and deactivated automatically. 
             </para>
             <para>
             The framework currently defines the following implicit states:
             <list type="table">
             <listheader>
             <term></term>
             <term>Implicit State</term>
             <term>Details</term>
             </listheader>
             <item>
             <term>Active Pane</term>
             <description>
             The ID of the active Pane is designated as an implicit state and activated when the pane is active.
             </description>
             </item>
             <item>
             <term>Active Tab</term>
             <description>
             The ID of the active Tab is designated as an implicit state and activated when the tab is active.
             </description>
             </item>
             <item>
             <term>Active Tool</term>
             <description>
             The ID of the active Tool is designated as an implicit state and activated when the tool is active.
             </description>
             </item>
             <item>
             <term>Module Loaded</term>
             <description>
             When a module is loaded, its ID is designated as an implicit state and activated. When unloaded, its ID is deactivated.
             </description>
             </item>
             </list>
             </para>
             <para>
             Explicit states are set manually using developer supplied code; the meanings of these states are usually 
             defined by the developer and used to identify more specific types of context such as custom modes; i.e.: "I’m editing", 
             or a custom status: "a raster layer is selected in the TOC."
             </para>
             <para>
             Explicit state changes are made by calling Activate or Deactivate on the State object.
             <code>
             <pre>
             // Called when a raster layer is selected.
             State.Activate("esri_core_RasterLayerSelected");  
            
             // Called when editing mode is exited.
             State.Deactivate("esri_core_EditingModeExited");  
             </pre>
             </code>
             </para>
             <para>
             LOCALITY OF STATE
             </para>
             <para>
             State tables are maintained at two levels within the framework: Application level state, and Pane level state. 
             Applications built with the framework are primarily pane centric applications, and as such the framework is 
             designed to support several independent activities, each potentially associated with different pane instances. 
             Each pane may have state which is relevant only to that instance and should not be altered if the user simply 
             switches to another pane; e.g. the current selection or current tool. For this reason, each pane instance 
             maintains its own state table accessible via the Pane class:
             <code>
             <pre>
             // Deactivate a state associated with a particular view.
             Pane.State.Deactivate("esri_mapping_FeatureSelected");
             </pre>
             </code>
             </para>
             <para>
             Application level state contains global state relevant to the application as a whole such as which view is 
             currently active, or whether a particular extension is currently loaded. Application level state is accessed 
             via the Application class:
             <code>
             <pre>
             // Activate a state associated the application as a whole.
             Application.State.Activate("esri_mapping_DigitizerEnabled");  
             </pre>
             </code>
             </para>
             <para>
             During condition matching, the framework will always consider the state associated with application level, 
             as well as the state associated with the currently active pane; thus a condition will be satisfied if its 
             expression evaluates positively on the combination of these two tables.  It is important to activate or
             deactivate state at the appropriate level (depending on the type of state).
             </para>
             </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.State.Activate(System.String)">
            <summary>
            Adds the specified state to the state set.
            </summary>
            <param name="stateID">The state string identifier.</param>
            <seealso cref="T:ArcGIS.Desktop.Framework.State"/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.State.Deactivate(System.String)">
            <summary>
            Removes the specified state from the state set.
            </summary>
            <param name="stateID">The state string identifier.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.State.Contains(System.String)">
            <summary>
            Returns whether the specified state is turned on in the state set.
            </summary>
            <param name="stateID">The state string identifier.</param>
            <returns></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.State.NoState">
            <summary>
            Gets a boolean indicating true if state set is empty.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.CustomizeQATPage">
            <summary>
            Interaction logic for CustomizeQATPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CustomizeQATPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.CustomizePage">
            <summary>
            Interaction logic for CustomizePage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CustomizePage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.CustomizeDialog.RenameDialog">
            <summary>
            Interaction logic for RenameDialog.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CustomizeDialog.RenameDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.FrameworkWindow">
            <summary>
            Interaction logic for Shell.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkWindow.OnStateChanged(System.EventArgs)">
            <summary>
            Occurs when the state of the window changes.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.IConvertibleTo`1">
             <summary>
             This class is intended for internal use only.
             </summary>
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.IConvertibleTo`1.Convert">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.FrameworkApplication">
            <summary>
            Encapsulates the ArcGISPro application.
            </summary>
            <remarks>
            <para>
            The FrameworkApplication object is the central object in the Framework API. Its main purpose is to pull together all of the extensions
            and add-ins into one application. The FrameworkApplication encapsulates application-specific functionality, including the following::
            <list type="bullet">
            <item>
            <description>Access to the modules, commands, backstage, panes, and dock panes.</description>
            </item>  
            <item>
            <description>The application state.</description>
            </item>
            <item>
            <description>The event aggregator.</description>
            </item>
            <item>
            <description>Customization filters.</description>
            </item>  
            <item>
            <description>Custom drop handlers.</description>
            </item> 
            <item>
            <description>Notifications.</description>
            </item> 
            <item>
            <description>The help system.</description>
            </item>  
            </list>
            </para>
            <para>
            The FrameworkApplication class follows the singleton pattern to provide easy access to its functionality.
            </para>
            </remarks>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.FrameworkApplication._solutionName">
            <exclude></exclude>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.FrameworkApplication._licenseAcquireTime">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.Spell_SetLanguage(System.String)">
            <summary>
            Sets the spell check language.
            </summary>
            <param name="language"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.#ctor">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnStartup(System.Windows.StartupEventArgs)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnApplicationReady">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnExit(System.Windows.ExitEventArgs)">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ApplicationProperties">
            <summary>
            Gets the application properties.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.HideMiniToolbar">
            <summary>
            Hides all minitoolbars.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.IsRibbonMinimized">
            <summary>
            Gets or sets whether the ribbon is currently minimized.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.IsBackstageOpen">
            <summary>
            Gets whether the application backstage is open.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.IsActive">
            <summary>
            Gets whether the application is the active application.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShowHelpTopic(System.String)">
            <summary>
            Shows the help topic associated with the specified helpContextID. 
            </summary>
            <param name="helpContextID">The help topic's unique identifier.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.Close">
            <summary>
            Closes the application.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.IsBusy">
            <summary>
            Gets a boolean value of true indicating the application is currently busy.
            </summary>
            <remarks>
            <para>
            The application is considered busy if a task is currently running on the main worker thread or any pane or dock pane reports that it is initializing or busy.
            </para>
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ScaleFactor">
            <summary>
            Get or sets the current user interface scaling factor. 
            </summary>
            <remarks>
            A valid value is between 1.0 and 2.0, the default is 1.0. Restart the program for your scale changes to take effect.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ApplicationTheme">
            <summary>
            Gets or sets the application's theme that dictates its visual style. Three themes are supported: default (metro), dark, and high contrast.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.FloatingWindowName">
            <summary>
            Gets the default floating window name.
            </summary>
            <remarks>Used as a floating window's title.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.Name">
            <summary>
            Gets or sets the application's name which is displayed in the application's title bar. Note, the title bar will switch to the Title property 
            if it is not empty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.SubTitle">
            <summary>
            Gets or sets the application's SubTitle.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.Title">
            <summary>
            Gets or sets the application's Title.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.DockPaneManager">
            <summary>
            Gets all the active dockpane instances; this singleton also lets
            you activate, create, and close dockpanes.
            </summary>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.Panes">
            <summary>
            Gets all the active pane instances; this singleton also lets you 
            activate, create, and close panes.
            </summary>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.Pane"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.Initialized">
            <summary>
            Gets true once the application shell has been loaded and a license has been acquired.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the application's user interface is currently enabled.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.FlowDirection">
            <summary>
            Gets the content flow direction for text and user interface elements.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.State">
            <summary>
            Gets the application's state object. 
            </summary>
            <seealso cref="P:ArcGIS.Desktop.Framework.FrameworkApplication.State"/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.EventAggregator">
            <summary>
            Gets the application's event aggregator. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.FindModule(System.String)">
            <summary>
            Returns the specified module; the module is loaded if necessary.
            </summary>
            <param name="id">The module's DAML identifier.</param>
            <returns>The specified module.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.CurrentTool">
            <summary>
            Gets or sets the application's current tool. Only one tool is active at a time.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.OutgoingTool">
            <summary>
            Gets the Outgoing tool. This is set when <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.SetCurrentToolAsync(System.String)"/> is called.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.IncomingTool">
            <summary>
            Gets the Incoming tool.  This is set when <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.SetCurrentToolAsync(System.String)"/> is called.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ActiveTool">
            <summary>
            Gets the application's current tool. Only one tool is active at a time.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.SetCurrentToolAsync(System.String)">
            <summary>
            Activates the specified tool.
            </summary>
            <remarks>
            Setting the application's current tool is asynchronous as tools often need to initialize themselves on the primary worker
            thread before they are ready for use.
            </remarks>
            <param name="id">The tool's DAML identifier.</param>
            <returns>Returns an awaitable task which, when complete, indicates the tool is fully initialized and ready for use.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShowWizard(System.String,System.Object)">
            <summary>
            Opens the specified wizard.
            </summary>
            <param name="id">The DAML identifier of the wizard to show.</param>
            <param name="data">The data the wizard may require.</param>
            <returns>A Nullable Boolean that specifies whether the wizard activity was accepted (true) or canceled (false).</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.CloseBackstage">
            <summary>
            Closes the backstage.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OpenBackstage(System.String)">
            <summary>
            Opens the backstage.
            </summary>
            <param name="id">Optional tab DAML identifier the backstage should open on.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ContextMenuDataContext">
            <summary>
            Gets the contextual data that is passed to the commands in a context menu.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ContextMenuDataContextViewModel">
            <summary>
            Gets the current context menu's default data context as a view-model. This is for Esri internal use only.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ContextMenuDataContextAs``1">
            <summary>
            Gets the contextual data as the requested type T. Contextual data represents the selected item (or items) that is passed 
            to a command when executing that command on a context menu.  
            </summary>
            <remarks>
            Use this method to obtain the context in a specific situation.  Only certain contextual situations are supported.
            If not supported, then null will be returned.
            One example of a supported situation is the treeview of the attributes window. it displays the features currently selected in the map.
            If you add a custom button to the context menu of the Attributes window you can retrieve the 
            information of the feature(s) highlighted in the treeview when your button is executed by using this function
            as follows  FrameworkApplication.ContextMenuDatacontextAs&lt;SelectionSet&gt;.
            The features highlighted will be returned as a SelectionSet.
            </remarks>
            <returns>The contextual data as a T if supported, null otherwise.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.CreateContextMenu(System.String,System.Func{System.Object})">
            <summary>
            Creates a WPF context menu.
            </summary>
            <param name="menuID">The DAML menu identifier.</param>
            <param name="property"></param>
            <returns>A new ContextMenu object.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.CreateContextMenu(System.String,System.String,System.Func{System.Object})">
            <summary>
            Creates a WPF context menu.
            </summary>
            <param name="menuID">The DAML menu identifier.</param>
            <param name="toolbarID">The DAML identifier of the minitoolbar to optionally show with the menu.</param>
            <param name="property">The DataContext for the menu.</param>
            <returns>A ContextMenu.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.CreateContextMenu(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a WPF context menu.
            </summary>
            <param name="menuIDs">The set of DAML menu identifier.</param>
            <returns>A ContextMenu</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ActiveTab">
            <summary>
            Gets the DAML identifier of the currently active ribbon tab.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ActivateTab(System.String)">
            <summary>
            Activates the specified ribbon tab.
            </summary>
            <param name="id">The DAML tab identifier.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ActivateWindow">
            <summary>
            Focuses the main window.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShutdownAsync">
            <summary>
            Try to shut down the application.
            </summary>
            <remarks>
            This method first fires 
            the ApplicationClosingEvent giving all clients an opportunity to cancel the shutdown. If no event sink rejects 
            the shutdown request, the loaded Modules are consulted (see <see cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanUnload"/> for their status.
            A Module may block the application from closing if it has pending edits for example.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShutdownAsync(System.Boolean)">
            <summary>
            Try to shut down the application.
            </summary>
            <remarks>
            This method first fires 
            the ApplicationClosingEvent giving all clients an opportunity to cancel the shutdown. If no event sink rejects 
            the shutdown request, the loaded Modules are consulted (see <see cref="M:ArcGIS.Desktop.Framework.Contracts.Module.CanUnload"/> for their status.
            A Module may block the application from closing if it has pending edits for example.  In this overload, the caller
            passes a Boolean argument to indicate whether the application should be immediately restarted after shutdown completes.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.GetPlugInWrapper(System.String,System.Boolean)">
            <summary>
            Returns a run-time wrapper around the specified DAML component.
            </summary>
            <param name="id">The DAML control identifier.</param>
            <param name="create">Load the component if it hasn't been created yet.</param>
            <returns>A </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ExecuteCommand(System.String)">
            <summary>
            Obtains a function that can be used to execute the specified command.
            </summary>
            <param name="id">The DAML control identifier.</param>
            <returns>An invocable function.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ExecuteCommandArgs(System.String)">
            <summary>
            Obtains a function that can be used to execute the specified command with arguments.
            </summary>
            <param name="id">The DAML control identifier.</param>
            <returns>An invocable function with arguments.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.AddNotification(ArcGIS.Desktop.Framework.Notification)">
            <summary>
            Presents a notification.
            </summary>
            <param name="notification">The Notification to show.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.NotificationInterval">
            <summary>
            Define the time span in seconds for showing the same notification to limit the toast display frequency.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.RemoveNotification(ArcGIS.Desktop.Framework.Notification)">
            <summary>
            Removes the specified notification.
            </summary>
            <param name="notification">The Notification to hide.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.RegisterCustomizationFilter(ArcGIS.Desktop.Framework.Contracts.CustomizationFilter)">
            <summary>
            Adds the supplied customization filter to the application's customization model. 
            </summary>
            <remarks>
            CustomizationFilters give developers the opportunity to limit functionality. Before any DAML defined command is executed, the
            registered CustomizationFilters are consulted; if any filter returns <c>true</c>, the sequence is stopped and the command
            is not executed.
            </remarks>
            <param name="filter">The custom filter that will receive notifications.</param>
            <returns>Returns true if the filter was successfully registered.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.UnregisterCustomizationFilter(ArcGIS.Desktop.Framework.Contracts.CustomizationFilter)">
            <summary>
            Removes the specified customization filter from the application's customization model.
            </summary>
            <param name="filter">Returns true if the filter was successfully disconnected.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.GetAddInInfos">
            <summary>
            Returns a collection of AddInfos representing the currently loaded add-ins.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.RegisterUnlicensedProducts">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.AdminCheckForUpdatesAtStartup">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ActiveWindow">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Framework.Contracts.Pane"/> or <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/> that is currently active.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.AppName">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.SetCurrentCulture(System.String)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShutdownServices">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShutdownBGLGraphics">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.WaitForReady(System.Int32)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.CheckForUpdate">
            <summary>
            Checks if a newer version of the software is available for download
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnCheckLicenseAsync">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.EnableHelp">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.ShowWindow">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.PreInitialize">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.InitializeSignOn">
            <exclude></exclude>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.Initialize">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnShowF1Help(System.String)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnHelp">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.AdminSecurityLevel">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.UserSecurityLevel">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.ConfigSecurityLevel">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.BlockUserAddInOverrides">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.LayoutFile">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.SaveLayoutFile">
            <exclude/>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.FrameworkApplication.TestMode">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.CanSuppressNotification(ArcGIS.Desktop.Framework.Notification)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnPrepareForShutdownAsync">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnConfigure(ArcGIS.Desktop.Framework.Contracts.IConfigureCustomizations)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnShowSplashScreen(System.Boolean)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnShowStartPage">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnUpdateWindowControls">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.IsApplicationReady">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.OnStartupComplete">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.DDEIsTopicSupported(System.String)">
            <summary>
            This is for Esri internal use only.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.DDEExecuteCommand(System.String,System.String)">
            <summary>
            This is for Esri internal use only.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.FrameworkApplication.QueueIdleAction(System.Action)">
            <summary>
            Queues an action that will be performed when the application next
            enters an idle state where the user is not interacting with a modal
            dialog or performing any activity that might conflict with the specified action.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.ApplicationTheme">
            <summary>
            The application's theme dictates its visual style.
            </summary>
            <seealso cref="P:ArcGIS.Desktop.Framework.FrameworkApplication.ApplicationTheme"/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.ApplicationTheme.Default">
            <summary>
            Default theme.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.ApplicationTheme.Dark">
            <summary>
            Dark theme.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.ApplicationTheme.HighContrast">
            <summary>
            Used in high contrast mode.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.EueiRegionEnum">
            <summary>
            Euei's region list.
            </summary>
            <seealso cref="P:ArcGIS.Desktop.Framework.FrameworkApplication.EueiRegion"/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.EueiRegionEnum.NorthAmerica">
            <summary>
            North America region.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.EueiRegionEnum.EU">
            <summary>
            European Union region.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.IFrameworkWindow">
            <summary>
            Identifies framework windows (panes and dock panes) that support operations and activation.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IFrameworkWindow.OperationManager">
            <summary>
            A collection of operations that users can undo and redo.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.IFrameworkWindow.Activate">
            <summary>
            Make this window the active window.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.ICommandSearch">
            <summary>
            Enables a window to support the Command Search pattern.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.ICommandSearch.GetSuggestedCMDIDs(System.String)">
            <summary>
            The list of Command Search Suggestion IDs
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.ApplicationProperties">
            <summary>
            Application level properties.
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.ApplicationProperties.PropertyChanged">
            <summary>
            Occurs when a property is updated.  
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.IsSpellCheckingEnabled">
            <summary>
            Gets or sets boolean to indicate if spell checking is turned on.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.IsSpellCheckLocked">
            <summary>
            Gets if spell check is locked
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.DictionaryLanguage">
            <summary>
            Gets or sets localization/globalization language information for spell checking.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.DefaultPolygonSymbolXml">
            <summary>
            Gets and sets the default polygon symbol xml.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.DefaultLineSymbolXml">
            <summary>
            Gets and sets the default line symbol xml.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.DefaultPointSymbolXml">
            <summary>
            Gets and sets the default point symbol xml.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.ApplicationProperties.DefaultTextSymbolXml">
            <summary>
            Gets and sets the default text symbol xml.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Commands">
            <summary>
            Collection of all Commands (tabs, groups, controls)
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.CommandType">
            <summary>
            The component type.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Button">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Tool">
            <summary>
            Tool
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.EditBox">
            <summary>
            Editbox
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.ComboBox">
            <summary>
            Combobox
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.CheckBox">
            <summary>
            Checkbox
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Gallery">
            <summary>
            Gallery
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Menu">
            <summary>
            Menu
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Ribbon">
            <summary>
            Ribbon
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Tab">
            <summary>
            Tab
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Group">
            <summary>
            Tab Group
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.SplitButton">
            <summary>
            SplitButton
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.LabelControl">
            <summary>
            Label
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Palette">
            <summary>
            Palette
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Spinner">
            <summary>
            Spinner 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.DynamicMenu">
            <summary>
            Dynamic menu
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Custom">
            <summary>
            Custom control
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Toolbar">
            <summary>
            Toolbar
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.MiniToolbar">
            <summary>
            Mini toolbar
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.CommandType.RadialMenu">
            <summary>
            Radial Menu
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.IPlugInWrapper">
            <summary>
            The public interface for DAML defined controls.
            </summary>
            <remarks>
            Controls defined in DAML and added to the ribbon control are not directly accessible
            by other clients. Instead, 3rd parties can use <see cref="M:ArcGIS.Desktop.Framework.FrameworkApplication.GetCommandWrapper(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/> to 
            access a limited set of functionality such as updating a command's caption at run-time.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.Caption">
            <summary>
            Gets or sets the visible name.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.DisabledTooltip">
            <summary>
            Gets or sets the tooltip when the plug-in is disabled.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.Enabled">
            <summary>
            Gets a boolean value indicating if the plug-in is enabled in the user interface.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.LargeImage">
            <summary>
            Gets or sets the image the plug-in should use in the user interface when it is in its large state (32x32).
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.SmallImage">
            <summary>
            Gets or sets the image the plug-in should use in the user interface when it is in its small state (16x16).
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.Tooltip">
            <summary>
            Gets or sets the text to appear in a pop-up window to give more information about the plug-in.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.TooltipHeading">
            <summary>
            Gets or sets the caption to appear above the tooltip in a pop-up window to give more information about the plug-in.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.Checked">
            <summary>
            Gets or sets the checked state of the plug-in if applicable.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.CommandType">
            <summary>
            Gets the type of plug-in.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.Children">
            <summary>
            Gets the DAML IDs of all child controls if applicable.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.IsRelevant">
            <summary>
            Gets a boolean value of true if the plugin is currently contextually relevant.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.IPlugInWrapper.Keytip">
            <summary>
            Gets the DAML Keytip text.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.RelayCommand">
            <summary>
            An implementation of ICommand.
            </summary>
            <remarks>
            <para>
            RelayCommands are helpful in decoupling the user interface from the logic that needs to run when a button is clicked
            for example.
            </para>
            <para>
            The framework's RelayCommand implementation is special in that by default it will add the command to the application's 
            main message pump meaning its CanExecute function will automatically be called several times a second. If you do not
            need this behavior, set <code>supportsOnUpdate</code> to false in the appropriate constructor. If you do use this behavior,
            make sure you <see cref="M:ArcGIS.Desktop.Framework.RelayCommand.Disconnect"/> the command from the pump when your dialog closes.
            </para>
            <para>
            RelayCommands automatically disable whenever the primary worker thread is busy. To override this behavior set
            <code>disableWhenBusy</code> to false in the appropriate constructor.
            </para>
            <para>
            Note, RelayCommands in the message pump automatically disable once the application begins to shutdown.
            </para>
            </remarks>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.RelayCommand.CanExecuteChanged">
            <summary>
            Occurs when the CanExecute property changes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Action,System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="execute">The method to call.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
            <remarks>
            If supportsOnUpdate is true, the default, the command will automatically disable whenever the main worker thread is busy
            and when the application begins shutting down.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Func{System.Threading.Tasks.Task},System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="execute">The method to call.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
            <remarks>
            If supportsOnUpdate is true, the default, the command will automatically disable whenever the main worker thread is busy
            and when the application begins shutting down.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Action,System.Func{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="canExecute">The method to call to update the state.</param>
            <param name="execute">The method to call.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
            <param name="disableWhenBusy">Is the command automatically disabled when the main worker thread is busy. Default is true.</param>
            <remarks>
            Use this constructor to specify a specific enabling logic (canExecute) function for the command.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="canExecute">The method to call to update the state.</param>
            <param name="execute">The method to call.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
            <param name="disableWhenBusy">Is the command automatically disabled when the main worker thread is busy. Default is true.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Action{System.Object},System.Func{System.Object,System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="canExecute">The method to call to update the state.</param>
            <param name="execute">The method to call.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
            <param name="disableWhenBusy">Is the command automatically disabled when the main worker thread is busy. Default is true.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Func{System.Threading.Tasks.Task},System.Func{System.Boolean},System.Boolean,System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="canExecute">The method to call to update the state.</param>
            <param name="execute">The method to call.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
            <param name="disableWhenBusy">Is the command automatically disabled when the main worker thread is busy. Default is true.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.#ctor(System.Object,System.Reflection.MethodInfo,System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Instantiates a new RelayCommand instance.
            </summary>
            <param name="targetObject">The object to call.</param>
            <param name="execute">The method on the target object to call.</param>
            <param name="canExecute">The method to call to update the state.</param>
            <param name="supportsOnUpdate">Is the command automatically called for a state update. Default is true.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.CanExecute(System.Object)">
            <summary>
            Gets whether the command can be executed.
            </summary>
            <param name="parameter">Parameter</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.RaiseCanExecuteChanged">
            <summary>
            Raises the CanExecuteChanged event.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.Execute(System.Object)">
            <summary>
            Executes the command.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.Disconnect">
            <summary>
            Removes the command from the the OnUpdate message queue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.RelayCommand.Reconnect">
            <summary>
            Adds the command back to the the OnUpdate message queue.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Wrappers.IPaletteWrapper">
            <summary>
            Defines a palette.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Wrappers.IPaletteWrapper.DefaultItem">
            <summary>
            Gets or sets the current palette item.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DockPaneManager">
            <summary>
            This class manages the active <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/> instances and supplies
            the mechanism for instantiating new dock panes.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DockPaneManager.DockPanes">
            <summary>
            Gets the instantiated dock panes.
            </summary>
            <remarks>
            Dock panes are singletons and never get destroyed once created. Closing
            a dock pane only hides it. Use <see cref="M:ArcGIS.Desktop.Framework.DockPaneManager.Find(System.String)"/> to create and find a
            dock pane.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DockPaneManager.IsDockPaneCreated(System.String)">
            <summary>
            Checks if the specified <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/> has been instantiated.
            </summary>
            <remarks>
            This function will not create the dock pane if it does not exist.
            </remarks>
            <param name="id">The DAML identifier</param>
            <returns>True if the dock pane has been created.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DockPaneManager.Find(System.String)">
            <summary>
            Returns the specified <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/>. Instantiates the DockPane if necessary.
            </summary>
            <remarks>
            Dock panes are singletons: there is never more than one instance of a particular dock pane and once created, 
            they are not destroyed until the application shuts down. Use this function to access a specific dock pane. 
            Of the dock pane doesn't exist in the collection, it will be created.
            Use <see cref="M:ArcGIS.Desktop.Framework.DockPaneManager.IsDockPaneCreated(System.String)"/> to check if a dock pane already exists and
            <see cref="M:ArcGIS.Desktop.Framework.DockPaneManager.IsVisible(System.String)"/> to determine a dock pane's visibility, neither of these functions
            will create the dock pane if it doesn't exist.
            </remarks>
            <param name="id">The DAML identifier.</param>
            <returns>Returns the dock pane associated with the specified DAML ID.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DockPaneManager.IsVisible(System.String)">
            <summary>
            Checks if a dock pane is visible.
            </summary>
            <remarks>
            This function will not create the dock pane if it does not exist.
            </remarks>
            <param name="id">The DAML identifier.</param>
            <returns>True if specified dock pane is visible; otherwise, false.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DockPaneManager.HideAllDockPanes">
            <summary>
            Hides all the dock panes.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DropDataItem">
            <summary>
            Represents information about the data being dropped.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropDataItem.Data">
            <summary>
            Gets the data.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropDataItem.Handled">
            <summary>
            Get or sets whether the drop was handled or not.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DefaultDragHandler">
            <summary>
            Represents a simple drag source implementation.
            </summary>
            <remarks>
            This drag handler assumes all source data is valid.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DefaultDragHandler.#ctor">
            <summary>
            Initializes an empty instance of the <see cref="T:ArcGIS.Desktop.Framework.DragDrop.DefaultDragHandler"/> class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DefaultDragHandler.StartDrag(ArcGIS.Desktop.Framework.DragDrop.DragInfo)">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DragDrop">
            <summary>
            Represents a utility class for drag and drop operations.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.GetDragAdornerTemplate(System.Windows.UIElement)">
            <summary>
            Gets the drag adorner for the specified UI element.
            </summary>
            <param name="target">The UI element.</param>
            <returns>The adorner template.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SetDragAdornerTemplate(System.Windows.UIElement,System.Windows.DataTemplate)">
            <summary>
            Sets the drag adorner for the specified UI element.
            </summary>
            <param name="target">The UI element.</param>
            <param name="value">The adorner template.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.GetIsDragSource(System.Windows.UIElement)">
            <summary>
            Returns true if the target is a drag source.
            </summary>
            <param name="target">The UI element.</param>
            <returns>A bool indicating whether the target is a drag source or not.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SetIsDragSource(System.Windows.UIElement,System.Boolean)">
            <summary>
            Establishes the target element as a drag source or not.
            </summary>
            <param name="target">The UI element</param>
            <param name="value">Flag indicating whether the target is a drag source or not.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.GetIsDropTarget(System.Windows.UIElement)">
            <summary>
            Returns true if the UI element is a drop target.
            </summary>
            <param name="target">The UI element.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SetIsDropTarget(System.Windows.UIElement,System.Boolean)">
            <summary>
            Establishes a UI element as a drop target.
            </summary>
            <param name="target">The UI element.</param>
            <param name="value"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.GetDragHandler(System.Windows.UIElement)">
            <summary>
            Returns the drag handler associated with the specified UI element.
            </summary>
            <param name="target">The UI element.</param>
            <returns>The drag handler.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SetDragHandler(System.Windows.UIElement,ArcGIS.Desktop.Framework.DragDrop.IDragSource)">
            <summary>
            Connects a drag handler with a UI element.
            </summary>
            <param name="target">The UI element.</param>
            <param name="value">The drag handler.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SetDropHandler(System.Windows.UIElement,ArcGIS.Desktop.Framework.DragDrop.IDropTarget)">
            <summary>
            Connects a drop handler with a UI element.
            </summary>
            <param name="target">The UI element.</param>
            <param name="value">The drop handler.</param>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DragDrop.DragAdornerTemplateProperty">
            <summary>
            Identifies the DragAdornerTemplate attached property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DragDrop.DragHandlerProperty">
            <summary>
            Identifies the DragHandler attached property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DragDrop.DropHandlerProperty">
            <summary>
            Identifies the DropHandler attached property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DragDrop.IsDragSourceProperty">
            <summary>
            Identifies the IsDragSource attached property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DragDrop.IsDropTargetProperty">
            <summary>
            Identifies the IsDropTarget attached property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SkipSelectionProperty">
            <summary>
            Identifies the SkipSelection attached property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.GetSkipSelection(System.Windows.DependencyObject)">
            <summary>
            Return true if selection process is skipped
            </summary>
            <param name="obj">Target</param>
            <returns>true if selection process is skipped</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragDrop.SetSkipSelection(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            If set to true, drag operation does not change selection
            </summary>
            <param name="obj">Target</param>
            <param name="value">True then drag operation does not change selection</param>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.DragDrop.DragDrop.DragInfoChanged">
            <summary>
            DragInfoChanged event
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DragInfo">
            <summary>
            Represents information about the data being dragged.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DragInfo.#ctor(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Instantiates a new DragInfo instance.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.Data">
            <summary>
            Gets or sets the drag data.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.DragStartPosition">
            <summary>
            Gets the position of the click that initiated the drag, relative to <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.VisualSource"/>.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.Effects">
            <summary>
            Gets or sets the allowed effects for the drag.
            </summary>
            <remarks>
            This must be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/> by a drag handler in order 
            for a drag to start.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.MouseButton">
            <summary>
            Gets the mouse button that initiated the drag.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.SourceCollection">
            <summary>
            Gets the collection that the source ItemsControl is bound to.
            </summary>
            <remarks>
            If the control that initiated the drag is unbound or not an ItemsControl, this 
            will be null.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.SourceItem">
            <summary>
            Gets the object that a dragged item is bound to.
            </summary>
            <remarks>
            If the control that initiated the drag is unbound or not an ItemsControl, this 
            will be null.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.SourceItems">
            <summary>
            Gets a collection of objects that the selected items in an ItemsControl are bound to.
            </summary>
            
            <remarks>
            If the control that initiated the drag is unbound or not an ItemsControl, this 
            will be empty.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.VisualSource">
            <summary>
            Gets the control that initiated the drag.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.VisualSourceItem">
            <summary>
            Gets the item in an ItemsControl that started the drag.
            </summary>
            <remarks>
            If the control that initiated the drag is an ItemsControl, this property will hold 
            the item container of the clicked item. For example, if <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.VisualSource"/> is 
            a ListBox this will hold a ListBoxItem.
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DropInfo">
            <summary>
            Represents information about the drop target and data being dropped.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Data">
            <summary>
            Gets the drag data.
            </summary>
            <remarks>
            If the drag came from within the framework, this will hold:
            
            - The dragged data if a single item was dragged.
            - A typed IEnumerable if multiple items were dragged.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.DragInfo">
            <summary>
            Gets a <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.DragInfo"/> object holding information about the source of the drag, 
            if the drag came from within the framework.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.DropTargetAdorner">
            <summary>
            Gets or sets the class of drop target to display.
            </summary>
            <remarks>
            The standard drop target adorner classes are held in the <see cref="T:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorners"/>
            class.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Effects">
            <summary>
            Gets or sets the allowed effects for the drop.
            </summary>
            <remarks>
            This must be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/> by a drop handler in order 
            for a drop to be possible.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.InsertIndex">
            <summary>
            Gets the current insert position within <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.TargetCollection"/>.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.TargetCollection">
            <summary>
            Gets the collection that the target ItemsControl is bound to.
            </summary>
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.TargetItem">
            <summary>
            Gets the object that the current drop target is bound to.
            </summary>
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.VisualTarget">
            <summary>
            Gets the control that is the current drop target.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.VisualTargetItem">
            <summary>
            Gets the item in an ItemsControl that is the current drop target.
            </summary>
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.VisualTargetOrientation">
            <summary>
            Gets the orientation of the current drop target.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.DragEventArgs">
            <summary>
            Gets arguments relevant to all drag-and-drop events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Handled">
            <summary>
            Gets or sets boolean indicating if the drop was handled.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Items">
            <summary>
            A list collection of the drop items.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.TargetModel">
            <summary>
            Allows drop handlers to specify an alternate target object.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorner">
            <summary>
            Represents a drop target adorner. This is an abstract class.
            </summary>
            <remarks>
            Drop targets adorners are the UI elements that appear over a valid drop target. Leaf classes typically override OnRender.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorner.#ctor(System.Windows.UIElement)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorner.Detatch">
            <summary>
            Removes the specified adorner from the adorner layer.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorner.DropInfo">
            <summary>
            Gets or sets information about the drop target and data being dropped.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorners">
            <summary>
            Represents the type of drop target adorners available.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorners.Highlight">
            <summary>
            Adorner is a box around the drop target.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.DragDrop.DropTargetAdorners.Insert">
            <summary>
            Adorner is an line below the drop target.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.IDragSource">
            <summary>
            Definition of a drag handler.
            </summary>
            <remarks>
            All drag handlers must implement this interface.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.IDragSource.StartDrag(ArcGIS.Desktop.Framework.DragDrop.DragInfo)">
            <summary>
            Queries whether a drag can be started.
            </summary>
            <param name="dragInfo">
            Information about the drag.
            </param>
            <remarks>
            To allow a drag to be started, the <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DragInfo.Effects"/> property on <paramref name="dragInfo"/> 
            should be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/>. 
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DragDrop.IDropTarget">
            <summary>
            Definition of a drop handler.
            </summary>
            <remarks>
            All drop handlers must implement this interface.
            </remarks>/// 
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.IDropTarget.OnDragOver(ArcGIS.Desktop.Framework.DragDrop.DropInfo)">
            <summary>
            Updates the current drag state.
            </summary>
            
            <param name="dropInfo">
              Information about the drag.
            </param>
            
            <remarks>
            To allow a drop at the current drag position, the <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Effects"/> property on 
            <paramref name="dropInfo"/> should be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/>
            and <see cref="P:ArcGIS.Desktop.Framework.DragDrop.DropInfo.Data"/> should be set to a non-null value.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DragDrop.IDropTarget.OnDrop(ArcGIS.Desktop.Framework.DragDrop.DropInfo)">
            <summary>
            Performs a drop.
            </summary>
            
            <param name="dropInfo">
              Information about the drop.
            </param>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.PaneCollection">
            <summary>
            Panes collection object.  This class contains
            all active instances of panes as well as supplying the
            mechanism for creating new instances of panes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.Create(System.String)">
            <summary>
            Create a new instance of the pane identified by the specified DAML ID.
            </summary>
            <param name="id">The DAML identifier.</param>
            <returns>The Pane.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.PaneCollection.Count">
            <summary>
            Gets the number of currently open panes.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.PaneCollection.Item(System.Int32)">
            <summary>
            Gets the pane at the specified index.
            </summary>
            <param name="index">The index into the collection.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.Create(System.String,System.Object[])">
            <summary>
            Creates a new instance of the specified pane using the supplied arguments.
            </summary>
            <param name="id">The pane's DAML ID.</param>
            <param name="param">A variable number of arguments.</param>
            <returns>A Pane.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.CloseAllPanes">
            <summary>
            Close all open panes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.ClosePane(System.UInt32)">
            <summary>
            Close the pane identified by the specified instance ID.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.RemovePermanentPane(System.UInt32)">
            <summary>
            Closes a singleton pane.
            </summary>
            <param name="id">The instance ID.</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.PaneCollection.ActivePane">
            <summary>
            Gets the currently active Pane.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.FindPane(System.UInt32)">
            <summary>
            Finds the pane identified by the specified instance identifier. 
            </summary>
            <param name="instanceID">The pane's instance identifier.</param>
            <returns>The pane.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.Find(System.String)">
            <summary>
            Returns an array of Panes matching the specified DAML identifier.
            </summary>
            <param name="damlID">The pane's DAML identifier.</param>
            <returns>Array of matching Panes.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PaneCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.UndoRedo.LayoutStatus">
            <summary>
            Interaction logic for UndoControl.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.UndoRedo.UndoRedoControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.OperationManager">
            <summary>
            A collection of operations that users can undo and redo.
            </summary>
            <remarks>
            <para>
            In general, undo operations are organized per <see cref="T:ArcGIS.Desktop.Framework.Contracts.Pane"/> and <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane"/>. 
            In other words, each Pane and DockPane manages its own operation stack. For example, operations added
            to map A are not visible to map B. The active window (Pane or DockPane) becomes the active OperationManager. 
            When a window becomes active, its OperationManager is requested and connected to the undo/redo user interface.
            </para>
            <para>
            Panes and DockPanes may however elect to share OperationManagers. For example, two Panes that are showing the same map
            will have the same OperationManager.
            </para>
            </remarks>
            <seealso cref="T:ArcGIS.Desktop.Framework.Contracts.Operation"/>
            <see cref="P:ArcGIS.Desktop.Framework.Contracts.Pane.OperationManager"/>
            <see cref="P:ArcGIS.Desktop.Framework.Contracts.DockPane.OperationManager"/>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.OperationManager._counter">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.Increment">
            <summary>
            Increases the operation count without performing an operation. This API supports the Framework infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.Decrement">
            <summary>
            Decreases the operation count without reforming an operation. This API supports the Framework infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.#ctor">
            <summary>
            Initializes a new instance of the OperationManager class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.DoAsync(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Performs the specified operation asynchronously and adds it to the undo stack.
            </summary>
            <param name="operation">The operation to perform.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <remarks>
            <para>
            The specified operation is performed by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync"/> method and it is
            added to this OperationManager's undo stack. If operations are currently being grouped by means of
            <see cref="M:ArcGIS.Desktop.Framework.OperationManager.CreateCompositeOperation(System.Action,System.String)"/>, the operation will not directly appear on the stack and will
            instead be incorporated into the composite operation created.
            </para>
            <para>
            Whenever an operation is completed via DoAsync or <see cref="M:ArcGIS.Desktop.Framework.OperationManager.Do(ArcGIS.Desktop.Framework.Contracts.Operation)"/>, the redo stack is cleared of all operations
            belonging to the same category.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when an invalid operation is passed in.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.Do(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Performs the specified operation synchronously and adds it to the undo stack.
            </summary>
            <param name="operation">The operation to perform.</param>
            <returns>Returns true if the operation was completed successfully.</returns>
            <remarks>
            <para>
            The specified operation is performed by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.Do"/> method and the operation is
            added to this OperationManager's undo stack. If operations are currently being grouped by means of
            <see cref="M:ArcGIS.Desktop.Framework.OperationManager.CreateCompositeOperation(System.Action,System.String)"/>, the operation will not directly appear on the stack and will
            instead be incorporated into the composite operation created.
            </para>
            <para>
            Whenever an operation is completed via <see cref="M:ArcGIS.Desktop.Framework.OperationManager.DoAsync(ArcGIS.Desktop.Framework.Contracts.Operation)"/> or Do, the redo stack is cleared of all operations
            belonging to the same category.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when an invalid operation is passed in.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.UndoAsync">
            <summary>
            Rolls back the most recent operation to reset the last action performed with <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.Do"/> or <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync"/>.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <remarks>
            <para>
            The most recent operation in the stack is undone by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.UndoAsync"/> method. The operation 
            is then added to this OperationManager's redo stack.
            </para>
            </remarks>
            <exception cref="T:System.Exception">Thrown when the operation's <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/> method returns false.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.UndoAsync(System.String)">
            <summary>
            Rolls back the most recent operation belonging to a specific category.
            </summary>
            <param name="category">The category of operation of undo.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <exception cref="T:System.Exception">Thrown when the operation's <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/> method returns false.</exception>
            <remarks>
            <para>
            The most recent operation of a particular category in the stack is undone by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.UndoAsync"/> method. The operation 
            is then added to this OperationManager's redo stack.
            </para>
            </remarks>
            <exception cref="T:System.Exception">Thrown when the operation's <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/> method returns false.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.UndoAsync(System.Int32)">
            <summary>
            Rolls back the specified number of operations off the top of the undo stack.
            </summary>
            <param name="count">The number of operations to roll back.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.UndoAsync(System.Int32,System.String)">
            <summary>
            Rolls back the specified number of operations belonging to the specified category.
            </summary>
            <param name="count">The number of operations to roll back.</param>
            <param name="category">The category of operations to roll back.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.OperationManager.CanUndo">
            <summary>
            Gets a boolean value after checking if the first operation can be undone.
            </summary>
            <remarks>
            If the operation cannot be undone, all the operations belonging to
            its same category are cleared from the undo stack.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.OperationManager.CanRedo">
            <summary>
            Gets a boolean value after checking if the first operation can be redone.
            </summary>
            <remarks>
            If the operation cannot be redone, all the operations belonging to
            its same category are cleared from the undo stack.
            </remarks>  
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.RedoAsync">
            <summary>
            Redo the top operation on the redo stack.
            </summary>
            <remarks>
            <para>
            Awaits redoing the most recent operation in the redo stack and then adds it to the undo stack.
            </para>
            </remarks>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <exception cref="T:System.Exception">If no operations are in the stack or the operation can't be redone.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.RedoAsync(System.String)">
            <summary>
            Redo all the operations in the redo stack that belong to the specified category.
            </summary>
            <param name="category">The category of operation to redo.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.RedoAsync(System.Int32)">
            <summary>
            Redo the specified number of operations in the redo stack.
            </summary>
            <param name="count">The number of operations to restart.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.RedoAsync(System.Int32,System.String)">
            <summary>
            The number and category of operations to redo.
            </summary>
            <param name="count">The number of operations to restart.</param>
            <param name="category">The category of operation to redo.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.AddUndoOperation(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Add the specified operation to the undo stack.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.RemoveUndoOperation(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Removes the specified operation from the undo stack.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.AddRedoOperation(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Add the specified operation to the redo stack.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.RemoveRedoOperation(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Removes the specified operation from the redo stack.
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.ClearUndoCategory(System.String)">
            <summary>
            Removes all operations belonging to the specified category from undo stack.
            </summary>
            <param name="category">The category of operations to clear.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.ClearRedoCategory(System.String)">
            <summary>
            Removes all operations belonging to the specified category from redo stack.
            </summary>
            <param name="category">The category of operations to clear.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.ClearUndoSubCategory(System.String,System.String)">
            <summary>
            Removes all operations belonging to the specified category and sub category from undo stack.
            </summary>
            <param name="category">The category of operations to clear.</param>
            <param name="subCategory">The sub category of operations to clear.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.ClearRedoSubCategory(System.String,System.String)">
            <summary>
            Removes all operations belonging to the specified category from redo stack.
            </summary>
            <param name="category">The category of operations to clear.</param>
            <param name="subCategory">The sub category of operations to clear.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.FindUndoOperations(System.Func{ArcGIS.Desktop.Framework.Contracts.Operation,System.Boolean})">
            <summary>
            Returns all the operations from the undo stack that match the conditions defined by the specified predicate.
            </summary>
            <param name="predicate">The delegate that defines the conditions of the element to search for.</param>
            <returns>A new List of the operations that match the predicate.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.FindRedoOperations(System.Func{ArcGIS.Desktop.Framework.Contracts.Operation,System.Boolean})">
            <summary>
            Returns all the operations from the redo stack that match the conditions defined by the specified predicate.
            </summary>
            <param name="predicate">The delegate that defines the conditions of the element to search for.</param>
            <returns>A new List of the operations that match the predicate.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.CreateCompositeOperation(System.Action,System.String)">
            <summary>
            Groups existing operations into a single composite operation. This method must be called on the primary worker thread. Use QueuedTask.Run.
            </summary>
            <param name="action">The method to call.</param>
            <param name="name">The name of the new operation.</param>
            <remarks>
            <para>
            Many API calls will automatically create operations and add them to the appropriate operation stack (OperationManager).
            If your function produces adds several operations to the stack and you instead only want to see
            one operation, use this function to group them.
            </para>
            <para>
            Note, operations belonging to different categories cannot be interleaved. When a composite operation is being created, every 
            operation belonging to a different <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.Category"/> will start a new <see cref="T:ArcGIS.Desktop.Framework.Contracts.CompositeOperation"/>. For example,
            if your method calls five functions (A [category: Editing], B [Editing], C [Mapping], D [Mapping], E [Editing]), three composite operations
            will be created as two additional category shifts have occurred (Editing, Mapping, Editing).
            </para>
            </remarks>
            <seealso cref="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Action,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor,System.Threading.Tasks.TaskCreationOptions)"/>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.PeekUndo(System.String)">
            <summary>
            Return the topmost operation of the given category in the native undo stack. 
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.OperationManager.PeekRedo(System.String)">
            <summary>
            Return the topmost operation of the given category in the native redo stack. 
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.OperationManager.RunningOperation">
            <summary>
            The Operation that is currently running. Automatically set and cleared by the system as operations are executed.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.CompositeOperationManager">
            <summary>
            A class that aggregates the operations of independent OperationManagers with its own and
            optionally filters all operations of a specified category.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.#ctor">
            <summary>
            Creates a new CompositeOperationManager instance.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.#ctor(System.String)">
            <summary>
            Creates a new CompositeOperationManager instance that filters on the specified category.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.CompositeOperationManager.FilterCategory">
            <summary>
            Gets a string identifying the category of operations to act on. For example, only undo 'Edit' operations in all the OperationManager objects.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.DoAsync(ArcGIS.Desktop.Framework.Contracts.Operation)">
            <summary>
            Performs the specified operation asynchronously and adds it to the undo stack.
            </summary>
            <param name="operation">The operation to perform.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <remarks>
            <para>
            The specified operation is performed by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync"/> method and it is
            added to this CompositeOperationManager's undo stack.
            </para>
            <para>
            Whenever an operation is completed, each OperationManager's redo stack is cleared of all operations.
            </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown when an invalid operation is passed in.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when the operation passed in does not belong to the established FilterCategory.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.UndoAsync">
            <summary>
            Rolls back the most recent operation to reset the last action performed with <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.Do"/> or <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.DoAsync"/>.
            </summary>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <remarks>
            <para>
            The most recent operation in the stack is undone by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.UndoAsync"/> method. The operation 
            is then added to this OperationManager's redo stack.
            </para>
            </remarks>
            <exception cref="T:System.Exception">Thrown when the operation's <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/> method returns false.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.UndoAsync(System.String)">
            <summary>
            Rolls back the most recent operation belonging to a specific category.
            </summary>
            <param name="category">The category of operation of undo.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <exception cref="T:System.Exception">Thrown when the operation's <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/> method returns false.</exception>
            <remarks>
            <para>
            The most recent operation of a particular category in the stack is undone by calling its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Operation.UndoAsync"/> method. The operation 
            is then added to this OperationManager's redo stack.
            </para>
            </remarks>
            <exception cref="T:System.Exception">Thrown when the operation's <see cref="P:ArcGIS.Desktop.Framework.Contracts.Operation.CanUndo"/> method returns false.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.RedoAsync">
            <summary>
            Redo the top operation on the redo stack.
            </summary>
            <remarks>
            <para>
            Awaits redoing the most recent operation in the redo stack and then adds it to the undo stack.
            </para>
            </remarks>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
            <exception cref="T:System.Exception">If no operations are in the stack or the operation can't be redone.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.RedoAsync(System.String)">
            <summary>
            Redo all the operations in the redo stack that belong to the specified category.
            </summary>
            <param name="category">The category of operation to redo.</param>
            <returns>A task that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.AddOperationManager(ArcGIS.Desktop.Framework.OperationManager)">
            <summary>
            Add another OperationManager to the composition.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.RemoveOperationManager(ArcGIS.Desktop.Framework.OperationManager)">
            <summary>
            Removes the specified OperationManager from the composition.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CompositeOperationManager.ClearOperationManagers">
            <summary>
            Removes all OperationManager instances from the composition.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.ApplicationNotificationsView">
            <summary>
            Interaction logic for ApplicationNotificationsView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.ApplicationNotificationsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.NotificationControlView">
            <summary>
            Interaction logic for NotificationControlView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationControlView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.NotificationDockPane">
            <summary>
            Interaction logic for NotificationDockPane.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationDockPane.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.NotificationManager">
            <summary>
            A class for managing notifications on a dockable window.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationManager._vmLock">
            <exclude></exclude>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationManager._items">
            <summary>
            Returns all the notification items on the dockable window.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationManager.NotificationItems">
            <summary>
            Gets or sets all the notification items on the dockable window.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationManager.NotificationDisabled">
            <summary>
            Gets or sets a boolean indicating if the notifications are disabled.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationManager.IgnoreList">
            <summary>
            Gets the list of ignored notifications.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationManager.ClearNotification">
            <summary>
            Clear all notifications on the dockable window.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationManager.RemoveNotification(System.String)">
            <summary>
            Remove the notification by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationManager.AddNotification(ArcGIS.Desktop.Framework.NotificationItem)">
            <summary>
            Add a notifcation item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationManager.Count">
            <summary>
            Gets the number of notifications.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.NotificationItem">
            <summary>
            The class for notification item. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationItem.#ctor(System.String,System.Boolean,System.String,ArcGIS.Desktop.Framework.NotificationType,System.String,System.Delegate,System.Object[],System.String,System.Boolean,System.String,System.DateTime,System.String,System.String,System.Delegate,System.Object[])">
            <summary>
            The constructor to create a notification item.
            </summary>
            <param name="id">A unique identifier of the notification item</param>
            <param name="isApplicationLevel">Indicates if the item shows in the Application or Project category.</param>
            <param name="message">Message</param>
            <param name="type">Type of Error, Warning, Confirmation, Information, or Custom</param>
            <param name="actionText">The text that shows the action the notification will perform on click.</param>
            <param name="action">A custom handler specified to control what happens when a notification is clicked.</param>
            <param name="actionArgs">The arguments associated with the action handler.</param>
            <param name="details">A detailed message.</param>
            <param name="showContextMenu">Indicates if the notification item has an associated context menu.</param>
            <param name="helpContextID">The help ID for the item.</param>
            <param name="date">The date displayed for the item</param>
            <param name="customImage">Custom image</param>
            <param name="customContextMenuItemText">A custom menu item that shows on the item's context menu.</param>
            <param name="customContextMenuItemDelegate">The custom handler assoicated with the custom menu item.</param>
            <param name="contextMenuItemArgs">The arguments for the custom context menu item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationItem.#ctor(System.String,System.Boolean,System.String,System.Windows.Media.ImageSource,ArcGIS.Desktop.Framework.NotificationType,System.String,System.Delegate,System.Object[],System.String,System.Boolean,System.String,System.DateTime,System.String,System.Delegate,System.Object[])">
            <summary>
            The constructor to create a notification item.
            </summary>
            <param name="id">A unique identifier of the notification item</param>
            <param name="isApplicationLevel">Indicates if the item shows in the Application or Project category.</param>
            <param name="message">Message</param>
            <param name="imageSource">Custom image</param>
            <param name="type">Type of Error, Warning, Confirmation, Information, or Custom</param>
            <param name="actionText">The text that shows the action the notification will perform on click.</param>
            <param name="action">A custom handler specified to control what happens when a notification is clicked.</param>
            <param name="actionArgs">The arguments associated with the action handler.</param>
            <param name="details">A detailed message.</param>
            <param name="showContextMenu">Indicates if the notification item has an associated context menu.</param>
            <param name="helpContextID">The help ID for the item.</param>
            <param name="date">The date displayed for the item</param>
            <param name="customContextMenuItemText">A custom menu item that shows on the item's context menu.</param>
            <param name="customContextMenuItemDelegate">The custom handler assoicated with the custom menu item.</param>
            <param name="contextMenuItemArgs">The arguments for the custom context menu item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationItem.#ctor(System.String,System.Boolean,System.String,ArcGIS.Desktop.Framework.NotificationType,System.String,System.Boolean,System.DateTime,System.String,System.String,System.Delegate,System.Object[])">
            <summary>
            The constructor to create a notification item.
            </summary>
            <param name="id">A unique identifier of the notification item</param>
            <param name="isApplicationLevel">Indicates if the item shows in the Application or Project category.</param>
            <param name="message">Message</param>
            <param name="type">Type of Error, Warning, Confirmation, Information, or Custom</param>
            <param name="details">A detailed message.</param>
            <param name="showContextMenu">Indicates if the notification item has an associated context menu.</param>
            <param name="date">The date displayed for the item.</param>
            <param name="customImage">Custom image.</param>
            <param name="customContextMenuItemText">A custom menu item that shows on the item's context menu.</param>
            <param name="customContextMenuItemDelegate">The custom handler assoicated with the custom menu item.</param>
            <param name="contextMenuItemArgs">The arguments for the custom context menu item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationItem.#ctor(System.String,System.Boolean,System.String,System.Windows.Media.ImageSource,ArcGIS.Desktop.Framework.NotificationType,System.String,System.Boolean,System.DateTime,System.String,System.Delegate,System.Object[])">
            <summary>
            The constructor to create a notification item.
            </summary>
            <param name="id">A unique identifier of the notification item</param>
            <param name="isApplicationLevel">Indicates if the item shows in the Application or Project category.</param>
            <param name="message">Message</param>
                /// <param name="imageSource">Custom image.</param>
            <param name="type">Type of Error, Warning, Confirmation, Information, or Custom</param>
            <param name="details">A detailed message.</param>
            <param name="showContextMenu">Indicates if the notification item has an associated context menu.</param>
            <param name="date">The date displayed for the item.</param>
            <param name="customContextMenuItemText">A custom menu item that shows on the item's context menu.</param>
            <param name="customContextMenuItemDelegate">The custom handler assoicated with the custom menu item.</param>
            <param name="contextMenuItemArgs">The arguments for the custom context menu item.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.NotificationItem.#ctor(System.String,System.Boolean,System.String,ArcGIS.Desktop.Framework.NotificationType)">
            <summary>
            The constructor to create a notification item.
            </summary>
            <param name="id">A unique identifier of the notification item</param>
            <param name="isApplicationLevel">Indicates if the item shows in the Application or Project category.</param>
            <param name="message">Message</param>
            <param name="type">Type of Error, Warning, Confirmation, Information, or Custom</param>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.ID">
            <summary>
            Gets a unique identifier of the notification item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Group">
            <summary>
            Gets a string value if the item shows in the Application or Project category.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Message">
            <summary>
            Gets the general message of the notification item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Date">
            <summary>
            Gets the date displayed for the item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Type">
            <summary>
            Gets the type of notification - Error, Warning, Confirmation, Information, or Custom.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.CustomImage">
            <summary>
            Gets the custom image of the notification item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Action">
            <summary>
            Gets a custom handler specified to control what happens when a notification is clicked.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Args">
            <summary>
            Gets the arguments associated with the action handler.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.Details">
            <summary>
            Gets a detailed message.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.HelpContextID">
            <summary>
            Gets the help ID for the item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.ShowContextMenu">
            <summary>
            Gets a boolean value indicating if the notification item has an associated context menu.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.ActionText">
            <summary>
            Gets the text that shows the action the notification will perform on click.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.CustomContextMenuItemText">
            <summary>
            Gets a custom menu item that shows on the item's context menu.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.CustomContextMenuItemDelegate">
            <summary>
            Gets a custom handler assoicated with the custom menu item.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.NotificationItem.CustomContextMenuItemArgs">
            <summary>
            Gets arguments for the custom context menu item.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.NotificationType">
            <summary>
            The type of a <see cref="T:ArcGIS.Desktop.Framework.NotificationItem"/>.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationType.Error">
            <summary>
            Notification type Error.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationType.Warning">
            <summary>
            Notification type warning.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationType.Confirmation">
            <summary>
            Notification type confirmation.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationType.Information">
            <summary>
            Notification type information.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.NotificationType.Custom">
            <summary>
            Notification type custom.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Properties.Resources.GetResourceString(System.String,System.String[])">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.About">
            <summary>
              Returns the formatted resource string.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ForMoreInfo">
            <summary>
            Used in Error Message Dialog
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ID">
            <summary>
            Used in tooltip
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.NeedHelp">
            <summary>
            Used in Error Message Dialog
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ClearHistory">
            <summary>
            Used in search control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.RescentSearch">
            <summary>
            Used in search control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.AddTags">
            <summary>
            Hint text for tagging control
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.AddInTabKeyTip">
            <summary>
            keytip shortcut key for add-in tab
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Infinity">
            <summary>
            Used in MultiRangeSliderControl to define Infinity range
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.CorruptConfig">
            <summary>
            {0} is the newline; {1} is the path to the broken file
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Add">
            <summary>
            add new word to dictionary
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Delete">
            <summary>
            delete word from dictionary
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DeleteAll">
            <summary>
            delete all words from dictionary
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DictionaryAdd">
            <summary>
            add word to custom dictionary
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DictionaryIgnore">
            <summary>
            ignore spelling error
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.NewTabContextual">
            <summary>
            new tab matches the context/condition of the selected tab
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.BackgroundGP">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.BackgroundGP_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Counters">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Counters_Info">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DiagnosticMonitorTitle">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ForegroundThread1_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ForegroundThread2_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ForegroundThread3_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ForegroundThread4_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ForegroundThreads">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread10_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread11_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread12_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread1_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread2_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread3_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread4_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread5_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread6_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread7_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread8_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThread9_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.HighBackgroundThreads">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Log">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Log_Info">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread10_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread11_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread12_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread1_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread2_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread3_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread4_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread5_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread6_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread7_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread8_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThread9_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.LowBackgroundThreads">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Miscellaneous">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.SharedBackground">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.SharedBackground_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_DockBusy">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_DockBusy_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Feedback">
            <summary>
            Used in PerfMeterWindow
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Feedback_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Geoprocessing">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Geoprocessing_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_HTTP">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_HTTP_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Hung_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Resuming">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Resuming_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_TaskBusy">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_TaskRate">
            <summary>
            Used in PerfMeterWindow
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_TaskRate_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Task_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Unresponsive">
            <summary>
            Used in PerfMeterWindow
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_ViewBusy">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_ViewBusy_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Waiting">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status_Waiting_Tooltip">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Tasks">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Tasks_Info">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.AlwaysOnTop">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ResumeTime">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.Status">
            <summary>
            Used in Diagnostic Monitor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ShortcutsAlt">
            <summary>
            Alt key
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ShortcutsCtrl">
            <summary>
            Ctrl key
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.ShortcutsShift">
            <summary>
            Shift key
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DateTimePickerNowTimeFormat">
            <summary>
            Used to display text on the Now button on the popup of the date time picker control.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DateTimePickerTodayFormat">
            <summary>
            Used to display text on the Today button on the popup of the date time picker control.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.DateTimePickerCurrentTimeZoneFormat">
            <summary>
            Used by the date time picker control to add the computer time zone to computer's time zone in the time span drop down.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Properties.Resources.PaneCount">
            <summary>
            pane caption e.g. (1/4)
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.SheetWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.SheetWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.PropertySheet">
             <summary>
             A window that allows the user to view and edit the properties of an item.
             </summary>
             <remarks>
        <para>
          Property sheets hold a collection of individual unrelated property pages. Each
          page contains controls for setting a group of related properties. A property sheet can be shown modal or modeless.
        </para>
        <para>
          Property sheets are purely declarative, they are defined only in DAML and have no corresponding managed class. Property
          pages, like <see cref="T:ArcGIS.Desktop.Framework.Contracts.Pane" />s and <see cref="T:ArcGIS.Desktop.Framework.Contracts.DockPane" />s, have both declarative and active
          components. The active portion of all property pages must derive from this class.
        </para>
        <para>
          Property pages only load when they become visible. They are not loaded when the sheet loads - the
          page has to be visited.
          When a page does load, its <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsLoading" /> property is first set to true. Next, its
          <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.InitializeAsync" /> function is executed. When the returned task completes, its
          IsLoading is reset to false.
        </para>
        <para>
          Property pages have the option of being conditional. If a condition has been specified for the page in DAML, the
          page will not appear with the sheet unless its condition is currently satisfied.
        </para>
        <para>
          Pages can also be grouped within a sheet by setting the sheet's <code>hasGroups</code> attribute to true
          and specifying a group heading by setting the page's <code>group</code> attribute.
        </para>
        <para>
          When a property sheet is displayed with either <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.Show(System.String,System.String,System.Object[])" />
          or <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.ShowDialog(System.String,System.String,System.Object[])" />, data can be passed in as one of the arguments and
          this data can be accessed by all of its pages using the <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.Data" /> property.
        </para>
        <para>
          The property sheet dialog includes a title bar and several buttons: OK, Cancel, and Apply. The
          Apply button is only presented when the sheet is modeless. The OK button remains enabled as long as all
          pages report that they are valid, see <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsValid" />.
          The Apply button enables once any page in the sheet sets its <see cref="P:ArcGIS.Desktop.Framework.Contracts.Page.IsModified" /> property to true and all 
          page are valid. Once Apply or OK are clicked, each page that has set its IsModified flag to true will have its 
          <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.CommitAsync" /> invoked. Similarly, if the Cancel button is clicked, their <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.CancelAsync" /> is invoked.
        </para>
        <para>
          When a property sheet closes, each loaded page will have its <see cref="M:ArcGIS.Desktop.Framework.Contracts.Page.Uninitialize" /> invoked.
        </para>
      </remarks>
             <remarks>
             <para>
             Declaring Property Sheets in DAML:
            <code>
            <pre>
            &lt;insertSheet id="acme_mainSheet" caption="Test sheet"&gt;
              &lt;page id="acme_testPage" 
                    caption="test page" 
                    className="Pages.TestPage"&gt;
                &lt;content className="Pages.TestPageView"/&gt;
              &lt;/page&gt;
            &lt;/insertSheet&gt;
            </pre>
             </code>
             </para>
             </remarks>
             <see cref="T:ArcGIS.Desktop.Framework.Contracts.Page" />
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.ShowDialog(System.String,System.String,System.Object[])">
            <summary>
            Opens the specified property sheet and returns only when the newly opened window is closed.
            </summary>
            <param name="id">The DAML property sheet identifier.</param>
            <param name="defaultPageID">Optionally, the DAML identifier of the page to start on.</param>
            <param name="parameters">Any data that should be made available to the pages.</param>
            <returns>A Nullable&lt;T&gt; value of type Boolean that specifies whether the activity was accepted (true) or 
            canceled (false). The return value is the value of the DialogResult property before a window closes.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.ShowDialog(System.String,System.String,System.String,System.Object[])">
            <summary>
            Opens the specified property sheet and returns only when the newly opened window is closed.
            </summary>
            <param name="id">The DAML property sheet identifier.</param>
            <param name="title">The window title.</param>
            <param name="defaultPageID">Optionally, the DAML identifier of the page to start on.</param>
            <param name="parameters">Any data that should be made available to the pages.</param>
            <returns>A Nullable&lt;T&gt; value of type Boolean that specifies whether the activity was accepted (true) or 
            canceled (false). The return value is the value of the DialogResult property before a window closes.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.ShowDialog(System.String,System.String,System.Action,System.String,System.Object[])">
            <summary>
            Show the property sheet with the specified id and title
            </summary>
            <param name="id"></param>
            <param name="title"></param>
            <param name="applyCallback"></param>
            <param name="defaultPageID"></param>
            <param name="parameters"></param>
            <returns><see cref="T:System.Boolean"/>. Note: return can be null</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.Show(System.String,System.String,System.Object[])">
            <summary>
            Opens the specified property sheet and returns without waiting for the newly opened window to close.
            </summary>
            <param name="id">The DAML property sheet identifier.</param>
            <param name="defaultPageID">Optionally, the DAML identifier of the page to start on.</param>
            <param name="parameters">Any data that should be made available to the pages.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.Close">
            <summary>
            Close the property sheet.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.Apply">
            <summary>
            Commits the changes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.Cancel">
            <summary>
            Closes the property sheet and discards any edits.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.OK">
            <summary>
            Closes the property sheet and applies all edits.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.PropertySheet.IsVisible">
            <summary>
            Gets boolean value of true if any property sheet is currently visible.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheet.Page(System.String)">
            <summary>
            Returns the <see cref="M:ArcGIS.Desktop.Framework.PropertySheet.Page(System.String)"/> associated with the specified DAML identifier in the current sheet.
            </summary>
            <param name="id">The DAML Page identifier.</param>
            <returns>The specified Page.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.PropertySheet.Title">
            <summary>
            Gets or sets the title of the current property sheet.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.PropertySheets.Views.BrokenPage">
            <summary>
            Interaction logic for BrokenPage.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheets.Views.BrokenPage.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.ListPropertySheet">
            <summary>
            Interaction logic for ListPropertySheet.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.ListPropertySheet.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.PageHost">
            <summary>
            Interaction logic for PageHost.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PageHost.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.PropertySheetView">
            <summary>
            Interaction logic for PropertySheet.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.PropertySheetView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.TreePropertySheet">
            <summary>
            Interaction logic for TreePropertySheet.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.TreePropertySheet.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.CommandPicker">
            <summary>
            Interaction logic for CommandPicker.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.CommandPicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.TellMe.ImproveTellMe">
            <summary>
            Interaction logic for ImproveTellMe.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.TellMe.ImproveTellMe.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl">
            <summary>
            Interaction logic for TellMeCtrl.xaml
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.Items">
            <summary>
            Gets or sets the hint text of the control. The default value is Search. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.RecentlyUsedIDs">
            <summary>
            Gets or sets the hint text of the control. The default value is Search. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.HasText">
            <summary>
            Gets or sets if the search field has text. The value is a type of bool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.InfoText">
            <summary>
            Gets or sets the hint text of the control. The default value is Search. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.Text">
            <summary>
            Gets or sets the hint text of the control. The default value is Search. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.UpdateMouseCapture(System.Boolean)">
            <summary>
            Updates the mouse capture for when a popup is opened or closed.
            </summary>
            <param name="capture">Whether to capture the mouse.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.TellMe.TellMeCtrl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.TellMeControlView">
            <summary>
            Interaction logic for TellMeControlView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.TellMeControlView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.DelayedInvoker">
            <summary>
            Utility class used to delay action within methods that are called at high frequencies until
            the call has not been called for at least the specified interval.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.DelayedInvoker.#ctor(System.Int32)">
            <summary>
            Creates a new DelayedInvoker instance.
            </summary>
            <param name="delay"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.DelayedInvoker.Invoke(System.Action)">
            <summary>
            The method to execute when the delay elapses.
            </summary>
            <param name="action">The method to call.</param>
            <returns>A task representing work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.DelayedInvoker.InvokeTask(System.Func{System.Threading.Tasks.Task})">
            <summary>
            The method to execute when the delay elapses.
            </summary>
            <param name="function">The method to call.</param>
            <returns>A task representing work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.SerialInvoker">
            <summary>
            Utility class used to protect a long running task from being interleaved with another call.  Repeated calls are dropped, but the last one is guaranteed
            to win.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.SerialInvoker.#ctor(System.Boolean)">
            <summary>
            Creates a new SerialInvoker instance.
            </summary>
            <param name="cancelTasks"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.SerialInvoker.InvokeTask(System.Func{System.Threading.Tasks.Task})">
            <summary>
            The method to execute serially.
            </summary>
            <param name="function">The method to call.</param>
            <returns>A task representing work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.SerialInvoker.WrapFunction``1(System.Func{``0,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
            Creates a new SerialInvoker that wraps the given function and returns a function that calls through it.
            </summary>
            <typeparam name="Arg"></typeparam>
            <param name="function"></param>
            <param name="cancelTasks"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog">
            <summary>
            Provides visual feedback during long operations
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a simple progress dialog.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a cancelable progress dialog.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.#ctor(System.String,System.UInt32,System.Boolean)">
            <summary>
            Creates a progress dialog with the specified number of steps.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.Finalize">
            <summary>
            Progress dialog finalizer
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.#ctor(System.String,System.String,System.UInt32,System.Boolean)">
            <summary>
            Creates a cancelable progress dialog with the specified number of steps.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.ProgressOptions.Visible">
            <summary>
            The cancel button will be displayed.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.ProgressOptions.ShowCancel">
            <summary>
            The cancel button will be displayed.
            </summary>  
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.ProgressOptions.Marquee">
            <summary>
            The progress bar will operate in marquee mode.
            </summary>  
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.ProgressOptions.DelayedShow">
            <summary>
            The progress bar will operate in marquee mode.
            </summary>  
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.Show">
            <summary>
            Displays the progress dialog.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.Hide">
            <summary>
            Hide the progress bar.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog.Dispose">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor">
            <summary>
            Used by the executing Task to detect cancellation and update status information displayed the progress dialog during execution.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.None">
            <summary>
            Gets an empty Progressor which does nothing.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.Current">
            <summary>
            Gets the current Progressor.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.Status">
            <summary>
            Gets or sets the status displayed in the progress dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.ExtendedStatus">
            <summary>
            Gets or sets the extended status displayed in the progress dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.Value">
            <summary>
            Gets or sets the position of the progress meter displayed in the progress dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.Max">
            <summary>
            Gets or sets the maximum range of the progress meter displayed in the progress dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.Progressor.Message">
            <summary>
            Gets or sets message of the progress dialog.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor">
            <summary>
            Indicates the progress of an operation that is cancelable.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor.CancellationToken">
            <summary>
            Gets the cancellation token associated with the progressor.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor.None">
            <summary>
            Gets an empty CancelableProgressor which does nothing.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSourceBase">
            <summary>
            Represents a Progressor. This is an abstract class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSourceBase.Message">
            <summary>
            Gets or sets the message of the progress dialog displayed while the associated Task is executing.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSourceBase.Status">
            <summary>
            Gets or sets the status of the progress dialog displayed while the associated Task is executing.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSourceBase.ExtendedStatus">
            <summary>
            Gets or sets the extended status of the progress dialog displayed while the associated Task is executing.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSourceBase.Value">
            <summary>
            Gets or sets the progress bar position within the progress dialog displayed while the associated Task is executing.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSourceBase.Max">
            <summary>
            Gets or sets the progress bar maximum value within the dialog displayed while the associated Task is executing.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource">
            <summary>
            Class used to configure progress during task execution.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource.#ctor">
            <summary>
            Creates ProgressorSource.  No progress dialog will be displayed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource.#ctor(System.Action{ArcGIS.Desktop.Framework.Threading.Tasks.Progressor})">
            <summary>
            Creates ProgressorSource with a custom progress update delegate.  No progress dialog will be shown.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource.#ctor(ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog)">
            <summary>
            Creates ProgressorSource with a specified progress dialog.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource.#ctor(System.String,System.Boolean)">
            <summary>
            Creates ProgressorSource with a simple progress dialog.
            Set delayedShow to true for short running operations.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource.Progressor">
            <summary>
            Gets the progressor object.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.ProgressorSource.Dispose">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource">
            <summary>
            Class used to configure progress and cancelation during task execution.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.#ctor">
            <summary>
            Creates CancelableProgressorSource.  No progress dialog will be displayed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.#ctor(System.Action{ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor})">
            <summary>
            Creates CancelableProgressorSource with a custom progress update delegate.  No progress dialog will be displayed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates ProgressorSource with a simple progress dialog.
            Set delayedShow to true for short running operations.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.#ctor(ArcGIS.Desktop.Framework.Threading.Tasks.ProgressDialog)">
            <summary>
            Creates CancelableProgressorSource with a specified progress dialog.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.Progressor">
            <summary>
            Gets the progressor object.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.CancellationTokenSource">
            <summary>
            Gets the cancellation configuration object associated with this progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.Cancel">
            <summary>
            Called when the user clicks the cancel button on the progress dialog.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressorSource.Dispose">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask">
            <summary>
            Static class used to perform asynchronous operations on the foreground worker thread.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Busy">
            <summary>
            Gets a boolean value of True if the worker thread is busy.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.OnWorker">
            <summary>
            Gets a boolean value of True if called from the worker thread.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.OnGUI">
            <summary>
            Gets a boolean value of True if called from the GUI thread.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.UIScheduler">
            <summary>
            Gets the TaskScheduler associated with the GUI thread; can be used to dispatch delegates that need to run on the user interface thread.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Shutdown(System.Int32)">
            <summary>
            Call at application exit to shutdown the worker thread.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run``1(System.Func{``0},ArcGIS.Desktop.Framework.Threading.Tasks.Progressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task of type T to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}},ArcGIS.Desktop.Framework.Threading.Tasks.Progressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task of type T to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run``1(System.Func{``0},ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new cancelable task of type T to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}},ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new cancelable task of type T to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task of type T to the framework dispatcher.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task of type T to the framework dispatcher.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.RunImpl(System.Action,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Action,ArcGIS.Desktop.Framework.Threading.Tasks.Progressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Func{System.Threading.Tasks.Task},ArcGIS.Desktop.Framework.Threading.Tasks.Progressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Action,ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new cancelable task to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Func{System.Threading.Tasks.Task},ArcGIS.Desktop.Framework.Threading.Tasks.CancelableProgressor,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new cancelable task to the framework dispatcher thread using the specified progressor.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Action,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task to the framework dispatcher thread.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Threading.Tasks.QueuedTask.Run(System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Queue a new task to the framework dispatcher thread.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.AboutView">
            <summary>
            Interaction logic for AboutView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.AboutView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.UpdateNotificationView">
            <summary>
            Interaction logic for UpdateNotificationView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.UpdateNotificationView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Utilities.Broadcast">
            <summary>
            Class used for communicating between multiple instances of Pro using a publish/subscribe model.
            Messages are organized around a uniquely named channel.  Subscribers can limit what messages they receive by subscribing to a
            specific channel.  Publishers specify a channel when posting messages. Calling publish when fewer than two instances of 
            Pro are running will produce no messages.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.Broadcast.Subscribe(System.Guid,System.Action{System.Int32,System.String})">
            <summary>
            Subscribes to the channel identified by the channel argument.  The specified action will be invoked when a message is sent to this channel.
            </summary>
            <param name="channel"></param>
            <param name="action"></param>
            <returns>A cookie identifying the subscription.  This can be used to unsubscribe.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.Broadcast.Unsubscribe(System.UInt64)">
            <summary>
            Unregisters a previously registered subscription using the specified subscription id.
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.Broadcast.Publish(System.Guid,System.Int32,System.String)">
            <summary>
            Broadcasts a message on the specified channel to all running instances of Pro.
            </summary>
            <param name="channel"></param>
            <param name="messageID"></param>
            <param name="message"></param>
            <returns>True if the broadcast succeeds</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Utilities.EventLog">
            <summary>
            Esri application event log class.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Utilities.EventLog.EventType">
            <summary>
            EventType enumeration.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Utilities.EventLog.EventType.Error">
            <summary>
            An event that indicates a significant problem such as loss of data or loss of functionality. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Utilities.EventLog.EventType.Warning">
            <summary>
            An event that is not necessarily significant, but may indicate a possible future problem. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Utilities.EventLog.EventType.Information">
            <summary>
            An event that describes the successful operation within the application.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Framework.Utilities.EventLog.EventType.Debug">
            <summary>
            An event that includes detailed information about an operation within the application.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Utilities.EventLog.IsEnabled">
            <summary>
            Returns True if the application is running in diagnostic mode.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.ShouldLog(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType)">
            <summary>
            Used to control which types of events should be logged.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.Write(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType,System.String,System.Boolean)">
            <summary>
            Creates a timestamped event record of the specified type. 
            Event is flushed immediately to disk if flush is set to true.
            <param name="type">The type of event to log.</param>
            <param name="entry">User defined entry describing the event.</param>
            <param name="flush">If true, event is written to disk immediately.</param>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.Write(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType,System.String,System.UInt32,System.Boolean)">
            <summary>
            Creates a timestamped event record of the specified type. 
            Event is flushed immediately to disk if flush is set to true.
            <param name="type">The type of event to log.</param>
            <param name="entry">User defined entry describing the event.</param>
            <param name="elapsed">The duration (in milliseconds) associated with the event.</param>
            <param name="flush">If true, event is written to disk immediately.</param>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.Write(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType,System.String,System.String,System.String,System.UInt32,System.Boolean)">
            <summary>
            Creates a timestamped event record of the specified type. 
            Event is flushed immediately to disk if flush is set to true.
            <param name="type">The type of event to log.</param>
            <param name="entry">User defined entry describing the event.</param>
            <param name="func">The function associated with the event.</param>
            <param name="code">The code associated with the event.</param>
            <param name="elapsed">The duration (in milliseconds) associated with the event.</param>
            <param name="flush">If true, event is written to disk immediately.</param>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.Write(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType,System.ValueTuple{System.String,System.String}[],System.String,System.String,System.UInt32,System.Boolean)">
            <summary>
            Creates a timestamped event record of the specified type. 
            Event is flushed immediately to disk if flush is set to true.
            <param name="type">The type of event to log.</param>
            <param name="customEventData">An array of tuples containing event name + value pairs.</param>
            <param name="func">The function associated with the event.</param>
            <param name="code">The code associated with the event.</param>
            <param name="elapsed">The duration (in milliseconds) associated with the event.</param>
            <param name="flush">If true, event is written to disk immediately.</param>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.Write(ArcGIS.Desktop.Framework.Utilities.EventLog.EventType,System.ValueTuple{System.String,System.String}[],System.UInt32,System.Boolean)">
            <summary>
            Creates a timestamped event record of the specified type. 
            Event is flushed immediately to disk if flush is set to true.
            <param name="type">The type of event to log.</param>
            <param name="customEventData">An array of tuples containing event name + value pairs.</param>
            <param name="elapsed">The duration (in milliseconds) associated with the event.</param>
            <param name="flush">If true, event is written to disk immediately.</param>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.IncrementCounter(System.String)">
            <summary>
            Increments the specified diagnostic counter.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.SetCounterValue(System.String,System.UInt64)">
            <summary>
            Sets the value of the specified counter.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.GetCounterValue(System.String)">
            <summary>
            Returns the current value of the specified diagnostic counter.
            </summary>
            <param name="counterName"></param>
            <returns>The current value</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.EventLog.GetCounterNames">
            <summary>
            Returns the names of all diagnostic counters.
            </summary>
            <returns>An array of diagnostic counter names</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Utilities.SpellChecker">
            <summary>
            Spell checking object
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SpellChecker.#ctor">
            <summary>
            Creates a SpellChecker object.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SpellChecker.#ctor(System.String)">
            <summary>
            Creates a SpellChecker object using the specified language ID. 
            </summary>
            <param name="lang">The language id per RFC 3066. For example, use en-US for U.S. English or fr-FR for France French</param>
            <example>
            <code>
            SpellChecker s = new SpellChecker(CultureInfo.CurrentCulture.IetfLanguageTag);
            </code>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Utilities.SpellChecker.CustomDictionaries">
            <summary>
            Return the list of custom dictionaries.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.Utilities.SpellChecker.Language">
            <summary>
            Gets or Sets the Spellchecker language per RFC 3066. For example, use en-US for U.S. English or fr-FR for France French.
            </summary>
            <example>
            <code>
            SpellChecker s = new SpellChecker(CultureInfo.CurrentCulture.IetfLanguageTag);
            </code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SpellChecker.CheckSentence(System.String)">
            <summary>
             Returns a list of tuples of integers, each containing the start position and length of each spelling error in the sentence.
            </summary>
            <param name="sentence"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SpellChecker.AddToDictionary(System.String)">
            <summary>
            Adds the specified word to the dictionary.
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SpellChecker.IgnoreAll(System.String)">
            <summary>
            Will ignore the specified spelling error for the lifetime of the spell checker object.
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SpellChecker.GetSuggestions(System.String)">
            <summary>
            Returns an array of suggestions for the specified word.  Returns null if the word is properly spelled.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.Utilities.SystemWarningView">
            <summary>
            Interaction logic for SystemWarningView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.Utilities.SystemWarningView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DictionaryControl">
            <summary>
            Interaction logic for DictionaryControl.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DictionaryControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.DictionaryWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.DictionaryWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.UIHelper.FindChildInVisualTreeByName(System.Windows.FrameworkElement,System.String)">
            <summary>
            Return the first element found in the visual tree with a specified name given a starting element. The starting element can be returned if it has the 
            name being looked for. If there are multiple elements with the same name in the tree, it is not deterministic which one is returned.
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.UIHelper.FindFirstChildInVisualTreeByName(System.Windows.FrameworkElement,System.String)">
            <summary>
            Return the first element found in the visual tree with a specified name given a starting element. The starting element can be returned if it has the 
            name being looked for. This method uses a Queue to manage the search and so will return the first element with that name closest to the parent element based on child order.
            </summary>
            <param name="parent"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.UIHelper.IsModal(System.Windows.Window)">
            <summary>
            Checks if the window is a modal window
            </summary>
            <param name="window">The Window to check.</param>
            <returns>True if it's modal.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.UIHelper.IsOnModalWindow(System.Windows.FrameworkElement)">
            <summary>
            Determines if the element is on a modal window.
            </summary>
            <param name="element">The element to check.</param>
            <returns>True, if the element is on a modal Window.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.SmallSearchControl">
            <summary>
            Interaction logic for SmallSearchControl.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.SmallSearchControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.HostedWizardView">
            <summary>
            Interaction logic for HostedWizardView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.HostedWizardView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Framework.WizardViewModel.RequestClose">
            <summary>
            Raised when the wizard should be removed from the UI.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.Pages">
            <summary>
            Returns a read-only collection of all page ViewModels.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.CurrentPage">
            <summary>
            Returns the page ViewModel that the user is currently viewing.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.IsOnLastPage">
            <summary>
            Returns true if the user is currently viewing the last page 
            in the workflow.  This property is used by CoffeeWizardView
            to switch the Next button's text to "Finish" when the user
            has reached the final page.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.MovePreviousCommand">
            <summary>
            Returns the command which, when executed, causes the CurrentPage 
            property to reference the previous page in the workflow.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.MoveNextCommand">
            <summary>
            Returns the command which, when executed, causes the CurrentPage 
            property to reference the next page in the workflow.  If the user
            is viewing the last page in the workflow, this causes the Wizard
            to finish and be removed from the user interface.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.FinishCommand">
            <summary>
            Returns the command which, when executed, causes the CurrentPage 
            property to reference the next page in the workflow.  If the user
            is viewing the last page in the workflow, this causes the Wizard
            to finish and be removed from the user interface.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Framework.WizardViewModel.CancelCommand">
            <summary>
            Returns the command which, when executed, cancels the order 
            and causes the Wizard to be removed from the user interface.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.WizardDialog">
            <summary>
            Interaction logic for WizardView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.WizardDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Framework.WizardView">
            <summary>
            Interaction logic for WizardView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Framework.WizardView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.ComboBoxWidthBehavior">
            <summary>
            Set ComboBox.Width to the width of the largest item
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.ComboBoxWidthBehavior.IsActive">
            <summary>
            Gets or sets whether this behavior is active
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.ComboBoxWidthBehavior.ComputeWidth">
            <summary>
            Compute the width of the largest item.
            Opposed to the former version, this approach is independent whether the control is enabled or visible.
            All the event subscription is not necessary
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.InvokeCommandActionWithParam">
            <summary>
            Class extends TriggerAction behavior to pass parameters to commands associate with GUI event
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.InvokeCommandActionWithParam.InvokeParameter">
            <summary>
            Invoke parametr property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.InvokeCommandActionWithParam.Command">
            <summary>
            Command to invoke
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.InvokeCommandActionWithParam.CommandParameter">
            <summary>
            Command parametr
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModes.None">
            <summary>
            Indicates that the selected cells will not be tracked.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModes.Headers">
            <summary>
            Indicates selected cells will be tracked.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.IsSelectedHeaderProperty">
            <summary>
            Identifies the <c>IsSelectedHeader</c> attached dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <c>IsSelectedHeader</c> attached dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModesProperty">
            <summary>
            Identifies the <c>TrackingModes</c> attached dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <c>TrackingModes</c> attached dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.EnableEnterOnHeaderProperty">
            <summary>
            Identifies the <c>EnableEnterOnHeader</c> attached dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <c>EnableEnterOnHeader</c> attached dependency property.</value>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.OnDataGridGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when an element in a <see cref="T:System.Windows.Controls.DataGrid"/> gets the keyboard focus.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.OnDataGridLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when an element in a <see cref="T:System.Windows.Controls.DataGrid"/> loses the keyboard focus.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">A <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.OnTrackingModesPropertyValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when <see cref="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModesProperty"/> is changed.
            </summary>
            <param name="d">The dependency object that was changed.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.UpdateFocusedHeader(System.Windows.Controls.DataGrid)">
            <summary>
            Updates the focused <see cref="T:System.Windows.Controls.Primitives.DataGridColumnHeader"/>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.UpdateFocusedRowHeader(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            Updates the focused <see cref="T:System.Windows.Controls.Primitives.DataGridRowHeader"/>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.GetIsSelectedHeader(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether a corresponds to the column/Row
            of the a currently focused <see cref="T:System.Windows.Controls.DataGridCell"/>.
            </summary>
            <param name="obj">The object from which the property value is read.</param>
            <returns>The object's value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.GetTrackingModes(System.Windows.Controls.DataGrid)">
            <summary>
            Gets the value of the <see cref="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModesProperty"/> attached property for a specified <see cref="T:System.Windows.Controls.DataGrid"/>.
            </summary>
            <param name="obj">The object to which the attached property is retrieved.</param>
            <returns>
            The focus that should be tracked in a <see cref="T:System.Windows.Controls.DataGrid"/>.
            </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.SetTrackingModes(System.Windows.Controls.DataGrid,ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModes)">
            <summary>
            Sets the value of the <see cref="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.TrackingModesProperty"/> attached property to a specified <see cref="T:System.Windows.Controls.DataGrid"/>.
            </summary>
            <param name="obj">The object to which the attached property is written.</param>
            <param name="value">
            A value indicating the focus that should be tracked in a <see cref="T:System.Windows.Controls.DataGrid"/>.
            </param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.SetEnableEnterOnHeader(System.Windows.Controls.DataGrid,System.Boolean)">
            <summary>
            Sets the value of the <see cref="F:ArcGIS.Desktop.Internal.Framework.Behaviors.DataGridBehavior.EnableEnterOnHeaderProperty"/> attached property to a specified <see cref="T:System.Windows.Controls.DataGrid"/>.
            </summary>
            <param name="obj">The object to which the attached property is written.</param>
            <param name="value">
            A value indicating the focus that should be tracked in a <see cref="T:System.Windows.Controls.DataGrid"/>.
            </param>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.Owner">
            <summary>
            Gets or Sets the owner of the attached property.
            
            This is set when the Event is bound.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.Target">
            <summary>
            Gets or Sets the target object.
            
            Consumers need to call UpdateTargetCommand when they have changed, 
            Target properties.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.TargetMethod">
            <summary>
            Gets or Sets the target object method to bind to.
            
            Consumers need to call UpdateTargetCommand when they have changed, 
            Target properties.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.TargetParameter">
            <summary>
            Gets or Sets the target method parameter.
            
            Consumers need to call UpdateTargetCommand when they have changed, 
            Target properties.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.TargetCommand">
            <summary>
            Gets or Sets the reflective command used to invoke the target method.
            
            It is created in the UpdateTargetCommand method.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.EventName">
            <summary>
            Gets or Sets the name of the event being bound.
            
            This is set when the Event is bound.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.Event">
            <summary>
            Gets or Sets the Event being monitored.
            
            This is set when the Event is bound.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.EventHandler">
            <summary>
            Gets or Sets the event handler for the bound Event.
            
            This is created created when the Event is bound.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.Execute">
            <summary>
            Executes the strategy
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.Dispose">
            <summary>
            Unregisters the EventHandler from the Event
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding.CreateEventHandler(System.Type,System.Reflection.MethodInfo,System.Object)">
            <summary>
            Creates an event delegate
            </summary>
            <param name="eventHandlerType">Type of the Event Handler</param>
            <param name="methodToInvoke">Method to execute when the event is raised</param>
            <param name="methodOwner">Object that contains the method to execute.</param>
            <returns></returns>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.BehaviorBindingProperty">
            <summary>
            BehaviorBinding Attached Dependency Property
            
            Private property used to hold the Wrap the object used to execute the method.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.GetBehaviorBinding(System.Windows.DependencyObject)">
            <summary>
            Gets the BehaviorBinding property. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.SetBehaviorBinding(System.Windows.DependencyObject,ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehaviorBinding)">
            <summary>
            Sets the BehaviorBinding property.  
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.TargetProperty">
            <summary>
            Behavior Attached Dependency Property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.GetTarget(System.Windows.DependencyObject)">
            <summary>
            Gets the Target property. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.SetTarget(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the Target property.  
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.OnTargetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Binding property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.TargetMethodProperty">
            <summary>
            Command Attached Dependency Property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.GetTargetMethod(System.Windows.DependencyObject)">
            <summary>
            Gets the TargetMethod property.  
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.SetTargetMethod(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the TargetMethod property. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.OnTargetMethodChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TargetMethod property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.TargetMethodParameterProperty">
            <summary>
            TargetMethodParameter Attached Dependency Property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.GetTargetMethodParameter(System.Windows.DependencyObject)">
            <summary>
            Gets the TargetMethodParameter property.  
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.SetTargetMethodParameter(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the TargetMethodParameter property. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.OnTargetMethodParameterChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TargetMethodParameter property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.EventProperty">
            <summary>
            Event Attached Dependency Property
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.GetEvent(System.Windows.DependencyObject)">
            <summary>
            Gets the Event property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.SetEvent(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the Event property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.EventBehavior.OnEventChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Event property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior">
            <summary>
            Behavior uses to set the focus state of a FrameworkElement. 
            
            It provides an attached property that can be used for data binding for the MVVM framework.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.IsFocusedProperty">
            <summary>
            IsFocused dependency property indicating the focus state of the attached FrameworkElement.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.GetIsFocused(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the IsFocused dependency property.
            </summary>
            <param name="element">The DependencyObject for which the property is retrieved.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.SetIsFocused(System.Windows.DependencyObject,System.Nullable{System.Boolean})">
            <summary>
            Sets the value of the IsFocused dependency property.
            </summary>
            <param name="element">The DependencyObject on which the property is set.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.OnIsFocusedChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Represents the callback that is invoked when the effective property value of the IsFocused property changes.
            
            The first time the property is changed we attach to the Loaded, IsVisibleChanged, GotFocus and LostFocus events.
            </summary>
            <param name="d">The DependencyObject on which the property has changed value.</param>
            <param name="e">Event data that is issued by any event that tracks changes to the effective value of this property.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.OnElementIsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the value of the IsVisible property changes on this element.
            
            We are using the event to set the focus to the element when shown.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.OnElementIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs when the value of the IsEnabled property changes on this element.
            
            We are using the event to set the focus to the event it is is shown.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.OnElementGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this element gets logical focus.
            
            Relay the focus state to the dependency property
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.OnElementLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this element loses logical focus.
            
            Relay the focus state to the dependency property
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.FocusBehavior.SetFocusState(System.Windows.FrameworkElement,System.Boolean)">
            <summary>
            Sets the initial state of the element
            </summary>
            <param name="frameworkElement">The element</param>
            <param name="selectAll"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.ListBoxBehaviors">
            <summary>
            This class contains a few useful extenders for the ListBox
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.ListBoxBehaviors.GetAutoScrollToCurrentItem(System.Windows.DependencyObject)">
            <summary>
            Returns the value of the AutoScrollToCurrentItemProperty
            </summary>
            <param name="obj">The dependency-object whichs value should be returned</param>
            <returns>The value of the given property</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.ListBoxBehaviors.SetAutoScrollToCurrentItem(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the value of the AutoScrollToCurrentItemProperty
            </summary>
            <param name="obj">The dependency-object whichs value should be set</param>
            <param name="value">The value which should be assigned to the AutoScrollToCurrentItemProperty</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.ListBoxBehaviors.OnAutoScrollToCurrentItemChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method will be called when the AutoScrollToCurrentItem
            property was changed
            </summary>
            <param name="s">The sender (the ListBox)</param>
            <param name="e">Some additional information</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.ListBoxBehaviors.OnAutoScrollToCurrentItem(System.Windows.Controls.ListBox,System.Int32)">
            <summary>
            This method will be called when the ListBox should
            be scrolled to the given index
            </summary>
            <param name="listBox">The ListBox which should be scrolled</param>
            <param name="index">The index of the item to which it should be scrolled</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.PropagateMouseWheelBehavior">
            <summary>
            Captures and forwards MouseWheel events so that a nested ListBox does not
            prevent an outer scrollable control from scrolling.
            </summary>  
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.PopupCloseBehavior">
            <summary>
            Behavior used to close a popup when a mouse click is not within the popup.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Behaviors.PopupCloseBehavior.ShouldTakeMouseCaptureProperty">
             <summary>
             Gets the ShouldTakeMouseCaptureProperty.
            
             This dependency poperty allows attached elements to provide a function that controls if the behavior takes
             mouse capture and tries to execute the clicked button.
            
             This is needed in cases where there are more popups at play and the second popup would like to prevent
             the mouse capture, so it can stay open.
             </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.PopupCloseBehavior.SetShouldTakeMouseCapture(System.Windows.DependencyObject,System.Func{System.Boolean})">
            <summary>
            Sets the value for the ShouldTakeMouseCapture dependency property.
            </summary>
            <param name="d">The element to set the property on.</param>
            <param name="value">The function value.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.PopupCloseBehavior.GetShouldTakeMouseCapture(System.Windows.DependencyObject)">
            <summary>
            Gets the GetShouldTakeMouseCapture property.
            </summary>
            <param name="d">The element to get the property from.</param>
            <returns>The Type or Null if not set.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.RecyclingPopupBehavior">
            <summary>
            Implements a behavior that displays the DetailsPopup when the mouse moves over a
            FrameworkElement.
            </summary>
            <remarks>
            Generally when the mouse leaves our associated FrameworkElement (or the 
            details popup) we want to close the popup. However, we want to be able to
            move the mouse from one element to another and have the popup animate from
            one position to the next without hiding/showing the popup. Therefore, when
            the mouse leaves our associated FrameworkElement (or the popup content) we
            use a timer and don't actually close the popup until the timer expires. If
            the mouse enters another element/popup which shows the popup before the
            timer expires, we cancel the timer and just move the popup without 
            hiding/showing it.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Behaviors.TextBoxTextSelectionBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Behaviors.UpdateSourceBehavior">
            <summary>
            Behavior used to update the source of a dependency object.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.BarAnimationControl">
            <summary>
            Interaction logic for BarAnimationControl.xaml
            </summary>
            <summary>
            BarAnimationControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.BarAnimationControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.CircularAnimationControl">
             <summary>
             The CircularAnimationControl is a simple animation control. It is a ring of circles with
             different opacity. The animation occurs as when we rotate the ring.
             
             Important Properties:
               Foreground - Controls the brush used for the circles. 
               SpeedRatio - Controls the speed of rotation.
               
             Usage:
               Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.
            
               Step 1a) Using this custom control in a XAML file that exists in the current project.
               Add this XmlNamespace attribute to the root element of the markup file where it is 
               to be used:
            
                   xmlns:MyNamespace="clr-namespace:ArcGIS.Desktop.Controls.UserControls"
            
            
               Step 1b) Using this custom control in a XAML file that exists in a different project.
               Add this XmlNamespace attribute to the root element of the markup file where it is 
               to be used:
            
                   xmlns:MyNamespace="clr-namespace:ArcGIS.Desktop.Controls.UserControls;assembly=ArcGIS.Desktop.Controls.UserControls"
            
               You will also need to add a project reference from the project where the XAML file lives
               to this project and Rebuild to avoid compilation errors:
            
                   Right click on the target project in the Solution Explorer and
                   "Add Reference"->"Projects"->[Browse to and select this project]
            
            
               Step 2)
               Go ahead and use your control in the XAML file.
            
                   &lt;MyNamespace:CircularAnimationControl/&gt;
            
             </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.CircularAnimationControl.SpeedRatioProperty">
            <summary>
            Identifies for the ArcGIS.Desktop.Controls.CircularAnimationControl.SpeedRatio dependency property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.CircularAnimationControl.SpeedRatio">
            <summary>
            Gets or sets the rate, relative to its parent, at which time progresses for this 
            ArcGIS.Desktop.Controls.CircularAnimationControl.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.CircularAnimationControl.DataPathProperty">
            <summary>
            Identifies for the ArcGIS.Desktop.Controls.CircularAnimationControl.DataPath dependency property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.CircularAnimationControl.DataPath">
            <summary>
            Gets or sets the binding path which is used to toggle the control's visibility.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.SeperatorRecord">
            <summary>
            Interaction logic for CommandsControl.xaml
            </summary>
            
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.CommandsControl">
            <summary>
            CommandsControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.CommandsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.ConnectedTreeViewItem.Position">
            <summary>
            Position of a connected tree view item in its collection.
            </summary>    
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ConnectedTreeViewItem.SetConnectionVisibility(ArcGIS.Desktop.Internal.Framework.Utilities.ConnectedTreeViewItemViewModel,ArcGIS.Desktop.Internal.Framework.Controls.ConnectedTreeViewItem.Position)">
            <summary>
            Set the proper connection-line settings for an item given its position in the collection.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.TimeSpanTimeZoneInfo.TimeZone">
            <summary>
            Gets or sets the TimeZone property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.TimeSpanTimeZoneInfo.UTCOffset">
            <summary>
            Gets or sets the UTCOffset property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.TimeSpanTimeZoneInfo.DisplayName">
            <summary>
            Gets the DisplayName property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker">
            <summary>
            Interaction logic for DateTimePicker.xaml
            </summary>
            <summary>
            DateTimePicker
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.PopupOpened">
            <summary>
            The PopupOpened event occurs when the popup is opened.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnPopupOpened(System.EventArgs)">
            <summary>
            This raises our 'public' event. 
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.PopupClosed">
            <summary>
            The PopupClosed event occurs when the popup is closed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnPopupClosed(System.EventArgs)">
            <summary>
            This raises our 'public' event. 
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TodayButtonTextProperty">
            <summary>
            Gets the TodayButtonTextProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TodayButtonText">
            <summary>
            Gets or sets the TodayButtonText property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.IsTodayHighlightedProperty">
            <summary>
            Gets the IsTodayHighlightedProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.IsTodayHighlighted">
            <summary>
            Gets or sets the IsTodayHighlighted property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.NowTimeButtonTextProperty">
            <summary>
            Gets the NowTimeButtonTextProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.NowTimeButtonText">
            <summary>
            Gets or sets the NowTimeButtonText property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TimeZoneProperty">
            <summary>
            Gets the TimeZoneProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TimeZone">
            <summary>
            Gets or sets the TimeZone property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnTimeZoneChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles when the timezone properties are changed.
            </summary>
            <param name="d">This object</param>
            <param name="e">Event parameters</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TimeZoneDisplayProperty">
            <summary>
            Gets the TimeZoneDisplayProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TimeZoneDisplay">
            <summary>
            Gets or sets the TimeZoneDisplay property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TimeZoneVisibilityProperty">
            <summary>
            Gets the TimeZoneVisibilityProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.TimeZoneVisibility">
            <summary>
            Gets or sets the TimeZoneVisibility property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ShowDateProperty">
            <summary>
            Gets the ShowDateProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ShowDate">
            <summary>
            Gets or sets the ShowDate property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnShowDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the ShowDateProperty dependency property changes.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ShowOffSetProperty">
            <summary>
            Gets the ShowOffSetProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ShowOffset">
            <summary>
            Gets or sets the ShowOffset property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnShowOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the ShowOffSetProperty dependency property changes.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OffsetProperty">
            <summary>
            Gets the OffsetProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.Offset">
            <summary>
            Gets or sets the Offset property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the OffsetProperty dependency property changes.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ClockOffsetProperty">
            <summary>
            Gets the ClockOffsetProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ClockOffset">
            <summary>
            Gets or sets the ClockOffset property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnClockOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the ClockOffsetProperty dependency property changes.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OffsetTimeZonesProperty">
            <summary>
            Gets the OffsetTimeZonesProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OffsetTimeZones">
            <summary>
            Gets or sets the OffsetTimeZones property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnOffsetTimeZonesChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the OffsetTimeZonesProperty dependency property changes.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.SelectedOffsetTimeZoneProperty">
            <summary>
            Gets the SelectedOffsetTimeZoneProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.SelectedOffsetTimeZone">
            <summary>
            Gets or sets the SelectedOffsetTimeZone property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnSelectedOffsetTimeZoneChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the SelectedOffsetTimeZoneProperty dependency property changes.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ShowMillisecondsProperty">
            <summary>
            Gets the ShowMillisecondsProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.ShowMilliseconds">
            <summary>
            Gets or sets the ShowMilliseconds property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.OnShowMillisecondsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raised when the ShowMillisecondsProperty dependency property changes.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePicker.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper">
            <summary>
            Class <c>DateTimePickerHelper</c> updates <c>DisplayValue</c> whenever <c>DateTime</c> or <c>Offset</c> -if applicable- changes.
            </summary>
            <remarks>
            Please run tests in C:\ArcGIS\ArcGISDesktopUnitTests\ArcGISGeodatabaseUnitTests\ArcGIS.Desktop.Geodatabase.UnitTests\ArcGIS.Desktop.Geodatabase.UnitTests\Framework\DateTimePickerHelperUnitTests.cs
            whenever making changes to this class.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.#ctor(ArcGIS.Core.CIM.esriFieldType)">
            <summary>
            Constructs a <c>DateTimePickerHelper</c> with data type <paramref name="fieldType"/>.
            </summary>
            <param name="fieldType"></param>
            <remarks>
            If <paramref name="fieldType"/> is a non date/time type, it will default to esriFieldTypeDate.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.ShowDate">
            <value>
            Property <c>ShowDate</c> indicates whether the date can be shown.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.ShowTime">
            <value>
            Property <c>ShowTime</c> indicates whether the time can be shown.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.ShowOffset">
            <value>
            Property <c>ShowOffset</c> indicates whether the offset component can be shown.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.DisplayValue">
            <summary>
            The string representation of <c>Date</c> and <c>Offset</c>, if applicable.
            <list type="bullet">
            <item>DateOnly : <c>{mm/dd/yyyy}</c></item>
            <item>TimeOnly : <c>{hh:mm:ss tt}</c></item>
            <item>Date : <c>{mm/dd/yyyy hh:mm:ss tt}</c></item>
            <item>TimestampOffset : <c>{mm/dd/yyyy hh:mm:ss.fff tt (+/-)hh:mm}</c></item>
            </list>
            </summary>
            <remarks>
            If <c>hh:mm:ss tt</c> is 12:00:00 AM <c>Date</c> will display as <c>DateOnly</c>.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.IsHighPrecisionDate">
            <summary>
            Gets whether or not the Date field accepts high precision dates (e.g. millisecond and higher precision).
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.Date">
            <value>
            Property <c>Date</c> represents the <see cref="T:System.DateTime"/> component of <c>DisplayValue</c>
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.Offset">
            <value>
            Property <c>Offset</c> represents the <see cref="T:System.TimeSpan"/> component of <c>DisplayValue</c>
            </value>
            <remarks>
            If null and if applicable, <c>Offset</c> will display as +00:00
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.UpdateFieldType(ArcGIS.Core.CIM.esriFieldType)">
            <summary>
            Updates <c>DateTimePickerHelper</c>'s data type with <paramref name="fieldType"/>.
            </summary>
            <param name="fieldType"></param>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="fieldType"/> is not a date / time field type.</exception>
            <remarks>
            <list type="bullet">
            <item>
            Changing the data type will update <c>DisplayValue</c>. However neither <c>Date</c> nor <c>Offset</c> are updated.
            </item>
            <item>
            If <paramref name="fieldType"/> is a non date/time type, there is no effect.
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.UpdateDisplayValue(System.Object)">
            <summary>
            Updates <c>DateTime</c> and/or <c>Offset</c> if <paramref name="newValue"/> differs from <c>DisplayValue</c>.
            </summary>
            <param name="newValue"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.UpdatePrecision(System.Int32)">
            <summary>
            Update the precision of the Date field. This is currently only applicable for Date fields.
            0 is low precision and 1 is high precision.
            </summary>
            
            <param name="newPrecision">
            The updated precision value.
            </param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.ResetDate">
            <summary>
            Reset the date information.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.IsADateTimeField(ArcGIS.Core.CIM.esriFieldType)">
            <value>
            Indicates whether <see cref="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper._dataType"/> is a date / time field type.
            </value>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.InitializeDateTimeAndOffset(System.Object)">
            <summary>
            Sets <c>DateTime</c> and/or <c>Offset</c> to represent <paramref name="newValue"/>.
            </summary>
            <param name="newValue"></param>
            <remarks>
            <list type="bullet">
            <item>If parsing a <see cref="T:System.DateTimeOffset"/> with no <see cref="T:System.TimeSpan"/> component, <c>Offset</c> will be cleared.</item>
            <item>If <paramref name="newValue"/> does not contain a valid representation of a date and time, it is ignored.</item>
            </list>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.ParseDateTimeText(System.Object)">
            <summary>
            Sets <c>DateTime</c> and clears <c>Offset</c>.
            </summary>
            <param name="value"></param>
            <remarks>
            <list type="bullet">
            <item>If <paramref name="value"/> does not contain a valid representation of a date and time, it is ignored.</item>
            <item>Milliseconds are preserved despite not being exposed in <c>DisplayValue</c>.</item>
            </list>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.GetMilliseconds(System.Object)">
            <summary>
            Gets milliseconds if <paramref name="value"/> contains any.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper.GetDateTimeAsString">
            <summary>
            Returns the string representation of <see cref="F:ArcGIS.Desktop.Internal.Framework.Controls.DateTimePickerHelper._dataType"/>'s value.
            <example>
            For example:
            <code>
            "1/2/2023 4:05:06.789 PM +10:30" --- "4/3/2000 12:00:00.000 AM +00:00"
            </code>
            </example>
            </summary>
            <remarks>
            <list type="bullet">
            <item>DateOnly : <c>                                 1/2/2023 --- 4/3/2000                          </c></item>
            <item>TimeOnly : <c>                               4:05:06 PM --- 12:00:00 AM                       </c></item>
            <item>Date :     <c>                      1/2/2023 4:05:06 PM --- 4/3/2000 12:00:00 AM              </c></item>
            <item>TimestampOffset : <c>1/2/2023 4:05:06.789 PM +10:30</c> --- <c>4/3/2000 12:00:00.000 +00:00 AM</c></item>
            </list>
            </remarks>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.MessageLabel.SeverityProperty">
            <summary>
            Identifies for the ArcGIS.Desktop.Controls.CircularAnimationControl.DataPath dependency property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.MessageLabel.Severity">
            <summary>
            Gets or sets the binding path which is used to toggle the control's visibility.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.MessageLabel.ShowHelpProperty">
            <summary>
            Identifies for the ArcGIS.Desktop.Controls.CircularAnimationControl.DataPath dependency property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.MessageLabel.ShowHelp">
            <summary>
            Gets or sets the binding path which is used to toggle the control's visibility.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.MessageLabel.CanCloseProperty">
            <summary>
            Identifies for the ArcGIS.Desktop.Controls.MessageLabel.CanClose dependency property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.MessageLabel.CanClose">
            <summary>
            Gets or sets the property of showing close button.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.ErrorMessageDialog">
            <summary>
            Interaction logic for ErrorMessageDialog.xaml
            </summary>
            <summary>
            ErrorMessageDialog
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ErrorMessageDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.ExpressionBuilderSyntaxEditor">
            <summary>
            SyntaxEditor with custom behaviour for text expressions.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.PopupContent">
            <summary>
            Gets or sets the PopupContent property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.ContainsList">
            <summary>
            Gets or sets the ContainsList property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.ListBoxItemContainerStyle">
            <summary>
            Gets or sets the ListBoxItemContainerStyle property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.MaxDropDownBorderHeightProperty">
            <summary>
            Determines the maximum height of the pop-up drop-down border. Default value is 360.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.MaxDropDownBorderHeight">
            <summary>
            Gets or sets the MaxDropDownBorderHeight property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.MaxDropDownListBoxHeightProperty">
            <summary>
            Determines the maximum height of the pop-up drop-down ListBox. Default value is 300.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.MaxDropDownListBoxHeight">
            <summary>
            Gets or sets the MaxDropDownListBoxHeight property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.DropDownOpenInitially">
            <summary>
            Gets or sets the DropDownOpenInitially property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.DropDownOpenInitiallyProperty">
            <summary>
            Determines whether the dropdown will remain open initially. Default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.EnsureTextBoxFocus">
            <summary>
            Gets or sets the EnsureTextBoxFocus property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.EnsureTextBoxFocusProperty">
            <summary>
            Determines whether the focus on the textbox should be preserved in edit mode
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.PreventSelectionOverwrite">
            <summary>
            Gets or sets the PreventSelectionOverwrite property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.PreventSelectionOverwriteProperty">
            <summary>
            Determines whether the internal list box selection should not overwrite potential manually edited text
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.StayOpenOnPopupClick">
            <summary>
            Gets or sets the StayOpenOnPopupClick property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.StayOpenOnPopupClickProperty">
            <summary>
            Determines whether the dropdown closes if user clicks on the popup area
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.EnforceSelection">
            <summary>
            Gets or sets the EnforceSelection property.
            If combobox is in edit mode, preventselectionoverwrite prevents a manually entered value to be overwritten by
            the automatic selection of the combobox. If combobox finds a match, the selecteditem is automatically populated.
            When the user selects an existing item from the list, the selection will have precedence if this property is set.
            The property follows an opt in approach, not set the default behavior is preserved.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.EnforceSelectionProperty">
            <summary>
            Determines whether the internal list box selection should have precedence when the current manually entered value is not
            in the list and the user has selected an item from the list.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.AllowClearSelection">
            <summary>
            Gets or sets the allow clear selection property.
            If combobox is in edit mode and this property is set to true, the user can clear out the editable textbox
            and clears the selection that way.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.AllowClearSelectionProperty">
            <summary>
            Determines whether the internal list box selection is set to null when user enters an empty string in the editable textbox.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.HasText">
            <summary>
            Gets or sets whether this combo box has text.
            Can be used as a trigger for showing a clear selection button.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.HasTextProperty">
            <summary>
            Determines whether the combobox contains any text.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.OpensOnClick">
            <summary>
            Gets or sets whether this combo box opens its dropdown on click.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.OpensOnClickProperty">
            <summary>
            Determines whether the combobox opens its dropdown on click.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.OpensOnFocus">
            <summary>
            Gets or sets whether this combo box opens its dropdown on got focus.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.OpensOnFocusProperty">
            <summary>
            Determines whether the combobox opens its dropdown on focus.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.ClearSelectionButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Clears the text and the selection.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.EditableTextBoxOnTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Sets the HasText property when user enters text in edit mode.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ExtendedComboBox.EditableTextBoxOnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Opens the drop down when user moves focus to the edit text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar">
            <summary>
            Interaction logic for FluidProgressBar.xaml
            </summary>
            <summary>
            FluidProgressBar
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DelayProperty">
            <summary>
            Delay Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.Delay">
            <summary>
            Gets or sets the Delay property. This dependency property 
            indicates the delay between adjacent animation timelines.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDelayChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Delay property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDelayChanged(System.Windows.Duration,System.Windows.Duration)">
            <summary>
            Provides derived classes an opportunity to handle changes to the Delay property.
            </summary>
            <param name="oldDelay">Old Value</param>
            <param name="newDelay">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotWidthProperty">
            <summary>
            DotWidth Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotWidth">
            <summary>
            Gets or sets the DotWidth property. This dependency property 
            indicates the width of each of the dots.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DotWidth property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotWidthChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DotWidth property.
            </summary>
            <param name="oldDotWidth">Old Value</param>
            <param name="newDotWidth">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotHeightProperty">
            <summary>
            DotHeight Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotHeight">
            <summary>
            Gets or sets the DotHeight property. This dependency property 
            indicates the height of each of the dots.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DotHeight property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotHeightChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DotHeight property.
            </summary>
            <param name="oldDotHeight">Old Value</param>
            <param name="newDotHeight">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotRadiusXProperty">
            <summary>
            DotRadiusX Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotRadiusX">
            <summary>
            Gets or sets the DotRadiusX property. This dependency property 
            indicates the corner radius width of each of the dot.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotRadiusXChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DotRadiusX property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotRadiusXChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DotRadiusX property.
            </summary>
            <param name="oldDotRadiusX">Old Value</param>
            <param name="newDotRadiusX">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotRadiusYProperty">
            <summary>
            DotRadiusY Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DotRadiusY">
            <summary>
            Gets or sets the DotRadiusY property. This dependency property 
            indicates the corner height of each of the dots.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotRadiusYChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DotRadiusY property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDotRadiusYChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DotRadiusY property.
            </summary>
            <param name="oldDotRadiusY">Old Value</param>
            <param name="newDotRadiusY">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DurationAProperty">
            <summary>
            DurationA Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DurationA">
            <summary>
            Gets or sets the DurationA property. This dependency property 
            indicates the duration of the animation from the start point till KeyFrameA.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDurationAChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DurationA property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDurationAChanged(System.Windows.Duration,System.Windows.Duration)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DurationA property.
            </summary>
            <param name="oldDurationA">Old Value</param>
            <param name="newDurationA">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DurationBProperty">
            <summary>
            DurationB Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DurationB">
            <summary>
            Gets or sets the DurationB property. This dependency property 
            indicates the duration of the animation from the KeyFrameA till KeyFrameB.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDurationBChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DurationB property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDurationBChanged(System.Windows.Duration,System.Windows.Duration)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DurationB property.
            </summary>
            <param name="oldDurationB">Old Value</param>
            <param name="newDurationB">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DurationCProperty">
            <summary>
            DurationC Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.DurationC">
            <summary>
            Gets or sets the DurationC property. This dependency property 
            indicates the duration of the animation from KeyFrameB till the end point.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDurationCChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the DurationC property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnDurationCChanged(System.Windows.Duration,System.Windows.Duration)">
            <summary>
            Provides derived classes an opportunity to handle changes to the DurationC property.
            </summary>
            <param name="oldDurationC">Old Value</param>
            <param name="newDurationC">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.KeyFrameAProperty">
            <summary>
            KeyFrameA Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.KeyFrameA">
            <summary>
            Gets or sets the KeyFrameA property. This dependency property 
            indicates the first KeyFrame position after the initial keyframe.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnKeyFrameAChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the KeyFrameA property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnKeyFrameAChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the KeyFrameA property.
            </summary>
            <param name="oldKeyFrameA">Old Value</param>
            <param name="newKeyFrameA">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.KeyFrameBProperty">
            <summary>
            KeyFrameB Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.KeyFrameB">
            <summary>
            Gets or sets the KeyFrameB property. This dependency property 
            indicates the second KeyFrame position after the initial keyframe.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnKeyFrameBChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the KeyFrameB property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnKeyFrameBChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the KeyFrameB property.
            </summary>
            <param name="oldKeyFrameB">Old Value</param>
            <param name="newKeyFrameB">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OscillateProperty">
            <summary>
            Oscillate Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.Oscillate">
            <summary>
            Gets or sets the Oscillate property. This dependency property 
            indicates whether the animation should oscillate.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnOscillateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the Oscillate property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnOscillateChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes to the Oscillate property.
            </summary>
            <param name="oldOscillate">Old Value</param>
            <param name="newOscillate">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.ReverseDurationProperty">
            <summary>
            ReverseDuration Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.ReverseDuration">
            <summary>
            Gets or sets the ReverseDuration property. This dependency property 
            indicates the duration of the total animation in reverse.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnReverseDurationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ReverseDuration property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnReverseDurationChanged(System.Windows.Duration,System.Windows.Duration)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ReverseDuration property.
            </summary>
            <param name="oldReverseDuration">Old Value</param>
            <param name="newReverseDuration">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.TotalDurationProperty">
            <summary>
            TotalDuration Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.TotalDuration">
            <summary>
            Gets or sets the TotalDuration property. This dependency property 
            indicates the duration of the complete animation.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnTotalDurationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TotalDuration property.
            </summary>
            <param name="d">FluidProgressBar</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnTotalDurationChanged(System.Windows.Duration,System.Windows.Duration)">
            <summary>
            Provides derived classes an opportunity to handle changes to the TotalDuration property.
            </summary>
            <param name="oldTotalDuration">Old Value</param>
            <param name="newTotalDuration">New Value</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.#ctor">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event
            </summary>
            <param name="sender">Sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event
            </summary>
            <param name="sender">Sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.OnIsVisibleChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the IsVisibleChanged event
            </summary>
            <param name="sender">Sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.StartFluidAnimation">
            <summary>
            Starts the animation
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.StopFluidAnimation">
            <summary>
            Stops the animation
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.RestartStoryboardAnimation">
            <summary>
            Stops the animation, updates the keyframes and starts the animation
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.GetKeyFramesFromStoryboard">
            <summary>
            Obtains the keyframes for each animation in the storyboard so that
            they can be updated when required.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.ProcessDoubleAnimationWithKeys(System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames,System.Boolean)">
            <summary>
            Gets the keyframes in the given animation and stores them in a map
            </summary>
            <param name="dakeys">Animation containg keyframes</param>
            <param name="isOpacityAnim">Flag to indicate whether the animation targets the opacity or the translate transform</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.UpdateKeyFrames">
            <summary>
            Update the key value of each keyframe based on the current width of the FluidProgressBar
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.UpdateKeyFrame(System.Int32,System.Double)">
            <summary>
            Update the key value of the keyframes stored in the map
            </summary>
            <param name="key">Key of the dictionary</param>
            <param name="newValue">New value to be given to the key value of the keyframes</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.UpdateKeyTimes(System.Int32,System.Windows.Duration)">
            <summary>
            Updates the duration of each of the keyframes stored in the map
            </summary>
            <param name="key">Key of the dictionary</param>
            <param name="newDuration">New value to be given to the duration value of the keyframes</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.UpdateKeyTime(System.Int32,System.Windows.Duration)">
            <summary>
            Updates the duration of each of the keyframes stored in the map
            </summary>
            <param name="key">Key of the dictionary</param>
            <param name="newDuration">New value to be given to the duration value of the keyframes</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.UpdateOpacityKeyTime(System.Int32,System.Windows.Duration)">
            <summary>
            Updates the duration of the second keyframe of all the opacity animations
            </summary>
            <param name="key">Key of the dictionary</param>
            <param name="newDuration">New value to be given to the duration value of the keyframes</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.UpdateTimelineDelay(System.Windows.Duration)">
            <summary>
            Updates the delay between consecutive timelines
            </summary>
            <param name="newDelay">Delay duration</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.Dispose">
            <summary>
            Releases all resources used by an instance of the FluidProgressBar class.
            </summary>
            <remarks>
            This method calls the virtual Dispose(bool) method, passing in 'true', and then suppresses 
            finalization of the instance.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.Finalize">
            <summary>
            Releases unmanaged resources before an instance of the FluidProgressBar class is reclaimed by garbage collection.
            </summary>
            <remarks>
            NOTE: Leave out the finalizer altogether if this class doesn't own unmanaged resources itself, 
            but leave the other methods exactly as they are.
            This method releases unmanaged resources by calling the virtual Dispose(bool), passing in 'false'.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by an instance of the FluidProgressBar class and optionally releases the managed resources.
            </summary>
            <param name="disposing">'true' to release both managed and unmanaged resources; 'false' to release only unmanaged resources.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FluidProgressBar.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.GalleryCustomizeWindow">
            <summary>
            Interaction logic for GalleryCustomizeWindow.xaml
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.GalleryCustomizeWindow.GroupSource">
            <summary>
            Gets or sets the previous searched strings. By default, this is managed by the control itself,
            but if it is set specifically, the client is responsible for adding or removing the list. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.GalleryCustomizeWindow.SelectedGroup">
            <summary>
            Gets or sets the previous searched strings. By default, this is managed by the control itself,
            but if it is set specifically, the client is responsible for adding or removing the list. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.GalleryCustomizeWindow.SearchSuggestionSource">
            <summary>
            Gets or sets the suggested searchable gallery items. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.GalleryCustomizeWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.GalleryItemWrapper">
            <summary>
            Interaction logic for GalleryItemWrapper.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.GalleryItemWrapper.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.MaskedTextBox._isSyncingTextAndValueProperties">
            <summary>
            Flags if the Text and Value properties are in the process of being sync'd
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid">
            <summary>
            The ProFlexGrid object.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.#ctor">
            <summary>
            Constructs an instance of the ProFlexGrid
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.UseAutomationPeerProperty">
            <summary>
            Gets the UseAutomationPeerProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.UseAutomationPeer">
            <summary>
            Gets or sets the UseAutomationPeer property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.ProColumnHeaderRowHeightProperty">
            <summary>
            Gets the ProColumnHeaderRowHeightProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.ProColumnHeaderRowHeight">
            <summary>
            Gets or sets the ProColumnHeaderRowHeight property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.ProRowHeightProperty">
            <summary>
            Gets the ProRowHeightProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.ProRowHeight">
            <summary>
            Gets or sets the ProRowHeight property.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.AllowShortcutsWithoutModifiersCallbackProperty">
            <summary>
            Gets the AllowShortcutsWithoutModifiersCallbackProperty.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.AllowShortcutsWithoutModifiersCallback">
            <summary>
            Gets or sets the AllowShortcutsWithoutModifiersCallback property.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.OnCreateAutomationPeer">
            <summary>
            Provides an appropriate automation peer for this control, as part of the WPF automation infrastructure.
            </summary>
            <returns>AutomationPeer or null for none</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.OnApplyTemplate">
            <summary>
            Called when the Template is applied
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.ArrangeOverride(System.Windows.Size)">
            <summary>
            Called to arrange and size the content of a System.Windows.Controls.Control object.
            </summary>
            <param name="arrangeBounds">The bounds.</param>
            <returns>The size of the control.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ProFlexGrid.AllowShortcutsWithoutModifiers(System.Windows.Input.KeyEventArgs)">
             <summary>
             Determines if the key event should be forwarded to the shortcut system.
            
             Currently the framework will prevent shortcut keys without any modifiers to be executed.
            
             This allows clients to override the behavior.
             </summary>
             <param name="keyArgs">The keyboard arguments</param>
             <returns>True if the key can be forwarded to the shortcut system.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.FlexGridExtensions">
            <summary>
            Class for FlexGrid extension methods
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.FlexGridExtensions.ToGridLength(ArcGIS.Core.CIM.TableRowHeightType,System.Double,System.Double)">
            <summary>
            Converts a TableRowHeightType to a pixel GridLength.
            </summary>
            <remarks>
            The function uses the ProFlexGrid.SingleRowPixels, ProFlexGrid.DoubleRowPixels and ProFlexGrid.TripleRowPixels to create the GridLength.
            </remarks>
            <param name="heightType">The ProFlexGridRowHeight to convert.</param>
            <param name="singleLineHeight">The default height for a single line.</param>
            <param name="padding">The padding for the lines.</param>
            <returns>A pixel GridLength</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ProgressorWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RadialMenuCentralItem">
            <summary>
            Interaction logic for RadialMenuCentralItem.xaml
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RadialMenu">
            <summary>
            Circular context menu for selecting commands primarily by direction. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RadialMenu.Show(System.String,System.Boolean,System.Windows.Point)">
             <summary>
             Displays the radial menu defined in DAML.
             </summary>
             <param name="menuID">The DAML menu ID.</param>
             <param name="iconOnly">Only present icons, no captions.</param>
             <param name="startPoint">Set the radial menu's startup location.</param>
             <exception cref="T:System.Exception"></exception>
            
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RadialMenuWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider">
            <summary>
            A slider that provides the a range
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.TickFrequency">
            <summary>
            Tick frequency for the range slider
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when MinRange is set less than 0</exception>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.TickFrequencyProperty">
            <summary>
            The min range value that you can have for the range slider
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when MinRange is set less than 0</exception>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.IsSnapToTickEnabled">
            <summary>
            IsSnapToTickEnabled for the range slider
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when MinRange is set less than 0</exception>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.IsSnapToTickEnabledProperty">
            <summary>
            The min range value that you can have for the range slider
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when MinRange is set less than 0</exception>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.Minimum">
            <summary>
            The min value for the range of the range slider
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.MinimumProperty">
            <summary>
            The min value for the range of the range slider
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.Maximum">
            <summary>
            The max value for the range of the range slider
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.MaximumProperty">
            <summary>
            The max value for the range of the range slider
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.LowValue">
            <summary>
            The min value of the selected range of the range slider
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.LowValueProperty">
            <summary>
            The min value of the selected range of the range slider
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.HighValue">
            <summary>
            The max value of the selected range of the range slider
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.HighValueProperty">
            <summary>
            The max value of the selected range of the range slider
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.MinRange">
            <summary>
            The min range value that you can have for the range slider
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when MinRange is set less than 0</exception>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.MinRangeProperty">
            <summary>
            The min range value that you can have for the range slider
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when MinRange is set less than 0</exception>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.RangeSelectionChangedEvent">
            <summary>
            Event raised whenever the selected range is changed
            </summary>
        </member>
        <member name="E:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.RangeSelectionChanged">
            <summary>
            Event raised whenever the selected range is changed
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.MoveSelection(System.Boolean)">
            <summary>
            moves the current selection with x value
            </summary>
            <param name="isLeft">True if you want to move to the left</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.ResetSelection(System.Boolean)">
            <summary>
            Reset the Slider to the Start/End
            </summary>
            <param name="isStart">Pass true to reset to start point</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.MoveSelection(System.Double)">
            <summary>
             Change the range selected 
            </summary>
            <param name="span">The steps</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.SetSelectedRange(System.Double,System.Double)">
            <summary>
            Sets the selected range in one go. If the selection is invalid, nothing happens.
            </summary>
            <param name="selectionStart">New selection start value</param>
            <param name="selectionStop">New selection stop value</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.ZoomToSpan(System.Double)">
            <summary>
            Changes the selected range to the supplied range
            </summary>
            <param name="span">The span to zoom</param>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.AutoToolTipPlacement">
            <summary>
            AutoToolTipPlacement for the range slider
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.AutoToolTipPrecision">
            <summary>
            AutoToolTipPrecision for the range slider
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider.OnApplyTemplate">
            <summary>
            Overide to get the visuals from the control template
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RangeSelectionChangedEventHandler">
            <summary>
            Delegate for the RangeSelectionChanged event
            </summary>
            <param name="sender">The object raising the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RangeSelectionChangedEventArgs">
            <summary>
            Event arguments for the Range slider RangeSelectionChanged event
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSelectionChangedEventArgs.NewMinimum">
            <summary>
            The new range start selected in the range slider
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RangeSelectionChangedEventArgs.NewMaximum">
            <summary>
            The new range stop selected in the range slider
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSelectionChangedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            sets the range start and range stop for the event args
            </summary>
            <param name="newMinimum">The new range start set</param>
            <param name="newMaximum">The new range stop set</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.RangeSelectionChangedEventArgs.#ctor(ArcGIS.Desktop.Internal.Framework.Controls.RangeSlider)">
            <summary>
            sets the range start and range stop for the event args by using the slider LowValue and HighValue properties
            </summary>
            <param name="slider">The slider to get the info from</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RecyclingPopup">
            <summary>
            Represents a popup that shows some content within a popup where
            only one popup can be shown at a time.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider">
            <summary>
            Custom control that presents an image, label, and a editbox with a drop down slider.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.ValueProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Value"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Value"/> dependency property.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Value">
            <summary>
            Gets or sets the committed value of the control.
            </summary>
            <value>
            The committed value of the control.
            </value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.EditBoxWidthProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.EditBoxWidth"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.EditBoxWidth"/> dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.MaximumProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Maximum"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Maximum"/> dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.MinimumProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Minimum"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Minimum"/> dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SpinnerVisibilityProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SpinnerVisibility"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SpinnerVisibility"/> dependency property.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SpinnerVisibility">
            <summary>
            Gets or sets a value indicating if and when the control has a spinner available.
            </summary>
            <value>
            A value indicating if and when the control has a spinner available.
            The default value is <c>SpinnerVisibility.Collapsed</c>.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Maximum">
            <summary>
            Gets or sets the highest possible value.
            </summary>
            <value>
            The highest possible value.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Minimum">
            <summary>
            Gets or sets the lowest possible value.
            </summary>
            <value>
            The lowest possible value.
            </value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SmallChangeProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SmallChange"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SmallChange"/> dependency property.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.SmallChange">
            <summary>
            Gets or sets the small change value.
            </summary>
            <value>
            The small change value.
            The default value is <c>1.0</c>.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.LargeChange">
            <summary>
            Gets or sets the large change value.
            </summary>
            <value>
            The large change value.
            The default value is <c>5.0</c>.
            </value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.LargeChangeProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.LargeChange"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.LargeChange"/> dependency property.</value>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.FormatProperty">
            <summary>
            Identifies the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Format"/> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <see cref="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Format"/> dependency property.</value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.Format">
            <summary>
            Gets or sets the number format string.
            </summary>
            <value>
            The number format string.
            The default value is <c>"G"</c>.
            </value>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.RibbonSlider.EditBoxWidth">
            <summary>
            Gets or sets a value indicating the width of the editbox portion of the control.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox">
             <summary>
             Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.
            
             Step 1a) Using this custom control in a XAML file that exists in the current project.
             Add this XmlNamespace attribute to the root element of the markup file where it is 
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:CustomControlLibrary"
            
            
             Step 1b) Using this custom control in a XAML file that exists in a different project.
             Add this XmlNamespace attribute to the root element of the markup file where it is 
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:CustomControlLibrary;assembly=CustomControlLibrary"
            
             You will also need to add a project reference from the project where the XAML file lives
             to this project and Rebuild to avoid compilation errors:
            
                 Right click on the target project in the Solution Explorer and
                 "Add Reference"->"Projects"->[Browse to and select this project]
            
            
             Step 2)
             Go ahead and use your control in the XAML file.
            
                 &lt;MyNamespace:SearchTextBox/&gt;
            
             </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.InfoText">
            <summary>
            Gets or sets the hint text of the control. The default value is Search. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.SearchMode">
            <summary>
            Gets or sets the search mode. It can be Auto or Manual. 
            The default value is Auto. When search mode is Auto, by default,
            search event is fired 500 milliseconds after typing. When search mode is Manual, search event is trigged by user pressing the Enter key.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.HistorySource">
            <summary>
            Gets or sets the previous searched strings. By default, this is managed by the control itself,
            but if it is set specifically, the client is responsible for adding or removing the list. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.SuggestionSource">
            <summary>
            Gets or sets the suggested search strings. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.SuggestionItemTemplate">
            <summary>
            Gets or sets the data template for rendering suggestion items
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.HasText">
            <summary>
            Gets or sets if the search field has text. The value is a type of bool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.SuggestionListMax">
            <summary>
            Gets or sets the maximum of items in the suggestion list. The value is a type of int.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.ShowHistory">
            <summary>
            Gets or sets if the control shows a history menu. The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.ShowGroup">
            <summary>
            Gets or sets if the control shows groups in the suggestion dropdown. 
            The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.SearchTextBox.SearchEventTimeDelay">
            <summary>
            Gets or sets the duration of the time delay when the search mode is Auto. 
            The default value is 500 milliseconds.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.TaggingControl">
            <summary>
            TaggingControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.TaggingControl.OnPaste(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Event handler for ApplicationCommands.Paste command.
            <remarks>
            We want to allow paste only in plain text format.
            </remarks>
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.TaggingControl.OnCanPaste(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            CanExecute event handler for ApplicationCommand.Paste.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.TaggingControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedTextProperty">
            <summary>
            CheckedText Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedText">
            <summary>
            Gets or sets the CheckedText property. This dependency property 
            indicates the on text.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedBackgroundProperty">
            <summary>
            CheckedBackground Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedBackground">
            <summary>
            Gets or sets the CheckedBackground property. This dependency property 
            indicates Background of the Checked Text.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedForegroundProperty">
            <summary>
            CheckedForeground Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedForeground">
            <summary>
            Gets or sets the CheckedForeground property. This dependency property 
            indicates Foreground of the Checked Text.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedToolTipProperty">
            <summary>
            CheckedToolTip Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CheckedToolTip">
            <summary>
            Gets or sets the CheckedToolTip property. This dependency property 
            indicates the tooltip of the ToggleSwitch when the control is in Checked state.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnCheckedToolTipChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the CheckedToolTip property.
            </summary>
            <param name="d">ToggleSwitch</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnCheckedToolTipChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes to the CheckedToolTip property.
            </summary>
            <param name="oldCheckedToolTip">Old Value</param>
            <param name="newCheckedToolTip">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CornerRadiusProperty">
            <summary>
            CornerRadius Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CornerRadius">
            <summary>
            Gets or sets the CornerRadius property. This dependency property 
            indicates the corner radius of the outer most border of the ToggleSwitch.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.IsCheckedLeftProperty">
            <summary>
            IsCheckedLeft Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.IsCheckedLeft">
            <summary>
            Gets or sets the IsCheckedLeft property. This dependency property 
            indicates whether the content for the Checked state should appear in the left side.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnIsCheckedLeftChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the IsCheckedLeft property.
            </summary>
            <param name="d">ToggleSwitch</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnIsCheckedLeftChanged(System.Boolean,System.Boolean)">
            <summary>
            Provides derived classes an opportunity to handle changes to the IsCheckedLeft property.
            </summary>
            <param name="oldIsCheckedLeft">Old Value</param>
            <param name="newIsCheckedLeft">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.TargetColumnInternalProperty">
            <summary>
            TargetColumnInternal Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.TargetColumnInternal">
            <summary>
            Gets or sets the TargetColumnInternal property. This dependency property 
            indicates the win column to which the contentborder moves when the control is in unchecked state.
            This property is used internally.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnTargetColumnInternalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the TargetColumnInternal property.
            </summary>
            <param name="d">ToggleSwitch</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnTargetColumnInternalChanged(System.Int32,System.Int32)">
            <summary>
            Provides derived classes an opportunity to handle changes to the TargetColumnInternal property.
            </summary>
            <param name="oldTargetColumnInternal">Old Value</param>
            <param name="newTargetColumnInternal">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbBackgroundProperty">
            <summary>
            ThumbBackground Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbBackground">
            <summary>
            Gets or sets the ThumbBackground property. This dependency property 
            indicates the Background of the Thumb.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbBorderBrushProperty">
            <summary>
            ThumbBorderBrush Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbBorderBrush">
            <summary>
            Gets or sets the ThumbBorderBrush property. This dependency property 
            indicates the BorderBrush of the Thumb.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbBorderThicknessProperty">
            <summary>
            ThumbBorderThickness Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbBorderThickness">
            <summary>
            Gets or sets the ThumbBorderThickness property. This dependency property 
            indicates the BorderThickness of the Thumb.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbCornerRadiusProperty">
            <summary>
            ThumbCornerRadius Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbCornerRadius">
            <summary>
            Gets or sets the ThumbCornerRadius property. This dependency property 
            indicates the corner radius of the Thumb.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbGlowColorProperty">
            <summary>
            ThumbGlowColor Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbGlowColor">
            <summary>
            Gets or sets the ThumbGlowColor property. This dependency property 
            indicates the GlowColor of the Thumb.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbShineCornerRadiusProperty">
            <summary>
            ThumbShineCornerRadius Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbShineCornerRadius">
            <summary>
            Gets or sets the ThumbShineCornerRadius property. This dependency property 
            indicates the corner radius of the shine over the thumb.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbWidthProperty">
            <summary>
            ThumbWidth Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.ThumbWidth">
            <summary>
            Gets or sets the ThumbWidth property. This dependency property 
            indicates the width  of the Thumb as a percentage of the total width of the ToggleSwitch.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CoerceThumbWidth(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the Thumb Width to an acceptable value
            </summary>
            <param name="d">Dependency Object</param>
            <param name="value">Value</param>
            <returns>Coerced Value</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnThumbWidthChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ThumbWidth property.
            </summary>
            <param name="d">ToggleSwitch</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnThumbWidthChanged(System.Double,System.Double)">
            <summary>
            Provides derived classes an opportunity to handle changes to the ThumbWidth property.
            </summary>
            <param name="oldThumbWidth">Old Value</param>
            <param name="newThumbWidth">New Value</param>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedBackgroundProperty">
            <summary>
            UncheckedBackground Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedBackground">
            <summary>
            Gets or sets the UncheckedBackground property. This dependency property 
            indicates the Background of the Unchecked Text.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedForegroundProperty">
            <summary>
            UncheckedForeground Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedForeground">
            <summary>
            Gets or sets the UncheckedForeground property. This dependency property 
            indicates the Foreground of the Unchecked Text.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedTextProperty">
            <summary>
            UncheckedText Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedText">
            <summary>
            Gets or sets the UncheckedText property. This dependency property 
            indicates the off text.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedToolTipProperty">
            <summary>
            UncheckedToolTip Dependency Property
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UncheckedToolTip">
            <summary>
            Gets or sets the UncheckedToolTip property. This dependency property 
            indicates the tooltip for the control when it is in Unchecked state.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnUncheckedToolTipChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the UncheckedToolTip property.
            </summary>
            <param name="d">ToggleSwitch</param>
            <param name="e">DependencyProperty changed event arguments</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnUncheckedToolTipChanged(System.String,System.String)">
            <summary>
            Provides derived classes an opportunity to handle changes to the UncheckedToolTip property.
            </summary>
            <param name="oldUncheckedToolTip">Old Value</param>
            <param name="newUncheckedToolTip">New Value</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnApplyTemplate">
            <summary>
            Override which is called when the template is applied
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Handler for the event raised when the size of the ToggleSwitch changes
            </summary>
            <param name="sizeInfo">Size Changed Info</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnChecked">
            <summary>
            Overridden handler for the event when the ToggleSwitch becomes Checked
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.OnUnchecked">
            <summary>
            Overridden handler for the event when the ToggleSwitch becomes Unchecked
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.GetTemplateParts">
            <summary>
            Gets the required controls in the template
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.UpdateToggleSwitchContents(System.Boolean)">
            <summary>
            Updates the contents of the ToggleSwitch based on IsCheckedLeft flag.
            If it is true, then the Checked content would be in the left side, 
            the Unchecked content in the right side and vice-versa if it is false.
            </summary>
            <param name="isCheckedLeft"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.GetChildControl``1(System.String)">
            <summary>
            Generic method to get a control from the template
            </summary>
            <typeparam name="T">Type of the control</typeparam>
            <param name="ctrlName">Name of the control in the template</param>
            <returns>Control</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CalculateLayout">
            <summary>
            Calculates the width and margin of the contents of the ContentBorder
            The following calculation is used: (Here p is the value of ThumbWidth)
            p = [10, 90]
            Margin = 1 - p
            Left = (1 - p)/(2 - p)
            Right = (1 - p)/(2 - p)
            Center = 0.03
            CenterLeft = 0.485 - Left
            CenterRight = 0.485 - Left
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.ToggleSwitch.CalculateContentBorderMargin">
            <summary>
            Calculates the margin of the contentBorder
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.GeometryHelper.GetRoundRectangle(System.Windows.Rect,System.Windows.Thickness,System.Windows.CornerRadius)">
            <summary>
            Gets the RoundRectangle Geometry for a rectangle having a
            given thickness and corner radius.
            </summary>
            <param name="baseRect">Base Rectangle</param>
            <param name="thickness">Border thickness</param>
            <param name="cornerRadius">CornerRadius</param>
            <returns>Geometry</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.TreeComboBox">
             <summary>
             Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.
            
             Step 1a) Using this custom control in a XAML file that exists in the current project.
             Add this XmlNamespace attribute to the root element of the markup file where it is 
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:ArcGIS.Desktop.Controls"
            
            
             Step 1b) Using this custom control in a XAML file that exists in a different project.
             Add this XmlNamespace attribute to the root element of the markup file where it is 
             to be used:
            
                 xmlns:MyNamespace="clr-namespace:ArcGIS.Desktop.Controls;assembly=ArcGIS.Desktop.Controls"
            
             You will also need to add a project reference from the project where the XAML file lives
             to this project and Rebuild to avoid compilation errors:
            
                 Right click on the target project in the Solution Explorer and
                 "Add Reference"->"Projects"->[Browse to and select this project]
            
            
             Step 2)
             Go ahead and use your control in the XAML file.
            
                 &lt;MyNamespace:TreeComboBox/&gt;
            
             </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ITreeViewItemProvider.Children">
            <summary>
            Returns the logical child items of this object.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ITreeViewItemProvider.HasDummyChild">
            <summary>
            Returns true if this object's Children have not yet been populated.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ITreeViewItemProvider.IsExpanded">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is expanded.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ITreeViewItemProvider.IsSelected">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is selected.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Controls.ITreeViewItemProvider.Parent">
            <summary>
            Gets/Sets the parent for the item.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Controls.WaitingCursorControl">
            <summary>
            Interaction logic for WaitingAnimationControl.xaml
            </summary>
            <summary>
            WaitingCursorControl
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.WaitingCursorControl.#ctor">
            <summary>
            Instantiates a new instance of the WaitingCursorControl.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Controls.WaitingCursorControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Metro.InternalMessageBox">
            <summary>
            Interaction logic for InternalMessageBox.xaml
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Metro.InternalMessageBox.MessageBoxResult">
            <summary>
            Gets the MessageBox result, which is set when the "Closed" event is raised.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Metro.InternalMessageBox.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Metro.MetroWindow">
            <summary>
            ArcGIS Pro styled window control.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Metro.MetroWindow.InstanceID">
            <summary>
            MetroWindows restore their last location using their class name unless an InstanceID is specified. This
            is helpful when a single MetroWindow class hosts different content and each mode should preseve its location uniquely.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Metro.MetroWindow.SaveWindowPosition">
            <summary>
            MetroWindows remember their last location unless SaveWindowPosition is set to false.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Events.ActiveToolChangingEvent.Subscribe(System.Func{ArcGIS.Desktop.Framework.Events.ToolEventArgs,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Events.ActiveToolChangingEvent.Unsubscribe(System.Func{ArcGIS.Desktop.Framework.Events.ToolEventArgs,System.Threading.Tasks.Task})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Events.ActiveToolChangingEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Events.ShortCutsChangedEvent">
            <summary>
            Occurs when the shortcut settings are changed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Events.ShortCutsChangedEvent.Subscribe(System.Action{System.EventArgs},System.Boolean)">
            <summary>
        Call the specified method whenever the event occurs.
      </summary><param name="action">The method to call.</param><param name="keepSubscriberAlive">Subscribe with a strong reference. Default is false (weak reference).</param><returns>A SubscriptionToken that can be used to unsubscribe with.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Events.ShortCutsChangedEvent.Unsubscribe(System.Action{System.EventArgs})">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="action">The method being called.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Events.ShortCutsChangedEvent.Unsubscribe(ArcGIS.Core.Events.SubscriptionToken)">
            <summary>
        Stop being notified when the event occurs.
      </summary><param name="token">The registration token.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.IGalleryItemInfo">
            <summary>
            For Euei logging
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.IGalleryItemInfo.EueiID">
            <summary>
            The unlocalized gallery item identifier
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Contracts.IConfigurationHelp.WebHelpURL">
            <summary>
            Gets the web help URL the configuration should use when launching help.
            </summary>
            <example>http://pro.arcgis.com</example>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Contracts.IConfigurationHelp.HelpStartPage">
            <summary>
            Gets the default help page.
            </summary>
            <example>pro-app/help</example>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.EsriHwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
            <summary> 
                Gives the component a chance to process keyboard input.
                Return value is true if handled, false if not.  Components 
                will generally call a child component's TranslateAccelerator
                if they can't handle the input themselves.  The message must
                either be WM_KEYDOWN or WM_SYSKEYDOWN.  It is illegal to
                modify the MSG structure, it's passed by reference only as 
                a performance optimization.
            </summary> 
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.FrameworkApplication.GetShortcutList(System.String)">
            <summary>
            Gets the table shortcut list.
            </summary>
            <param name="tableId">Id of the ShortCut table.</param>
            <returns>Read only collection of shortcuts.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.FrameworkApplication.GetGlobalShortcut(System.String)">
            <summary>
            Gets global Shortcut by Id.
            </summary>
            <param name="id">The Id of the ShortCut.</param>
            <returns>The ShortCut or null, if not found.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.ExpanderProperties">
            <summary>
            Provides attached properties for use in expanders.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.ExpanderProperties.ExpandDurationProperty">
            <summary>
            Identifies the <c>ExpandDuration</c> dependency property.  This field is read-only.
            </summary>
            <value>The identifier for the <c>ExpandDuration</c> dependency property.</value>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.ExpanderProperties.GetExpandDuration(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the <c>ExpandDuration</c> attached property for the specified object.
            </summary>
            <param name="obj">The object from which the property value is read.</param>
            <returns>The object's value.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.ExpanderProperties.SetExpandDuration(System.Windows.DependencyObject,System.Windows.Duration)">
            <summary>
            Sets the value of the <c>ExpandDuration</c> attached property to the specified object. 
            </summary>
            <param name="obj">The object to which the attached property is written.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.IPlugInWrapper2">
            <summary>
            An additional interface for DAML defined controls exposing properties not in IPLugInWrapper.
            Internal only at this point since adding these would be a breraking change. (8/4/2020)
            When 3.0 occurs these properties should be transferred to IPlugInWrapper.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.IPlugInWrapper2.LicenseLevel">
            <summary>
            Gets the plug-in license level.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.IPlugInWrapper2.IsLicensed">
            <summary>
            Gets a boolean indicating if the plugIn is licensed according to the license level the application is running under.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.IPlugInWrapper2.FlipImageRTL">
            <summary>
            Getes a boolean indicating if the plugIn requires it's images to flipped on RTL.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.IPlugInWrapper2.VisibilityCondition">
            <summary>
            Some contexts can dynamically show / hide commands based on current conditions (not the ribbon).
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.PaneHelper">
            <summary>
             Internal class allowing Pane's to override how their initialization progressor is managed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.PaneHelper.SetPaneProgressorMode(ArcGIS.Desktop.Framework.Contracts.Pane,System.Boolean)">
            <summary>
            Allows a Pane to specify it does not want its progressor automatically hidden after initialization.
            </summary>
            <param name="pane"></param>
            <param name="hidesProgressorManually"></param>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.PaneHelper.HideProgressor(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <summary>
            Hide the specified Pane's progressor.
            </summary>
            <param name="pane"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.SettingsHelper">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Converters.CommandGenerator">
            <summary>
            Implements a value converter that generates an ICommand implementation using reflection.
            </summary>
            <remarks>
            The converter is specified in a binding statement where the input value is the ViewModel-derived
            class on which the method should be invoked. The ConverterParameter (string) is the name of the method
            to be invoked.
            
            The CommandGenerator class creates a RelayCommand instance. ICommand.CanExecute is implemented
            if the ViewModel contains a property named CanXXX where XXX is the name of the method.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.CommandGenerator.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <exclude/>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.CommandGenerator.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <exclude/>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool">
            <summary>
            Represents a converter that converts Boolean values to and from Visibility enumeration values. 
            </summary>
            <remarks>
            Use the Inverted property to reverse the logic (e.g. Visible when false).
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool.#ctor">
            <summary>
            Initializes a new instance of the VisToBool class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool.Inverted">
            <summary>
            Gets or sets the direction. True = Boolean to Visibility; False = Visibility to Boolean.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool.Not">
            <summary>
            Gets or sets whether True==Visible, the default, or False==Visible.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool.VisibilityWhenHidden">
            <summary>
            Gets or sets the Visibility to check. The default is Visibility.Collapsed.
            </summary>
            <example>
            <code lang="xaml">
            &lt;frameworkConverters:VisToBool x:Key="BoolToVisibleHidden" Inverted="True" Not="False" VisibilityWhenHidden="Hidden"/&gt;
            </code>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a Boolean value to a Visibility enumeration value. 
            </summary>
            <param name="value">The Boolean value to convert.</param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>If not Inverted, Visibility.Visible if value is true; otherwise, Visibility.Collapsed.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.VisToBool.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
             Converts a Visibility enumeration value to a Boolean value.  
            </summary>
            <param name="value">A Visibility enumeration value. </param>
            <param name="targetType">This parameter is not used.</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">This parameter is not used.</param>
            <returns>If not Inverted, returns true if value is Visible; otherwise, false.</returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Converters.EnumBooleanConverter">
            <summary>
            Represents a converter that converts enum values to and from boolean values. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.EnumBooleanConverter.#ctor">
            <summary>
            Initializes a new instance of the EnumBooleanConverter class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.EnumBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an Enum to a Boolean value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns>Returns true if the Enum value matches.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.EnumBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Creates an Enum from a string value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Converters.IntMatchToBooleanConverter">
            <summary>
            Represents a converter that converts an integer to and from boolean values.
            The boolean value depends on whether the specified integer matches the parameter passed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.IntMatchToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts an integer to a Boolean value.
            </summary>
            <param name="value">the integer value</param>
            <param name="targetType"></param>
            <param name="parameter">the integer value to match</param>
            <param name="culture"></param>
            <returns>Returns true if the integer value matches the parameter integer.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.IntMatchToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Creates an integer from a boolean value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Converters.SimpleChainConverter">
            <summary>
            Represents a chain of converters that performs convert operation is the order of listing the converters. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.SimpleChainConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value using the specified converters.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Converters.SimpleChainConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts back to the value.
            </summary>
            <param name="value"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.DialogManager">
            <summary>
            Provides the basic services for displaying modal dialogs. The specific implementation
            can be overridden with DialogManager.Current property in order for a client like the testing
            framework to provide a custom implementation. The default IDialogManager is implemented
            by the DefaultDialogManager class.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.#cctor">
            <summary>
            Initializes the DialogManager with the default implementation.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.DialogManager.Current">
            <summary>
            Get/sets the IDialogManager implementation.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.Show(ArcGIS.Desktop.Framework.Contracts.ViewModelBase,ArcGIS.Desktop.Framework.Contracts.ViewModelBase,System.EventHandler)">
            <summary>
            Shows a modeless window for the specified ViewModel. If the callback is specified, it will
            be called asynchronously after the window is closed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.ShowDialog(ArcGIS.Desktop.Framework.Contracts.ViewModelBase,ArcGIS.Desktop.Framework.Contracts.ViewModelBase,System.EventHandler)">
            <summary>
            Shows a dialog for the specified ViewModel. If the callback is specified, it will
            be called asynchronously after the dialog is closed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.Show(ArcGIS.Desktop.Framework.Contracts.ViewModelBase,ArcGIS.Desktop.Framework.Contracts.ViewModelBase,System.Windows.Point,System.EventHandler)">
            <summary>
            Shows a modeless window for the specified ViewModel. If the callback is specified, it will
            be called asynchronously after the window is closed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.ShowDialog(ArcGIS.Desktop.Framework.Contracts.ViewModelBase,ArcGIS.Desktop.Framework.Contracts.ViewModelBase,System.Windows.Point,System.EventHandler)">
            <summary>
            Shows a dialog for the specified ViewModel. If the callback is specified, it will
            be called asynchronously after the dialog is closed.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.ShowMessageBox(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Shows a message box.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.ShowFileDialog(Microsoft.Win32.FileDialog,System.Windows.Window)">
            <summary>
            Shows windows implementing the FileDialog abstract class.
             - OpenFileDialog and SaveFileDialog
            </summary>
            <param name="dialog">The dialog implementing the FileDialog abstract class, OpenFileDialog and SaveFileDialog.</param>
            <param name="owner">Owner window</param>
            <returns>The return value of the FileDialog.ShowDialog function.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.FindParentingWindow(ArcGIS.Desktop.Framework.Contracts.ViewModelBase)">
            <summary>
            Finds the window for parenting windows displayed from the view model. 
            </summary>
            <param name="viewModel">View modal that is to display the window.</param>
            <returns>The window associated with the view model or the application's main window</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DialogManager.FindParentingWindowHandle(ArcGIS.Desktop.Framework.Contracts.ViewModelBase)">
            <summary>
            Finds the window handle for parenting windows displayed from the view model. 
            </summary>
            <param name="viewModel">View modal that is to display the window.</param>
            <returns>The window handle associated with the view model or the application's main window</returns>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.DialogManager.DialogResultProperty">
            <summary>
            Implements an attached property that allows a binding statement for a dialog view to coordinate
            closing a ChildWindow using its DialogResult property. The dialog's ViewModel will have the attached
            property. Note that this attached property really has nothing to do with the DialogManager class per se.
            It is simply being used to scope the attached property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.IDialogManager">
            <summary>
            Represents a service that can display modal dialogs.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.DefaultDialogManager">
            <summary>
            Implements the default service for displaying modal dialogs.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DefaultDialogManager.ArcGIS#Desktop#Internal#Framework#IDialogManager#Show(ArcGIS.Desktop.Framework.Contracts.ViewModelBase,ArcGIS.Desktop.Framework.Contracts.ViewModelBase,System.Nullable{System.Windows.Point},System.EventHandler)">
            <summary>
            Shows a modeless window for the specified ViewModel. The mapping of ViewModel to Window
            relies on naming convention. For example, SignInDialogViewModel corresponds to SignInDialogView.
            </summary>
            <remarks>
            The View class must derive from Window.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DefaultDialogManager.ArcGIS#Desktop#Internal#Framework#IDialogManager#ShowDialog(ArcGIS.Desktop.Framework.Contracts.ViewModelBase,ArcGIS.Desktop.Framework.Contracts.ViewModelBase,System.Nullable{System.Windows.Point},System.EventHandler)">
            <summary>
            Shows a modal dialog for the specified ViewModel. The mapping of ViewModel to Window
            relies on naming convention. For example, SignInDialogViewModel corresponds to SignInDialogView.
            </summary>
            <remarks>
            The View class must derive from Window.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DefaultDialogManager.FindParentingWindow(ArcGIS.Desktop.Framework.Contracts.ViewModelBase)">
            <summary>
            Finds the window for parenting windows displayed from the view model. 
            </summary>
            <param name="viewModel">View modal that is to display the window.</param>
            <returns>The window associated with the view model or the application's main window</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DefaultDialogManager.FindParentingWindowHandle(ArcGIS.Desktop.Framework.Contracts.ViewModelBase)">
            <summary>
            Finds the window handle for parenting windows displayed from the view model. 
            </summary>
            <param name="viewModel">View modal that is to display the window.</param>
            <returns>The window handle associated with the view model or the application's main window</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.RECT.Equals(System.Object)">
            <summary> Determine if 2 RECT are equal (deep compare) </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.RECT.GetHashCode">
            <summary>Return the HashCode for this struct (not garanteed to be unique)</summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.WindowPlacement.MakeNonTopmost(System.Windows.Controls.Control)">
            <summary>
            Popups by default are TopMost. This sets the control's
            pop-up to just under the top most window.
            </summary>
            <param name="control"></param>
            <remarks>With help from:
               https://stackoverflow.com/questions/7606954/popup-always-stays-on-top/18509629#18509629
            </remarks>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods">
            <devdoc>http://msdn.microsoft.com/en-us/library/ms182161.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.DwmIsCompositionEnabled">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/aa969518%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.DwmExtendFrameIntoClientArea(System.IntPtr,ArcGIS.Desktop.Internal.Framework.Win32.MARGINS@)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/aa969512%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.DwmSetWindowAttribute(System.IntPtr,System.Int32,System.Int32@,System.Int32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/aa969524%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.DefWindowProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms633572%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.GetMonitorInfo(System.IntPtr,ArcGIS.Desktop.Internal.Framework.Win32.MONITORINFO)">
            <devdoc>http://msdn.microsoft.com/en-us/library/dd144901%28v=VS.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.MonitorFromWindow(System.IntPtr,System.Int32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/dd145064%28v=VS.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.GetWindowRect(System.IntPtr,ArcGIS.Desktop.Internal.Framework.Win32.RECT@)">
            <devdoc>https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getwindowrect</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms633545(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.LoadString(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.Int32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms647486%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.IsWindow(System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms633528(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.GetSystemMenu(System.IntPtr,System.Boolean)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms647985(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.TrackPopupMenuEx(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms648003(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods._PostMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms644944(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.GetCursorPos(ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.Win32Point@)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms648390(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.GetDoubleClickTime">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms646258(v=vs.85).aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.LoadLibrary(System.String)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms684175%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.FreeLibrary(System.IntPtr)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms683152%28v=vs.85%29.aspx</devdoc>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Win32.UnsafeNativeMethods.EnableMenuItem(System.IntPtr,System.UInt32,System.UInt32)">
            <devdoc>http://msdn.microsoft.com/en-us/library/windows/desktop/ms647636(v=vs.85).aspx</devdoc>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.AdministratorSetting`1">
            <summary>
            An administrator published setting.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.AdministratorSetting`1.Name">
            <summary>
            The name of the setting.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.AdministratorSetting`1.IsLocked">
            <summary>
            Is the administrator forcing a value.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.AdministratorSetting`1.GetValue">
            <summary>
            Returns the setting value as the specified type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.AdministratorSettings">
            <summary>
            Provides access to the custom administrator settings stored in an xml file on a network share or web server.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.CatalogSettings">
            <summary>
            Administrator Catalog settings.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.GeoprocessingSettings">
            <summary>
            Administrator Geoprocessing settings.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.TextAndGraphicsAdministratorSettings">
            <summary>
            Administrator Text and Graphics settings.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.AuthenticationSettings">
            <summary>
            Administrator Authentication settings.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.ProjectSettings">
            <summary>
            Administrator Project settings.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.VersioningSettings">
            <summary>
            Administrator Versioning settings.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Shortcuts.ShortcutsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Themes.GrayscaleEffect">
            <summary>
            Provides a custom grayscale bitmap effect
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Themes.GrayscaleEffect.InputProperty">
            <summary>
            Dependency property for Input
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.Themes.GrayscaleEffect.FilterColorProperty">
            <summary>
            Dependency property for FilterColor
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Themes.GrayscaleEffect.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Themes.GrayscaleEffect.Input">
            <summary>
            Impicit input
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Themes.GrayscaleEffect.FilterColor">
            <summary>
            The color used to tint the input.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.IProgressDialog">
            <summary>
            Provides methods to show and hide progress dialogs
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.IProgressDialog.Show">
            <summary>
            Displays the progress dialog.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.IProgressDialog.Hide">
            <summary>
            Hide the progress bar.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.BitmapUtil.CreateBitmapFromBuffer(System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies the unmanaged buffer (owned by the caller) into a managed buffer which is used to initialize a new BitmapImage.
            </summary>
            
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.BitmapUtil.CreateBitmapFromBuffer(System.IntPtr,System.Int32)">
            <summary>
            Copies the unmanaged buffer (owned by the caller) into a managed buffer which is used to initialize a new BitmapImage.
            </summary>
            
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.BitmapUtil.GetImageSource(System.String)">
            <summary>
            Given an image file name, returns an ImageSource for the current theme and scale. High
            resolution monitors get a vector image; low resolution monitors get a png.
            </summary>
            <param name="path">The image path with extension</param>
            <returns>Returns an ImageSource such as BitmapImage or DrawingImage</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.BitmapUtil.GetBitmapImage(System.String)">
            <summary>
            
            </summary>
            <param name="packPath"></param>
            <returns></returns>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.ISuspendableObservableCollection">
            <summary>
            Implemented by types that can suspend CollectionChanged
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.BulkObservableCollection`1">
            <summary>
            An ObservableCollection whose CollectionChanged events can be suspended and resumed, allowing these notifications to be done in bulk.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.NotifyBulkMoveEventArgs">
            <summary>
            Provides data for the System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged event, when multiple items are inserted or moved.
            Clients should only use the Moves argument, and ignore the other properties on this class.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.AutoSuspendNotification">
            <summary>
            A helper that will suspend and resume a BulkObservableCollection in a using statement or try/finally block.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.CollectionBindingHelper">
            <summary>
            Class to help view-models synchronize their collections with WPF.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.CollectionBindingHelper.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
            <summary>
            <para>
            Calls System.Windows.Data.BindingOperations.EnableCollectionSynchronization to enable a collection to 
            be accessed across multiple threads and specifies the lock object that should be used to synchronize 
            access to the collection. The helper function additionally verifies the callee is on the UI thread and that 
            the function has only been called once. These checks allow the client to put this function call in the 
            property that is returning the collection to WPF as established in the XAML binding.
            </para>
            </summary>
            <param name="collection"></param>
            <param name="lockObject"></param>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonConditions">
            <summary>
            Interaction logic for ArcMonConditions.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonConditions.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonCounters">
            <summary>
            Interaction logic for ArcMonCounters.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonCounters.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonDiagnostic">
            <summary>
            Interaction logic for ArcMonDiagnostic.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonDiagnostic.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonEventLog">
            <summary>
            Interaction logic for ArcMonEventLog.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonEventLog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonThreading">
            <summary>
            Interaction logic for ArcMonThreading.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.ArcMonThreading.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.SortedListView">
            <summary>
            Interaction logic for SortedListView.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.PerfMeter.SortedListView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.Utilities.ITransientWindow">
            <summary>
            Used to mark a view that should not be considered the Owner of any modal dialogs displayed using
            MetroWindow.ShowDialogEx
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.DisposeChildren">
            <summary>
            Dipsoses the children. Declared virtual for the benefit of subclasses that manage their children differently.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.ClearChildren">
            <summary>
            Clears the children. Declared virtual for the benefit of subclasses that manage their children differently.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.DisposeAndClearChildren">
            <summary>
            Dispose and clear the children. Declared virtual for the benefit of subclasses that manage their children differently.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.AutomationId">
            <summary>
            Gets or sets the AutomationId property.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.Children">
            <summary>
            Returns the logical child items of this object.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.HasDummyChild">
            <summary>
            Returns true if this object's Children have not yet been populated.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.IsExpanded">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is expanded.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.IsSelected">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is selected.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.ItemSelected">
            <summary>
            Invoked when the selection changes.
            Subclasses can override this to respond to the item being selected/unselected.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.CanSelect">
            <summary>
            Gets/sets whether the TreeViewItem 
            associated with this object is selected.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.LoadChildrenAsync">
            <summary>
            Invoked when the child items need to be loaded on demand.
            Subclasses can override this to populate the Children collection.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.QueryDependentSelection(ArcGIS.Desktop.Internal.Framework.Utilities.SelectionIntent)">
            <summary>
            Returns any items that should be selected or unselected whenever this item is selected or unselected.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.Find(System.Predicate{ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel})">
            <summary>
            Finds the node(s) in the tree meeting the condition specified in the predicate.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.FindParent``1">
            <summary>
            Finds a parent of the specified type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.GetAncestors">
            <summary>
            Returns all the ancestors of a node, from its parent to its root.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.GetSiblings">
            <summary>
            Returns all the sibling nodes of a node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.Previous">
            <summary>
            Returns the previous item in a flattened representation of the visible (i.e. expanded) tree.
            Will not return null (returns last visible item when called on the root of the tree).
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.Next(System.Boolean)">
            <summary>
            Returns the next item in a flattened representation of the visible (i.e. expanded) tree.
            Will not return null (returns root when called on last visible item in the tree).
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.Utilities.TreeViewItemViewModel.Last">
            <summary>
            Returns the last item in a flattened representation of the visible tree under this node.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.PerfMeterWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.PerfMeterWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.DesignModeResourceDictionary.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary">
            <summary>
            The shared resource dictionary is a specialized resource dictionary
            that loads it content only once. If a second instance with the same source
            is created, it only merges the resources from the cache.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary.sharedDictionaries">
            <summary>
            Internal cache of loaded dictionaries.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary.isInDesignerMode">
            <summary>
            A value indicating whether the application is in designer mode.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary.sourceUri">
            <summary>
            Local member of the source uri
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary.#cctor">
            <summary>
            Initializes static members of the <see cref="T:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary"/> class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary.SharedDictionaries">
            <summary>
            Gets the internal cache of loaded dictionaries.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Framework.SharedResourceDictionary.Source">
            <summary>
            Gets or sets the uniform resource identifier (URI) to load resources from.
            </summary>
        </member>
    </members>
</doc>
