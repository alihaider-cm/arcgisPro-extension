<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArcGIS.Desktop.Extensions</name>
    </assembly>
    <members>
        <member name="T:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton">
            <summary>
            Interaction logic for Burger.xaml
            </summary>
            <summary>
            BurgerButton
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton.PopupMenu">
            <summary>
            Gets and sets the popup menu associated with the burger button
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton.PopupMenuProperty">
            <summary>
            Gets the dependency property registered with the Popup Menu
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton.OnApplyTemplate">
            <summary>
            Overrides the UseControl OnApplyTemplate to place the popup menu
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton.placePopup(System.Windows.Size,System.Windows.Size,System.Windows.Point)">
            <summary>
            Controls the placement of the popup
            </summary>
            <param name="popupSize">The popup size</param>
            <param name="targetSize">The size of the target over which the popup will be placed</param>
            <param name="offset">offset is ignored</param>
            <returns>An array containing a <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"/></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Internal.Extensions.Controls.BurgerButton.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.ActiveMapViewErrorMessage">
            <summary>
              Looks up a localized string similar to Could not get the active map view..
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.AttributeRuleManager">
            <summary>
              Looks up a localized string similar to Attribute Rule Manager.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.CancelMessage">
            <summary>
              Looks up a localized string similar to Canceling {0} ....
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.CannotEvaluateWithoutLayer">
            <summary>
              Looks up a localized string similar to Could not find a layer in the active map that connects to the same geodatabase as that of the {0}..
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.DisableSubnetworkControllerMethod">
            <summary>
              Looks up a localized string similar to Disable Subnetwork Controller.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.EnableSubnetworkControllerMethod">
            <summary>
              Looks up a localized string similar to Enable Subnetwork Controller.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.ErrorMessage">
            <summary>
              Looks up a localized string similar to An exception was encountered while calling {0}..
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.EvaluateMethod">
            <summary>
              Looks up a localized string similar to Evaluate.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.LoadingModuleError">
            <summary>
              Looks up a localized string similar to Unable to load DesktopExtensions module..
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.MarkAsExceptionMethod">
            <summary>
              Looks up a localized string similar to Mark As Exception.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.ProgressMessage">
            <summary>
              Looks up a localized string similar to Calling {0} ....
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.Topology">
            <summary>
              Looks up a localized string similar to Topology.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.UnmarkAsExceptionMethod">
            <summary>
              Looks up a localized string similar to Unmark As Exception.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.UpdateErrorsMethod">
            <summary>
              Looks up a localized string similar to Update Errors.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.UtilityNetworkLayerErrorMessage">
            <summary>
              Looks up a localized string similar to Could not get the UtilityNetwork layer..
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.ValidateNetworkTopologyMethod">
            <summary>
              Looks up a localized string similar to Validate Network Topology.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Internal.Extensions.LocalResources.DesktopExtensionsRes.ValidateTopologyMethod">
            <summary>
              Looks up a localized string similar to Validate Topology.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Extensions.DesktopExtensionsModule">
            <summary>
            Extensions to ArcGIS Pro
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Extensions.DesktopExtensionsModule.ModuleID">
            <summary>
            The Framework ID associated with this module
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Extensions.DesktopExtensionsModule.Current">
            <summary>
            Gets the Framework module instance for this module
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Extensions.DesignOnlyResourceDictionary">
            <summary>
            The design only resource dictionary is a specialized resource dictionary
            that references content only in design mode.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Extensions.DesignOnlyResourceDictionary.IsInDesignMode">
            <summary>
            return true if in design mode
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Extensions.DesignOnlyResourceDictionary.Source">
            <summary>
            This dictionary only sets the URI when the VS XAML designer is active.
            During runtime the resource dictionary is empty.
            Here is an example of a URI:
            Source="pack://application:,,,/ArcGIS.Desktop.Framework;component\Themes\Default.xaml"
            Consequently this property returns source (URI) only in design mode 
            and hence resolves the designer's requirements for resources
            During runtime WPF gets the resource from Pro's framework, hence the 
            resource is set the properly theme.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutExtensions">
            <summary>
            Layout Extension methods.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutExtensions.ClearSketchAsync(ArcGIS.Desktop.Layouts.LayoutView)">
            <summary>
            Clears the current sketch in the view.
            </summary>
            <param name="layoutView">The layout view.</param>
            <returns>A Task representing a clear sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutExtensions.ClearSketchAsync(ArcGIS.Desktop.Internal.Mapping.View)">
            <summary>
            Clears the current sketch in the view.
            </summary>
            <returns>A Task representing a clear sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutExtensions.GetCurrentSketchAsync(ArcGIS.Desktop.Layouts.LayoutView)">
            <summary>
            Gets the current geometry of the sketch without finishing it.
            </summary>
            <param name="layoutView">The layout view.</param>
            <returns>A Task representing the geometry of the sketch.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutExtensions.GetCurrentSketchAsync(ArcGIS.Desktop.Internal.Mapping.View)">
            <summary>
            Gets the current geometry of the sketch without finishing it.
            </summary>
            <returns>A Task representing the geometry of the sketch.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutExtensions.SelectElements(ArcGIS.Desktop.Layouts.LayoutView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean)">
            <summary>
            Select elements that visually intersect a geometry.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="layoutView">The layout view.</param>
            <param name="geometry">The selection geometry</param>
            <param name="method">Combination method used in selection operation</param>
            <param name="isWhollyWithin">Indicates whether only elements that are completely within the geometry should be selected.</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Geometry cannot be null or empty</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs">
            <summary>
            Provides data for layout view mouse button related events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs.ClientPoint">
            <summary>
            Gets the point in client coordinates relative to the top-left corner of the view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutViewMouseEventArgs">
            <summary>
            Provides data for layout view mouse related events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutViewMouseEventArgs.ClientPoint">
            <summary>
            Gets the point in client coordinates relative to the top-left corner of the view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs">
            <summary>
            Provides data for layout view keyboard related events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs.ClientPoint">
            <summary>
            Gets the point in client coordinates relative to the top-left corner of the view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Layouts.LayoutTool">
            <summary>
            Represents a tool command used to perform interactive operations on a <see cref="T:ArcGIS.Desktop.Layouts.LayoutView"/>.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.#ctor">
            <summary>
            Default constructor for LayoutTool.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.UpdateCursor">
            <summary>
            Occurs when a cursor is set on this tool. 
            Forward the cursor to the inner tool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.ActiveElementContainer">
            <summary>
            Gets the active element container. 
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.SketchType">
            <summary>
            Gets or sets the type or shape of the geometry to be created by the sketch.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.ContextMenuID">
            <summary>
            Gets or sets the DAML ID of the context menu for the tool.
            </summary>
            <remarks>
            By default this will be null and will display the default context menu for the tool. 
            To display no context menu set the value to an empty string or handle the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseDown(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> event for the right mouse button.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.ContextToolbarID">
            <summary>
            Gets or sets the DAML ID of the toolbar to display for the tool.
            </summary>
            By default this will be null and will display the default context toolbar for the tool. 
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.SketchNumberOfSides">
            <summary>
            Gets or sets the number of sides for a regular polygon.  Use when <see cref="P:ArcGIS.Desktop.Layouts.LayoutTool.SketchType"/> = <see cref="F:ArcGIS.Desktop.Mapping.SketchGeometryType.RegularPolygon"/>
            or <see cref="P:ArcGIS.Desktop.Layouts.LayoutTool.SketchType"/> = <see cref="F:ArcGIS.Desktop.Mapping.SketchGeometryType.RegularPolyline"/>.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.UseSnapping">
            <summary>
            Gets or sets whether to use snapping to precisely sketch on the active view. The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Layouts.LayoutTool.SketchSymbol">
            <summary>
            Gets the symbol to use for the sketch. 
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnSketchCompleteAsync(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Occurs when a sketch is finished.
            </summary>
            <param name="geometry">The geometry of the sketch.</param>
            <returns>True if the sketch complete event was handled.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnSketchCanceledAsync">
            <summary>
            Occurs when a sketch is canceled.
            </summary>
            <returns>True if the sketch canceled event was handled.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnSketchModifiedAsync">
            <summary>
            Occurs when a sketch is modified.
            </summary>
            <returns>True if the sketch modified event was handled.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolActivateAsync(System.Boolean)">
            <summary>
            Occurs when the tool is activated.
            </summary>
            <param name="hasVewChanged">A value indicating if the active <see cref="T:ArcGIS.Desktop.Layouts.LayoutView"/> has changed.</param>
            <returns>A Task that represents a tool activation event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolDeactivateAsync(System.Boolean)">
            <summary>
            Occurs when the tool is deactivated.
            </summary>
            <param name="hasVewChanged">A value indicating if the active <see cref="T:ArcGIS.Desktop.Layouts.LayoutView"/> has changed.</param>
            <returns>A Task that represents a tool deactivation event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolDoubleClick(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is clicked on the view two or more times.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a double-click event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleDoubleClickAsync(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleDoubleClickAsync(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolDoubleClick(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a double-click event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolDoubleClick(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a mouse double click event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolKeyDown(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)">
            <summary>
            Occurs when a key is pressed and the view has focus.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a key down event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleKeyDownAsync(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleKeyDownAsync(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolKeyDown(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a key down event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolKeyDown(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a key down event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolKeyUp(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)">
            <summary>
            Occurs when a key is released and the view has focus.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a key up event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleKeyUpAsync(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleKeyUpAsync(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolKeyUp(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a key up event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolKeyUp(ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewKeyEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a key up event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseDown(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is pressed on the view.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a mouse down event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleMouseDownAsync(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleMouseDownAsync(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseDown(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a mouse down event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseDown(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a mouse down event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseUp(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is released on the view.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a mouse up event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleMouseUpAsync(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleMouseUpAsync(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseUp(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a mouse up event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseUp(ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseButtonEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a mouse up event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnToolMouseMove(ArcGIS.Desktop.Layouts.LayoutViewMouseEventArgs)">
            <summary>
            Occurs when the mouse pointer moves over the view.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a mouse move event.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Layouts.LayoutViewMouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.ClearSketchAsync">
            <summary>
            Clears the current sketch in the active view.
            </summary>
            <returns>A Task representing a clear sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.FinishSketchAsync">
            <summary>
            Finishes the current sketch in the active view.
            </summary>
            <returns>A Task representing a finish sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.StartSketchAsync">
            <summary>
            Start a new sketch.
            </summary>
            <returns>A Task representing a start sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.GetCurrentSketchAsync">
            <summary>
            Gets the current geometry of the sketch without finishing it.
            </summary>
            <returns>A Task representing the geometry of the sketch.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.SetCurrentSketchAsync(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Sets the current geometry of the sketch without finishing it.
            </summary>
            <param name="geometry">The geometry of the sketch.</param>
            <returns>A Task representing a set sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnActivePaneChanged(ArcGIS.Desktop.Framework.Contracts.Pane)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnActivateAsync(System.Boolean)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnClick">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.OnPaneActivateAsync(System.Boolean)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Layouts.LayoutTool.HandleOnPaneActivateAsync(System.Boolean)">
            <summary>
            Called to inform the Tool a Pane referencing it as the active tool is activating or deactivating.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.ParcelFabricType">
            <summary>
            The Parcel Fabric model type as defined by the era of ArcGIS software that supports it.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.ParcelFabricType.ParcelFabric">
            <summary>Parcel fabric for ArcGIS Pro</summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.ParcelFabricType.ParcelFabricForArcMap">
            <summary>Parcel fabric for ArcMap.</summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.MappingExtensions">
            <summary>
            Extension methods for Mapping objects.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.Inspect(ArcGIS.Desktop.Mapping.MapMember,System.Int64)">
            <summary>Loads a row into a new inspector instance. This method must be called on the MCT. Use QueuedTask.Run.</summary>
            <param name="mapMember">A <see cref="T:ArcGIS.Desktop.Mapping.MapMember">mapMember</see></param>
            <param name="oid">The oid of the row.</param>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns>An <see cref="T:ArcGIS.Desktop.Editing.Attributes.Inspector"/> loaded with the specified row.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetTemplate(ArcGIS.Desktop.Mapping.MapMember,System.String)">
            <summary>
            Gets a template by name for a map member. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapMember">The map member containing the template. </param>
            <param name="name">The name of the template to be retrieved.</param>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns>The template.  Null if the template doesn't exist on the map member..</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetTemplates(ArcGIS.Desktop.Mapping.MapMember)">
            <summary>
            Gets all templates for a map member. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapMember">The map member to retrieve templates from.</param>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns>A list of templates.</returns>
            <remarks>
            If called on the MCT and templates are not yet loaded the templates will load and be returned.
            See also <see cref="M:ArcGIS.Desktop.Mapping.MappingExtensions.AreTemplatesLoaded(ArcGIS.Desktop.Mapping.MapMember)"/>
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetTemplatesAsFlattenedList(ArcGIS.Desktop.Mapping.MapMember)">
            <summary>
            Gets all templates for a map member, including templates for any children. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapMember">The map member to retrieve templates from.</param>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns>A list of templates.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AreTemplatesLoaded(ArcGIS.Desktop.Mapping.MapMember)">
            <summary>
            Gets whether templates have been loaded for the specified map member.
            </summary>
            <remarks>
            If templates are not loaded for a map member, call <see cref="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetTemplates(ArcGIS.Desktop.Mapping.MapMember)"/> on the MCT to load the templates. 
            </remarks>
            <param name="mapMember">The map member to check.</param>
            <returns>True if templates have been loaded for this map member, false otherwise.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.RemoveTemplate(ArcGIS.Desktop.Mapping.MapMember,ArcGIS.Desktop.Editing.Templates.EditingTemplate)">
            <summary>
            Removes the specified template.
            </summary>
            <param name="mapMember">The map member containing the template.</param>
            <param name="template">The template to be removed.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.RemoveTemplate(ArcGIS.Desktop.Mapping.MapMember,System.String)">
            <summary>
            Removes a template from a map member.
            </summary>
            <param name="mapMember">The map member containing the template.</param>
            <param name="name">The template name to be removed.</param>
            <exception cref="T:System.ArgumentException">the Template cannot be found in the map member.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CreateTemplate(ArcGIS.Desktop.Mapping.MapMember,ArcGIS.Core.CIM.CIMEditingTemplate)">
            <summary>
            Creates a new template using the specified definition. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapMember">The map member the new template is to be added to.</param>
            <param name="templateDef">The template definition.</param>
            <returns>The newly created template.  Null if it cannot be created.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CreateTemplate(ArcGIS.Desktop.Mapping.MapMember,System.String,System.String,ArcGIS.Desktop.Editing.Attributes.Inspector,System.String,System.String[],System.String[])">
            <summary>
            Creates a new template using the specified definition. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapMember">The map member the new template is to be added to.</param>
            <param name="templateName">The template name.</param>
            <param name="description">Optional description of the template.</param>
            <param name="inspector">An <see cref="T:ArcGIS.Desktop.Editing.Attributes.Inspector"/> object containing default template values.</param>
            <param name="defaultTool">Optional, If not provided will use the default tool for the map member type. The defaultTool can be specified using daml-id.</param>
            <param name="tags">Optional. A set of tags.</param>
            <param name="toolFilter">Optional list of tools to not allow for this template. Tool filters can be specified using daml-id.</param>
            <exception cref="T:System.ArgumentException">The Template name cannot be empty. And the template name must be unique. </exception>
            <returns>The newly created template. Null if it cannot be created.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CreatePresetTemplate(ArcGIS.Desktop.Mapping.Layer,System.String,ArcGIS.Desktop.Mapping.SelectionSet,ArcGIS.Core.Geometry.MapPoint)">
            <summary>
            Creates a new preset template from the specified set of features.
            </summary>
            <param name="layer">The layer the new template is to be added to.</param>
            <param name="templateName">The template name.</param>
            <param name="features">The features to include in the preset.</param>
            <param name="hotPoint">An optional point to use as the point where the preset is placed.  If null is provided the centroid of the features will be used.</param>
            <returns>A Task yielding the newly created template. Null if it cannot be created.</returns>
            <exception cref="T:System.ArgumentNullException">Features cannot be null.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AutoGenerateTemplates(ArcGIS.Desktop.Mapping.MapMember,System.Boolean)">
            <summary>
            Generate feature templates for a layer or standalone-table.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapMember">The mapMember to generate templates for.</param>
            <param name="forceCreate">(Optional) Remove existing templates and regenerate. (default value = false)</param>
            <returns>Boolean. True if templates were genenerated.</returns>
            <remarks>This method attempts to generate feature templates on a layer or standalone-table.
            If <see cref="P:ArcGIS.Core.CIM.CIMBasicFeatureLayer.AutoGenerateFeatureTemplates"/> flag is true, the templates are generated from the renderer. When false the templates are not regenerated
            unless forceCreate is specified.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CreateGroupTemplateDefinition(ArcGIS.Desktop.Mapping.BasicFeatureLayer,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new group template object using the specified definition. Adds the base template specified to the group template as the base part. 
            This method must be called on the MCT. Use QueuedTask.Run.
            Use this method in conjunction with calls to 
            <see cref="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddComponentTemplate(ArcGIS.Core.CIM.CIMGroupEditingTemplate,ArcGIS.Desktop.Mapping.Layer,System.String,ArcGIS.Desktop.Editing.Templates.GroupTemplateBuilderMethods,System.Collections.Generic.IDictionary{System.String,System.Object})"/>
            for each component part. Once the group template is fully defined, use 
            <see cref="M:ArcGIS.Desktop.Mapping.MappingExtensions.CreateTemplate(ArcGIS.Desktop.Mapping.MapMember,ArcGIS.Core.CIM.CIMEditingTemplate)"/> to add the template to the template manager. 
            </summary>
            <remarks>
            Group templates are not supported for multipoint, multipatch, annotation or dimension layers. 
            </remarks>
            <param name="layer">the layer to use as the base.</param>
            <param name="groupTemplateName">the template name for the new group template.</param>
            <param name="baseTemplateName">the name of the template used as the base.</param>
            <param name="description">Optional description of the template.</param>
            <param name="tags">Optional. A set of tags.</param>
            <exception cref="T:System.ArgumentException">The layer must exist and the base template name must exist on the layer. Group template name must not be empty and be unique. </exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called on the Main CIM Thread.  Use QueuedTask.Run. </exception>    
            <returns>the newly created group template object. Null if it cannot be created.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddComponentTemplate(ArcGIS.Core.CIM.CIMGroupEditingTemplate,ArcGIS.Desktop.Mapping.Layer,System.String,ArcGIS.Desktop.Editing.Templates.GroupTemplateBuilderMethods,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a component part to the group template.  This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="groupTemplate">The group template the component template is to be added to. </param>
            <param name="layer">The layer for the component part. </param>
            <param name="templateName">The name of the template used as the component part. </param>
            <param name="builderMethod">The builder method for the component part. </param>
            <param name="options">Options for the component part.</param>
            <exception cref="T:System.ArgumentException">The layer must exist and the template name must exist on the layer. </exception>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method must be called on the Main CIM Thread.  Use QueuedTask.Run. </exception>    
            <returns>The updated group template object. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.IsControlledByParcelFabricAsync(ArcGIS.Desktop.Mapping.Layer,ArcGIS.Desktop.Mapping.ParcelFabricType)">
            <summary>
            Gets whether the layer is controlled by a parcel fabric of the specified type.
            </summary>
            <param name="layer">The layer to check.</param>
            <param name="parcelFabricType">The controlling parcel fabric type being checked.</param>
            <returns>True if the layer is controlled by the specified parcel fabric type. Otherwise false. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.TestQueryAsync(ArcGIS.Desktop.Internal.Mapping.SelectionSetInternal,System.String)">
            <summary>
            Returns the subset of the selection that satisfies the given query.
            </summary>
            <param name="selection"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.FlattenLayers(System.Collections.Generic.IEnumerable{ArcGIS.Desktop.Mapping.Layer})">
            <summary>
            Gets an enumeration of layers. Removes group layers and recurses their sublayers
            to add them to the list.
            </summary>
            <param name="layers">The set of layers to flatten.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlayAsync(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlay(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlayAsync(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlay(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlayAsync(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.CIM.CIMGraphic,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlay(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.CIM.CIMGraphic,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlayAsync(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.CIM.CIMGraphic,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlay(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.CIM.CIMGraphic,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlayAsync(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Desktop.Mapping.Layer,System.Int64,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic for a feature on the map view. This is only supported in 2D.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="layer">The layer containing the feature.</param>
            <param name="oid">The ObjectID for the feature.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddOverlay(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Desktop.Mapping.Layer,System.Int64,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic for a feature on the map view.
            </summary>
            <param name="mapView">The view to add the overlay.</param>
            <param name="layer">The layer containing the feature.</param>
            <param name="oid">The ObjectID for the feature.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.UpdateOverlay(ArcGIS.Desktop.Mapping.MapView,System.IDisposable,ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Updates the geometry for an overlay graphic on the map view.
            </summary>
            <param name="mapView">The view containing the overlay.</param>
            <param name="disposable">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update.</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.UpdateOverlay(ArcGIS.Desktop.Mapping.MapView,System.IDisposable,ArcGIS.Core.CIM.CIMGraphic,System.Double,System.Double)">
            <summary>
            Updates the graphic for an overlay graphic on the map view. 
            </summary>
            <param name="mapView">The view containing the overlay.</param>
            <param name="disposable">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="graphic">The graphic to be used for the update</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.UpdateOverlay(ArcGIS.Desktop.Mapping.MapView,System.IDisposable,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference)">
            <summary>
            Updates the geometry and symbol for an overlay graphic on the map view.
            </summary>
            <param name="mapView">The view containing the overlay.</param>
            <param name="disposable">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update.</param>
            <param name="symbol">The symbol to use for the update.</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.UpdateOverlay(ArcGIS.Desktop.Mapping.MapView,System.IDisposable,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Updates the geometry and symbol for an overlay graphic on the map view.
            </summary>
            <param name="mapView">The view containing the overlay.</param>
            <param name="disposable">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update.</param>
            <param name="symbol">The symbol to use for the update.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.UpdateOverlay(ArcGIS.Desktop.Mapping.MapView,System.IDisposable,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double,System.Double)">
            <summary>
            Updates the geometry and symbol for an overlay graphic on the map view.
            </summary>
            <param name="mapView">The view containing the overlay.</param>
            <param name="disposable">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update.</param>
            <param name="symbol">The symbol to use for the update.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.SelectElements(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean)">
            <summary>
            Select elements on a graphics layer that visually intersect a geometry.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapView">The mapView that contains the graphics layer..</param>
            <param name="graphicsLayer">The graphicsLayer whose elements will be selected</param>
            <param name="geometry">The selection geometry</param>
            <param name="method">Combination method used in selection operation</param>
            <param name="isWhollyWithin">This parameter only applies to 2D. Indicates whether only features that are completely within the geometry should be selected.</param>
            <remarks>Currently, graphics layers are only supported for 2D.<br/>Selection against elements always uses
            visual intersection as opposed to geometric intersection (of the search geometry
            with the element geometry). The graphics layer must be visible and selectable.<br/>
            Use <see cref="M:ArcGIS.Desktop.Mapping.MappingExtensions.SelectElements(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean)"/>
            to select against all visible graphics layers.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">geometry cannot be null or empty</exception>
            <exception cref="T:System.InvalidOperationException">graphics layer is not associated with this view</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.SelectElements(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean)">
            <summary>
            Select elements on all visible graphics layers that visually intersect a geometry.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="mapView">The mapView that contains the graphics layer..</param>
            <param name="geometry">The selection geometry</param>
            <param name="method">Combination method used in selection operation</param>
            <param name="isWhollyWithin">This parameter only applies to 2D. Indicates whether only features that are completely within the geometry should be selected.</param>
            <remarks>Currently, graphics layers are only supported for 2D.<br/>. Selection against elements always uses
            visual intersection as opposed to geometric intersection (of the search geometry
            with the element geometry). The graphics layers must be visible and selectable.<br/>
            Use <see cref="M:ArcGIS.Desktop.Mapping.MappingExtensions.SelectElements(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Desktop.Mapping.GraphicsLayer,ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean)"/>
            to select against just one individual graphics layer.</remarks>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">geometry cannot be null or empty</exception>
            <exception cref="T:System.InvalidOperationException">graphics layer is not associated with this view</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetSketchType(ArcGIS.Desktop.Mapping.MapView)">
            <summary>
            Gets the type of geometry for the current sketch.
            </summary>
            <param name="mapView">The map view containing the sketch.</param>
            <returns>The type or shape of the geometry for the current sketch.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetCurrentSketchAsync(ArcGIS.Desktop.Mapping.MapView)">
            <summary>
            Gets the current geometry of the sketch without finishing it.
            </summary>
            <param name="mapView">The map view containing the sketch.</param>
            <returns>A Task representing the geometry of the sketch.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.SetCurrentSketchAsync(ArcGIS.Desktop.Mapping.MapView,ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Sets the current geometry of the sketch without finishing it.
            </summary>
            <param name="mapView">The map view containing the sketch.</param>
            <param name="geometry">The geometry of the sketch.</param>
            <returns>A Task representing a set sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.ClearSketchAsync(ArcGIS.Desktop.Mapping.MapView)">
            <summary>
            Clears the current sketch in the view.
            </summary>
            <param name="mapView">The map view.</param>
            <returns>A Task representing a clear sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddDiagramLayerAsync(ArcGIS.Desktop.Mapping.Map,ArcGIS.Core.Data.NetworkDiagrams.NetworkDiagram)">
            <summary>
            Add a diagram layer to a diagram map.
            </summary>
            <param name="map">The map to add the diagram layer.</param>
            <param name="networkDiagram">The diagram for which a diagram layer is created and added to the map.</param>
            <returns>A Task to the added diagram layer.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.AddDiagramLayer(ArcGIS.Desktop.Mapping.Map,ArcGIS.Core.Data.NetworkDiagrams.NetworkDiagram)">
            <summary>
            Add a diagram layer to a diagram map.
            </summary>
            <param name="map">The map to add the diagram layer.</param>
            <param name="networkDiagram">The diagram for which a diagram layer is created and added to the map.</param>
            <returns>The added diagram layer.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.TransformToObjectIDs(ArcGIS.Desktop.Mapping.BasicFeatureLayer,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Translate the globalIDs to objectIDs.
            </summary>
            <param name="layer">The layer the globalIDs are associated with.</param>
            <param name="globalIDs">A set of global IDs.</param>
            <returns>Corresponding objectIDs (-1 if feature not found).</returns>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.TransformToGlobalID(ArcGIS.Desktop.Mapping.BasicFeatureLayer,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Translate the objectIDs to globalIDs.
            </summary>
            <param name="layer">The layer the objectIDS are associated with.</param>
            <param name="objectIDs">A set of objectIDs.</param>
            <returns>Corresponding globalIDs (Empty if feature not found, or layer doesn't have globalIDs.)</returns>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.TransformToObjectIDs(ArcGIS.Desktop.Mapping.StandaloneTable,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Translate the globalIDs to objectIDs.
            </summary>
            <param name="table">The table the globalIDs are associated with.</param>
            <param name="globalIDs">A set of global IDs.</param>
            <returns>Corresponding objectIDs (-1 if row not found).</returns>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.TransformToGlobalID(ArcGIS.Desktop.Mapping.StandaloneTable,System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Translate the objectIDs to globalIDs.
            </summary>
            <param name="table">The table the objectIDs are associated with.</param>
            <param name="objectIDs">A set of objectIDs.</param>
            <returns>Corresponding globalIDs (Empty if row not found, or table doesn't have globalIDs.)</returns>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.BuildMapTopologyGraph``1(ArcGIS.Desktop.Mapping.Map,System.Action{ArcGIS.Core.Data.Topology.TopologyGraph})">
            <summary>
            Build the Map Topology Graph.
            </summary>
            <param name="map">The map</param>
            <param name="action">The client action that receives a <see cref="T:ArcGIS.Core.Data.Topology.TopologyGraph"/> as input for analysis.</param>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.BuildMapTopologyGraph``1(ArcGIS.Desktop.Mapping.MapView,System.Action{ArcGIS.Core.Data.Topology.TopologyGraph})">
            <summary>
            Build the Map Topology Graph.
            </summary>
            <param name="mapView">The map view.</param>
            <param name="action">The client action that receives a <see cref="T:ArcGIS.Core.Data.Topology.TopologyGraph"/> as input for analysis.</param>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetAvailableTopologiesAsync(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Gets the list of available topologies for the map. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <remarks>
            Topologies are only supported if the map is a 2D non-stereo map.
            If the map contains geodatabase topology layers then geodatabase topology properties are also returned.
            </remarks>
            <param name="map">The map to retrieve the topology proeprties for.</param>
            <returns>The list of topology properties for the map.</returns>
            <exception cref="T:System.ArgumentNullException">Map is null</exception>
            <exception caption="" cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetActiveTopologyAsync(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Gets the active topology properties from the map.
            </summary>
            <param name="map">The map to retrieve the topology properties for.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Map is null.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CanClearTopology(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Gets if the active topology can be cleared. That is; the active topology cam be set to "No Topology".
            </summary>
            <param name="map">The map to clear the topology.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CanSetMapTopology(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Gets if the active topology can be set to a MapTopology.  Map topologies are only supprted for 2D non-stereo maps.
            </summary>
            <param name="map">The map to set the topology.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CanSetActiveTopology(ArcGIS.Desktop.Mapping.Map,ArcGIS.Desktop.Editing.TopologyProperties)">
            <summary>
            Gets if the active topology can be set.  Topologies are only supprted for 2D non-stereo maps.
            </summary>
            <param name="map">The map to set the topology.</param>
            <param name="topologyProperties">A <see cref="T:ArcGIS.Desktop.Editing.TopologyProperties"/></param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.CanSetActiveTopology(ArcGIS.Desktop.Mapping.Map,System.String)">
            <summary>
            Gets if the active topology can be set.  Topologies are only supprted for 2D non-stereo maps.
            </summary>
            <remarks>
            Use "Map" to set the <see cref="T:ArcGIS.Desktop.Editing.MapTopologyProperties"/> for the map.
            Use the geoddatabase topology name to set the <see cref="T:ArcGIS.Desktop.Editing.GeodatabaseTopologyProperties"/> for the map.
            </remarks>
            <param name="map">The map to set the topology.</param>
            <param name="topologyName">the geodatabase topology name or "Map" if map topology proeprties is required.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.ClearTopologyAsync(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Clears the active topology.  That is; sets the active topology to "No Topology".
            </summary>
            <param name="map">The map to clear the topology.</param>
            <returns></returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.SetMapTopologyAsync(ArcGIS.Desktop.Mapping.Map)">
            <summary>
            Sets the active topology to the map topolgoy. 
            </summary>
            <param name="map">The map to set the topology.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.SetActiveTopologyAsync(ArcGIS.Desktop.Mapping.Map,ArcGIS.Desktop.Editing.TopologyProperties)">
            <summary>
            Sets the active topology for the map to the set of specified topology properties.
            </summary>
            <param name="map">The map to set the topology.</param>
            <param name="topologyProperties">A <see cref="T:ArcGIS.Desktop.Editing.TopologyProperties"/></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Active topology cannot be set with the specified topology properties.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.SetActiveTopologyAsync(ArcGIS.Desktop.Mapping.Map,System.String)">
            <summary>
            Sets the active topology for the map to the specified topology name. 
            </summary>
            <remarks>
            Use "Map" to set the <see cref="T:ArcGIS.Desktop.Editing.MapTopologyProperties"/> for the map.
            Use the geoddatabase topology name to set the <see cref="T:ArcGIS.Desktop.Editing.GeodatabaseTopologyProperties"/> for the map.
            </remarks>
            <param name="map">The map to set the topology.</param>
            <param name="topologyName">the geodatabase topology name or "Map" if map topology properties is required.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Active topology cannot be set with the specified topology properties.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MappingExtensions.GetTopologyAsync(ArcGIS.Desktop.Mapping.Map,System.String)">
            <summary>
            Gets the set of topology properties for the specified topology name. 
            </summary>
            <remarks>
            Use "Map" to obtain the <see cref="T:ArcGIS.Desktop.Editing.MapTopologyProperties"/> for the map.
            Use the geoddatabase topology name to obtain the <see cref="T:ArcGIS.Desktop.Editing.GeodatabaseTopologyProperties"/> for the map.
            </remarks>
            <param name="map">The map to retrieve topology information from.</param>
            <param name="topologyName">the geodatabase topology name or "Map" if map topology properties is required.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Map or topologyName is null</exception>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.SketchMode">
            <summary>
            Specifies different modes for the sketch to be in to modify the current sketch geometry.  See <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchMode"/>.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Line">
            <summary>
            Adds new line segments to the end of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Arc">
            <summary>
            Adds new circular arc segments to the end of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.EndPointArc">
            <summary>
            Adds new circular arc segments to the end of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.TangentArc">
            <summary>
            Adds new circular arc segments to the end of the sketch geometry, tangent to the last segment.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Bezier">
            <summary>
            Adds new bezier curve segments to the end of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Trace">
            <summary>
            Adds a new traced pat to the end of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.RightLine">
            <summary>
            Adds a new segment to the end of the sketch geometry, constrained to right angles.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Midpoint">
            <summary>
            Adds a new segment to the sketch geometry at the midpoint between two points.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Stream">
            <summary>
            Adds a new path of streamed vertices to the end of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Move">
            <summary>
            Moves the sketch geometry
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Rotate">
            <summary>
            Rotates the sketch geometry
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Scale">
            <summary>
            Scales the sketch geometry
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.VertexMove">
            <summary>
            Modifies the location of vertices of the sketch geometry.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.VertexInsert">
            <summary>
            Splits segments of the sketch geometry adding vertices.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.VertexDelete">
            <summary>
            Deletes vertices of the sketch.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.DistanceDistance">
            <summary>
            Adds a new vertex to the sketch geometry at the intersection of two distances from two other points.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.Intersection">
            <summary>
            Adds a new vertex at the implied intersection of two segments.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.DirectionDistance">
            <summary>
            Adds a new vertex at the intersection of a direction from one point and a distance from another point.
            </summary>
        </member>
        <member name="F:ArcGIS.Desktop.Mapping.SketchMode.DirectionDirection">
            <summary>
            Adds a new vertex at the intersection of two directions from two other points. 
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs">
            <summary>
            Provides data for map view mouse button related events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs.ClientPoint">
            <summary>
            Gets the point in client coordinates relative to the top-left corner of the view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.MapViewMouseEventArgs">
            <summary>
            Provides data for map view mouse related events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapViewMouseEventArgs.ClientPoint">
            <summary>
            Gets the point in client coordinates relative to the top-left corner of the view.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.KeyEventArgsInfo.KeyEventArgs">
            <summary>
            Gets and sets KeyEventArgs property.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs">
            <summary>
            Provides data for map view keyboard related events.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs.ClientPoint">
            <summary>
            Gets the point in client coordinates relative to the top-left corner of the view.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.MapTool">
            <summary>
            Represents a tool command used to perform interactive operations on a <see cref="T:ArcGIS.Desktop.Mapping.MapView"/>.
            </summary>
            <remarks>
            <para>This base class can be used to create tools to interactively identify and select features in the view or to create custom construction and editing tools. 
            It provides virtual methods that can be overridden to perform actions when keyboard and mouse events occur in the map view, such 
            as <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseDown(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> and <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyDown(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/>. When overriding mouse and keyboard virtual methods if you need to execute any asynchronous code 
            first set the handled property on the event arguments to true, override the corresponding "Handle...Async" method,
            and add your asynchronous code.</para>
            <para>By setting the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.IsSketchTool"/> property to true, the tool will create a sketch in the map view with a left mouse click.
            Use the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchType"/> property to set the geometry type of the sketch and use the 
            <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchOutputMode"/> property to specify whether the sketch geometry is in screen or map coordinates.
            Override <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnSketchCompleteAsync(ArcGIS.Core.Geometry.Geometry)"/> to add behavior to the tool when the sketch is finished.</para>
            </remarks>
            <example>
            <code title="Custom Identify" description="Create a tool that allows you to sketch in the view and return the features that intersect the sketch." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\CustomIdentify.cs" lang="CS"/>
            </example>
            <example>
            <code title="Get Map Coordinates" description="Create a tool that allows you to click in the view and return the point in map coordinates that was clicked." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\GetMapCoordinates.cs" lang="CS"/>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.#ctor">
            <summary>
            Default constructor for MapTool.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.UpdateCursor">
            <summary>
            Occurs when a cursor is set on this tool. 
            Forward the cursor to the inner tool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchNumberOfSides">
            <summary>
            Gets or sets the number of sides for a regular polygon.  Use when <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchType"/> = <see cref="F:ArcGIS.Desktop.Mapping.SketchGeometryType.RegularPolygon"/>
            or <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchType"/> = <see cref="F:ArcGIS.Desktop.Mapping.SketchGeometryType.RegularPolyline"/>.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.ActiveMapView">
            <summary>
            Gets the active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/>.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.IsSketchTool">
            <summary>
            Gets or sets whether the MapTool's default behavior of a left click should be to create a sketch.
            </summary>
            <remarks>When setting this property to true, set the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchOutputMode"/> and <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchType"/> 
            properties which configure the sketch geometry. Override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnSketchCompleteAsync(ArcGIS.Core.Geometry.Geometry)"/> virtual method 
            to get the geometry created from the sketch. This geometry can be used to create a selection, identify features, and create or modify features.</remarks>
            <example>
            <code title="Custom Identify" description="Create a tool that allows you to sketch in the view and return the features that intersect the sketch." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\CustomIdentify.cs" lang="CS"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchOutputMode">
            <summary>
            Gets or sets if the sketch geometry should be created using map or screen coordinates.
            </summary>
            <remarks>Set <see cref="P:ArcGIS.Desktop.Mapping.MapTool.IsSketchTool"/> to true for this property to take effect. When performing an interactive selection or identify using the <see cref="M:ArcGIS.Desktop.Mapping.MapView.SelectFeatures(ArcGIS.Core.Geometry.Geometry,ArcGIS.Desktop.Mapping.SelectionCombinationMethod,System.Boolean,System.Boolean)"/> or <see cref="M:ArcGIS.Desktop.Mapping.MapView.GetFeatures(ArcGIS.Core.Geometry.Geometry,System.Boolean,System.Boolean)"/> method, 
            it's important to note that only geometries in screen coordinates are supported in 3D. In 2D, both map and screen geometries are supported.</remarks>
            <example>
            <code title="Custom Identify" description="Create a tool that allows you to sketch in the view and return the features that intersect the sketch." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\CustomIdentify.cs" lang="CS"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchType">
            <summary>
            Gets or sets the type or shape of the geometry to be created by the sketch.
            </summary>
            <remarks>Set <see cref="P:ArcGIS.Desktop.Mapping.MapTool.IsSketchTool"/> to true for this property to take effect.</remarks>
            <example>
            <code title="Custom Identify" description="Create a tool that allows you to sketch in the view and return the features that intersect the sketch." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\CustomIdentify.cs" lang="CS"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.FireSketchEvents">
            <summary>
            Gets or sets whether the tool supports firing sketch events when the map sketch changes.   Default value is false. 
            </summary>
            <remarks>The sketch events fired are <see cref="T:ArcGIS.Desktop.Mapping.Events.SketchModifiedEvent"/>, <see cref="T:ArcGIS.Desktop.Mapping.Events.SketchCompletedEvent"/>,
            <see cref="T:ArcGIS.Desktop.Mapping.Events.SketchCanceledEvent"/>.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchMode">
            <summary>
            Gets and sets the SketchMode for the MapTool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.CurrentTemplateRows">
            <summary>
            Gets or sets the number of rows to be created with the current template. Use this when the MapTool is registered with the
            "esri_editing_construction_table" category indicating the tool is a table construction tool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.ContextMenuID">
            <summary>
            Gets or sets the DAML ID of the context menu for the tool.
            </summary>
            <remarks>
            By default this will be null and will display the default context menu for the tool. 
            To display no context menu set the value to an empty string or handle the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseDown(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> event for the right mouse button.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.CompleteSketchOnMouseUp">
            <summary>
            Gets or sets the mouse up behavior for Rectangle/Circle/Ellipse/Freehand sketches.
            </summary>
            <remarks>Default value of null uses user setting in Editor properties page, true finishes a sketch on mouse up, false requires two clicks to finish sketch.</remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.ControlID">
            <summary>
            Gets or sets the DAML ID of the embeddable control to show in the dock pane when the tool is active.
            </summary>
            <remarks>
            In some cases you may need to provide a dock pane to configure the behavior of the tool while in use similar to many of the editing tools. 
            This property allows you to define a Embeddable Control to display within a dock pane while to the tool is active. 
            If you close the dock pane the tool will be deactivated and if you activate a different tool the dock pane will close. 
            You can get a reference to the Embeddable Control using the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.EmbeddableControl"/> property.
            </remarks>
            <example>
            <code title="Embeddable Control" description="Set the embeddable control for a MapTool." region="Embeddable Control" source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\MapTool_examples.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControl.xaml" lang="XAML"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControlViewModel.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddableControl.daml" lang="XML"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.KeepControlOpenAfterDeactivation">
            <summary>
            Optional property to allow tool's embeddable control to remain open after the tool is deactivated.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.OverlayControlID">
            <summary>
            Gets or sets the DAML ID of the embeddable control to show on the map view when the tool is active.
            </summary>
            <remarks>
            In some cases you may need to provide a control that displays on top of the map view to configure the behavior of the tool while in use similar to the measure tool. 
            This property allows you to define a Embeddable Control to display on top of the map view while to the tool is active. 
            When you activate a different tool the overlay control will be removed. You can get a reference to the Embeddable Control using the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.OverlayEmbeddableControl"/> property.
            </remarks>
            <example>
            <code title="Overlay Embeddable Control" description="Set the overlay embeddable control for a MapTool." region="Overlay Embeddable Control" source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\MapTool_examples.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControl.xaml" lang="XAML"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControlViewModel.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddableControl.daml" lang="XML"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.OverlayControlPositionRatio">
            <summary>
            Gets or sets the position of the embeddable control on the map view as a ratio.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SegmentContextMenuID">
            <summary>
            Gets or sets the DAML ID of the context menu shown when modifying a segment.
            </summary>
            By default this will be null and will display the default segment context menu for the tool.
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.ContextToolbarID">
            <summary>
            Gets or sets the DAML ID of the toolbar to display for the tool.
            </summary>
            By default this will be null and will display the default context toolbar for the tool. 
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchTip">
            <summary>Gets and sets text for a sketch tip.The text follows the cursor when the tool is active. </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchTipID">
            <summary>
            Gets and sets the DAML ID of the embeddable control to show as a sketch tip.The control follows the cursor when the tool is active.
            </summary>
            <remarks>
            In some cases you may need to provide a control that displays on top of the map view when the tool is active and provides some
            type of tool tip similar to the constraint tips that appear when sketching. This property allows you to define an
            Embeddable Control to display on top of the map view and follow the cursor when the tool is active.
            When you activate a different tool the overlay control will be removed.
            You can get a reference to the Embeddable Control using the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchTipEmbeddableControl"/> property.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchTipEmbeddableControl">
            <summary>
            Gets the Embeddable Control for the sketch tip for this tool.
            This is the control set by the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchTipID"/> property.
            </summary>
            <remarks>
            In some cases you may need to provide a control that displays on top of the map view when the tool is active and provides some type of tool tip similar to the constraint tips that appear when sketching.
            This property returns the instance of the overlay EmbeddableControl set by the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchTipID"/> property.
            When you activate a different tool the control will be removed.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.UseSelection">
            <summary>
            Gets or sets if the sketch needs a selection in order to operate. This requirement allows the tool to have two different modes;
            the normal sketch mode and an additional selection mode.The user is able to toggle the tool between sketch and select
            modes by pressing and holding down the SHIFT key. When this occurs the sketch is suspended and the user can select additional
            features.  Releasing the SHIFT key puts the tool back into sketch mode, restores the previous state of the sketch (and the
            sketch undo / redo stack) and allows you to resume sketching.
            <para></para>
            The default value is false. 
            </summary>
            <remarks>
            Your SketchType must be SketchGeometryType.Point, SketchGeometryType.Multipoint, SketchGeometryType.Line 
            or SketchGeometryType.Polygon in order to be able to toggle between sketch and sketch selection modes. 
            No other SketchTypes support this behavior.
            <para></para>
            When this property is set to true, the user can enter toggle betewen sketch and selection mode by holding the SHIFT key.
            The sketch state is saved while the SHIFT key is down and selections are made. The sketch is resumed when the SHIFT key is
            released.
            <para></para>
            If this property is set to false, the MapTool does not recognize the SHIFT key as having this special behavior. 
            <para></para>
            Note that toggling between selection and sketch modes can also be achieved with the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.ActivateSelectAsync(System.Boolean)"/> method.
            If using this method, the sketch state will only be saved if UseSelection is True.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.UseSnapping">
            <summary>
            Gets or sets whether to use snapping to precisely sketch on the active map view. The default value is false.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.CurrentTemplate">
            <summary>
            Gets the active editing template being used by the tool.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.UsesCurrentTemplate">
            <summary>
            Gets or sets whether the sketch is for creating a feature and should use the CurrentTemplate.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.IsWYSIWYG">
            <summary>
            Gets or sets whether the sketch shows a symbol.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.GeomIsSimpleAsFeature">
            <summary>
            Gets or sets whether the geometry constructed from a finished sketch should be simplified prior to being returned to <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnSketchCompleteAsync(ArcGIS.Core.Geometry.Geometry)"/>. The default value is true.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchSymbol">
            <summary>
            Gets or sets the symbol to use for the sketch. This is only supported when creating a sketch in map coordinates.
            </summary>
            <example>
            <code title="Set Sketch Symbol" description="Change the default symbol used while sketching." region="Sketch Symbol" source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\MapTool_examples.cs" lang="CS"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.EmbeddableControl">
            <summary>
            Gets the EmbeddableControl created for the tool. This is the control set by the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.ControlID"/> property.
            </summary>
            <remarks>
            In some cases you may need to provide a dock pane to configure the behavior of the tool while in use similar to many of the editing tools. 
            This property returns the instance of the EmbeddableControl set by the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.ControlID"/>. property.
            If you close the dock pane the tool will be deactivated and if you activate a different tool the dock pane will close.
            </remarks>
            <example>
            <code title="Embeddable Control" description="Set the embeddable control for a MapTool." region="Embeddable Control" source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\MapTool_examples.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControl.xaml" lang="XAML"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControlViewModel.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddableControl.daml" lang="XML"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.OverlayEmbeddableControl">
            <summary>
            Gets the EmbeddableControl created for the tool to be shown on the map view. This is control set by the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.OverlayControlID"/> property.
            </summary>
            <remarks>
            In some cases you may need to provide a control that displays on top of the map view to configure the behavior of the tool while in use similar to the measure tool. 
            This property returns the instance of the overlay EmbeddableControl set by the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.OverlayControlID"/>. property.
            When you activate a different tool the overlay control will be removed.
            </remarks>
            <example>
            <code title="Overlay Embeddable Control" description="Set the overlay embeddable control for a MapTool." region="Overlay Embeddable Control" source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\MapTool_examples.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControl.xaml" lang="XAML"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddedControlViewModel.cs" lang="CS"/>
            <code source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\EmbeddableControl.daml" lang="XML"/>
            </example>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.OverlayControlCanResize">
            <summary>
            Gets or sets whether the embeddable control on the map view can be resized.
            </summary>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SketchOverlaySymbol">
            <summary>
            Gets or sets the sketch symbology when the sketch is in selection mode.
            </summary>
            <remarks>
            See the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.UseSelection"/> property for information on setting the sketch selection mode.
            Set <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchOverlaySymbol"/> to null to use the default sketch selection mode symbology.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.ShowUncommittedSketchDialog">
            <summary>
            Gets or sets whether the uncommitted sketch dialog is shown. Default is false.
            </summary>
            <remarks>
            The uncommitted sketch dialog is shown for many editing tools in the UI when the tool is deactivated with an uncommitted sketch in the map.
            Custom MapTools will not show this dialog by default and the sketch will be discarded when the tool is deactivated.
            </remarks>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.ShowGroundToGridCorrections">
            <summary>
            Gets or sets whether the ground to grid corrections heads-up display is shown when ground to grid is turned on in the UI. Default is false.
            </summary>
            <remarks>
            The ground to grid heads-up display is shown for most COGO editing tools when the ground to grid corrections are turned on in the UI.
            Custom MapTools will not show this heads up display by default. Set this property to true for custom COGO tools that require the ground to grid
            correction settings.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnSketchCompleteAsync(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Occurs when a sketch is finished.
            </summary>
            <param name="geometry">The geometry of the sketch.</param>
            <returns>True if the sketch complete event was handled.</returns>
            <example>
            <code title="Custom Identify" description="Create a tool that allows you to sketch in the view and return the features that intersect the sketch." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\CustomIdentify.cs" lang="CS"/>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnSketchCanceledAsync">
            <summary>
            Occurs when a sketch is canceled.
            </summary>
            <returns>True if the sketch canceled event was handled.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnSketchModifiedAsync">
            <summary>
            Occurs when a sketch is modified.
            </summary>
            <returns>True if the sketch modified event was handled.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnCurrentTemplateUpdated">
            <summary>
            Occurs when the current template is modified.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolActivateAsync(System.Boolean)">
            <summary>
            Occurs when the tool is activated.
            </summary>
            <param name="hasMapViewChanged">A value indicating if the active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> has changed.</param>
            <returns>A Task that represents a tool activation event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolDeactivateAsync(System.Boolean)">
            <summary>
            Occurs when the tool is deactivated.
            </summary>
            <param name="hasMapViewChanged">A value indicating if the active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> has changed.</param>
            <returns>A Task that represents a tool deactivation event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolDoubleClick(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is clicked on the view two or more times.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a double-click event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.HandleDoubleClickAsync(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.HandleDoubleClickAsync(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolDoubleClick(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a double-click event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolDoubleClick(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a mouse double click event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyDown(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)">
            <summary>
            Occurs when a key is pressed and the view has focus.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a key down event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.HandleKeyDownAsync(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.HandleKeyDownAsync(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyDown(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a key down event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyDown(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a key down event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyUp(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)">
            <summary>
            Occurs when a key is released and the view has focus.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a key up event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.HandleKeyUpAsync(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.HandleKeyUpAsync(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyUp(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a key up event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolKeyUp(ArcGIS.Desktop.Mapping.MapViewKeyEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewKeyEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a key up event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseDown(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is pressed on the view.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a mouse down event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.HandleMouseDownAsync(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
            <example>
            <code title="Get Map Coordinates" description="Create a tool that allows you to click in the view and return the point in map coordinates that was clicked." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\GetMapCoordinates.cs" lang="CS"/>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.HandleMouseDownAsync(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseDown(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a mouse down event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseDown(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a mouse down event.</returns>
            <example>
            <code title="Get Map Coordinates" description="Create a tool that allows you to click in the view and return the point in map coordinates that was clicked." source="..\..\ArcGIS\SharedArcGIS\SDK\Examples\ArcGIS.Desktop.Mapping\MapExploration\GetMapCoordinates.cs" lang="CS"/>
            </example>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseUp(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)">
            <summary>
            Occurs when a mouse button is released on the view.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a mouse up event. To perform any asynchronous operations set the handled property
            on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> to true and override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.HandleMouseUpAsync(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> virtual method.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.HandleMouseUpAsync(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)">
            <summary>
            Occurs when the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseUp(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> event is handled.
            </summary>
            <remarks>
            This method is intended to perform asynchronous operations associated with a mouse up event. It will be called if you override the <see cref="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseUp(ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs)"/> virtual method
            and set the handled property on the <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> to true.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a mouse up event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnToolMouseMove(ArcGIS.Desktop.Mapping.MapViewMouseEventArgs)">
            <summary>
            Occurs when the mouse pointer moves over the view.
            </summary>
            <remarks>
            This method is intended to perform synchronous operations associated with a mouse move event.
            </remarks>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.MapViewMouseButtonEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnSelectionChangedAsync(ArcGIS.Desktop.Mapping.Events.MapSelectionChangedEventArgs)">
            <summary>
            Occurs when the selection changes in the map.
            </summary>
            <param name="args">A <see cref="T:ArcGIS.Desktop.Mapping.Events.MapSelectionChangedEventArgs"/> that contains the event data.</param>
            <returns>A Task that represents a selection changed event.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.ClearSketchAsync">
            <summary>
            Clears the current sketch in the active map view.
            </summary>
            <returns>A Task representing a clear sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.FinishSketchAsync">
            <summary>
            Finishes the current sketch in the active map view.
            </summary>
            <returns>A Task representing a finish sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.StartSketchAsync">
            <summary>
            Start a new sketch.
            </summary>
            <returns>A Task representing a start sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.StartSketchAsync(ArcGIS.Desktop.Editing.Templates.EditingTemplate)">
            <summary>
            Start a new sketch using the given template.
            </summary>
            <param name="template">The template to use for the new sketch.</param>
            <returns>A Task representing a start sketch operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.CreateFeatureAsync(ArcGIS.Desktop.Editing.Templates.EditingTemplate,ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Creates a new EditOperation to create a feature using the given template and geometry.
            </summary>
            <param name="template">The template to use to create.</param>
            <param name="geometry">The geometry to use to create.</param>
            <returns>A Task representing the create operation.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.GetCurrentSketchAsync">
            <summary>
            Gets the current geometry of the sketch without finishing it.
            </summary>
            <returns>A Task representing the geometry of the sketch.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.SetCurrentSketchAsync(ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Sets the current geometry of the sketch without finishing it.
            </summary>
            <param name="geometry">The geometry of the sketch.</param>
            <returns>A Task representing a set sketch operation.</returns>
        </member>
        <member name="P:ArcGIS.Desktop.Mapping.MapTool.SnappingResults">
            <summary>
            Gets the <see cref="T:ArcGIS.Desktop.Mapping.SnapResult"/> for each vertex in the current sketch.
            </summary>
            <remarks>
            The list is returned by vertex order along the current sketch from the start to the end. All vertices of the sketch are included.
            Examine the <see cref="T:ArcGIS.Desktop.Mapping.SnapResult"/> to determine if and how each vertex was snapped.
            </remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.ActivateSelectAsync(System.Boolean)">
            <summary>
            Toggles the tool between sketch and selection modes.
            Only supported when <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchType"/> is set to Point, Line, Polygon, or Multipoint.
            </summary>
            <param name="activate">If True the tool will change into select mode.  If false, the tool will change into sketch mode.</param>
            <returns>A Task representing the mode change operation. Returns false if the <see cref="P:ArcGIS.Desktop.Mapping.MapTool.SketchType"/> is unsupported.</returns>
            <remarks>To save the sketch state while in selection mode, set <see cref="P:ArcGIS.Desktop.Mapping.MapTool.UseSelection"/> to True before entering selection mode.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.GetSketchVertexSymbolOptions(ArcGIS.Desktop.Core.VertexSymbolType)">
            <summary>
            Gets the symbol for a vertex while sketching. 
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="symbolType">The type of vertex symbol to obtain.</param>
            <returns><see cref="T:ArcGIS.Desktop.Core.VertexSymbolOptions"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.SetSketchVertexSymbolOptions(ArcGIS.Desktop.Core.VertexSymbolType,ArcGIS.Desktop.Core.VertexSymbolOptions)">
            <summary>
            Sets the symbol for a vertex while sketching. 
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="symbolType">The type of vertex symbol to obtain.</param>
            <param name="vertexSymbol">The new vertex symbol.</param>
            <remarks>
            This method calls the <see cref="M:ArcGIS.Desktop.Core.EditingOptions.CanSetVertexSymbolOptions(ArcGIS.Desktop.Core.VertexSymbolType,ArcGIS.Desktop.Core.VertexSymbolOptions)"/> function prior to setting the symbol values.
            If the options are invalid, no updates are made to the symbol.
            </remarks>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Symbol options are not valid. See <see cref="M:ArcGIS.Desktop.Core.EditingOptions.CanSetVertexSymbolOptions(ArcGIS.Desktop.Core.VertexSymbolType,ArcGIS.Desktop.Core.VertexSymbolOptions)"/> for details on
            option settings. </exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.GetSketchSegmentSymbolOptions">
            <summary>
            Gets the default segment sketching symbol information.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <returns>A <see cref="T:ArcGIS.Desktop.Core.SegmentSymbolOptions"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.SetSketchSegmentSymbolOptions(ArcGIS.Desktop.Core.SegmentSymbolOptions)">
            <summary>
            Sets the segment sketching symbol information.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentException">Symbol options are not valid. See <see cref="M:ArcGIS.Desktop.Core.EditingOptions.CanSetSegmentSymbolOptions(ArcGIS.Desktop.Core.SegmentSymbolOptions)"/> for details on
            option settings. </exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.ResetSketchVertexSymbolOptions">
            <summary>
            Sets the current sketch vertex symbols back to the options defined in the application settings.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.ResetSketchSegmentSymbolOptions">
            <summary>
            Sets the current sketch segment symbol back to the options defined in the application settings.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlayAsync(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlayAsync(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.UpdateOverlay(System.IDisposable,ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Updates the geometry for an overlay graphic on the map view.
            </summary>
            <param name="overlay">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.UpdateOverlay(System.IDisposable,ArcGIS.Core.CIM.CIMGraphic,System.Double,System.Double)">
            <summary>
            Updates the graphic for an overlay graphic on the map view. 
            </summary>
            <param name="overlay">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="graphic">The graphic to be used for the update</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.UpdateOverlay(System.IDisposable,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Updates the geometry and symbol for an overlay graphic on the map view.
            </summary>
            <param name="overlay">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update</param>
            <param name="symbol">The symbol to use for the update. If no symbol is specified, </param>
            <param name="referenceScale">Map reference scale or -1</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.UpdateOverlay(System.IDisposable,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double,System.Double)">
            <summary>
            Updates the geometry and symbol for an overlay graphic on the map view.
            </summary>
            <param name="overlay">The IDisposable instance returned from an AddOverlay method call.</param>
            <param name="geometry">The geometry to be used for the update</param>
            <param name="symbol">The symbol to use for the update.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <returns>True if the overlay was updated. False otherwise. </returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlay(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlay(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.CIM.CIMSymbolReference,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="geometry">The geometry of the overlay.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlayAsync(ArcGIS.Desktop.Mapping.Layer,System.Int64,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic for a feature on the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="layer">The layer containing the feature.</param>
            <param name="oid">The ObjectID for the feature.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlay(ArcGIS.Desktop.Mapping.Layer,System.Int64,ArcGIS.Core.CIM.CIMSymbolReference,System.Double)">
            <summary>
            Add an overlay graphic for a feature on the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="layer">The layer containing the feature.</param>
            <param name="oid">The ObjectID for the feature.</param>
            <param name="symbol">The symbol to use for the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlayAsync(ArcGIS.Core.CIM.CIMGraphic,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlayAsync(ArcGIS.Core.CIM.CIMGraphic,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlay(ArcGIS.Core.CIM.CIMGraphic,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.AddOverlay(ArcGIS.Core.CIM.CIMGraphic,System.Double,System.Double)">
            <summary>
            Add an overlay graphic to the map view.
            </summary>
            <remarks> When the tool is deactivated all overlay graphics will be removed.</remarks>
            <param name="graphic">The graphic to be added to the overlay.</param>
            <param name="referenceScale">Map reference scale or -1</param>
            <param name="showThrough">Visibility factor for showing the overlay through other objects when obscured in 3D.<br/>Valid range is [0..1], any other value will be treated as 0 (not visible).</param>
            <remarks>When the referenceScale is not equal to -1, the overlay will be created in real world units relative to the provided map reference scale (referenceScale). Otherwise, the overlay will be created in units of points. This is only supported in 2D.</remarks>
            <returns>An object that when disposed will remove the overlay.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnActivateAsync(System.Boolean)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnClick">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnKeyUp(System.Windows.Input.KeyEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.OnPaneActivateAsync(System.Boolean)">
            <exclude />
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.MapTool.HandleOnPaneActivateAsync(System.Boolean)">
            <summary>
            Called to inform the Tool a Pane referencing it as the active tool is activating or deactivating.
            </summary>
        </member>
        <member name="T:ArcGIS.Desktop.Mapping.ParcelFabricExtensions">
            <summary>
            This convenience API provides commonly-used ParcelFabric-related extension methods.
            </summary>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetActiveRecord(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Gets the active record information.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>The <see cref="T:ArcGIS.Desktop.Editing.ParcelRecord"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.SetActiveRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,ArcGIS.Desktop.Editing.ParcelRecord)">
            <summary>
            Sets the active record.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="parcelRecord">Parcel record that will be set as the current record. </param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <remarks>
            All clients, including the parcel heads-up-display on the active map, will be notified and
            use the values given. Values for the parcel record must be set correctly to match the underlying data.
            </remarks>
            <returns>A Task to a bool indicating if the active record is set.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.SetActiveRecord(ArcGIS.Desktop.Mapping.ParcelLayer,ArcGIS.Desktop.Editing.ParcelRecord)">
            <summary>
            Sets the active record.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="parcelRecord">Parcel record that will be set as the current record. </param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <remarks>
            All clients, including the parcel heads-up-display on the active map, will be notified and
            use the values given. Values for the parcel record must be set correctly to match the underlying data.
            </remarks>
            <returns>A bool indicating if the active record is set.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.SetActiveRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.Int64)">
            <summary>
            Sets the active record.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="oid">The object Id of the parcel record feature to be set as the current record.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <remarks>
            All clients, including the parcel heads-up-display on the active map, will be notified and
            use the values given. Values for the parcel record must be set correctly to match the underlying data.
            </remarks>
            <returns>A Task to a bool indicating if the active record is set.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.SetActiveRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.Guid)">
            <summary>
            Sets the active record.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="guid">The global Id of the parcel record feature to be set as the current record.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <remarks>
            All clients, including the parcel heads-up-display on the active map, will be notified and
            use the values given. Values for the parcel record must be set correctly to match the underlying data.
            </remarks>
            <returns>A Task to a bool indicating if the active record is set.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.SetActiveRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.String)">
            <summary>
            Sets the active record.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="name">The name of the parcel record feature to be set as the current record.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <remarks>
            All clients, including the parcel heads-up-display on the active map, will be notified and
            use the values given. Values for the parcel record must be set correctly to match the underlying data.
            </remarks>
            <returns>A Task to a bool indicating if the active record is set.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.ClearActiveRecord(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Clears the active record.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.Int64)">
            <summary>
            Gets the active record information.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="oid">The object Id of the parcel record feature.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the <see cref="T:ArcGIS.Desktop.Editing.ParcelRecord"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.Guid)">
            <summary>
            Gets the active record information.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="guid">The global Id of the parcel record feature.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the <see cref="T:ArcGIS.Desktop.Editing.ParcelRecord"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetRecordAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.String)">
            <summary>
            Gets the active record information.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="name">The name of the parcel record feature.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the <see cref="T:ArcGIS.Desktop.Editing.ParcelRecord"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetRecordsLayerAsync(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Gets the records layer for the given parcel layer.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to a set of record layers.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetPointsLayerAsync(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Gets the points layer for the given parcel layer.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of point layers.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetConnectionLinesLayerAsync(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Gets the connection lines layer for the given parcel layer.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of connection line layers.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetParcelTypeNamesAsync(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Gets the parcel type names for the given parcel layer.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of parcel type names.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetParcelPolygonLayerByTypeNameAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.String)">
            <summary>
            Gets the polygon layer(s) for the given parcel type name.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="typeName">The parcel type name to retrieve layers.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of polygon layers.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetParcelLineLayerByTypeNameAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.String)">
            <summary>
            Gets the line layer(s) for the given parcel type name.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="typeName">The parcel type name to retrieve layers.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of line layers.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetHistoricParcelPolygonLayerByTypeNameAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.String)">
            <summary>
            Gets the historic polygon layer(s) for the given parcel type name.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="typeName">The parcel type name to retrieve layers.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of historic polygon layers.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetHistoricParcelLineLayerByTypeNameAsync(ArcGIS.Desktop.Mapping.ParcelLayer,System.String)">
            <summary>
            Gets the historic line layer(s) for the given parcel type name.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="typeName">The parcel type name to retrieve layers.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>A Task to the set of historic line layers</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetParcelFeaturesAsync(ArcGIS.Desktop.Mapping.ParcelLayer,ArcGIS.Desktop.Mapping.SelectionSet)">
            <summary>
            Gets the other related parcel features for the input parcels.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="parcelPolygonFeatures">The source layers and feature IDs of parcel polygon features.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <exception cref="T:System.Exception">Limit of 1000 input parcels exceeded.</exception>
            <returns>A Task to the <see cref="T:ArcGIS.Desktop.Editing.ParcelFeatures"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetParcelFabric(ArcGIS.Desktop.Mapping.ParcelLayer)">
            <summary>
            Gets the parcel fabric for the input parcel layer.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <returns>The <see cref="T:ArcGIS.Core.Data.Parcels.ParcelFabric"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetSequencedParcelEdgeInfoAsync(ArcGIS.Desktop.Mapping.ParcelLayer,ArcGIS.Desktop.Mapping.Layer,System.Int64,ArcGIS.Core.Geometry.MapPoint,System.Double,ArcGIS.Desktop.Editing.ParcelLineToEdgeRelationship)">
            <summary>
            Gets a clockwise ordered sequence of parcel edges, and their lines, in the same 
            parcel type as the input parcel, and filtering the result by specifying the 
            desired line-to-edge relationships.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="parcelTypePolygonLayer">The layer of the parcel type.</param>
            <param name="oid">The object Id of the parcel polygon feature that is used to get parcel edge lines of the same type.</param>
            <param name="startPointHint">The map point coordinate location to the nearest edge’s end to start a clockwise search trace.</param>
            <param name="offsetTolerance">The offset tolerance used to define tangents for detecting edges for parcel polygon segments.</param>
            <param name="edgeRelationshipFilter">The line-to-edge relationships used to filter the results to get lines only with those edge relationships specified in the enumeration.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="parcelLayer"/> cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="parcelTypePolygonLayer"/> cannot be null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="oid"/> cannot be negative.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offsetTolerance"/> cannot be negative.</exception>
            <returns>A Task to the <see cref="T:ArcGIS.Desktop.Editing.ParcelEdgeCollection"/>.</returns>
        </member>
        <member name="M:ArcGIS.Desktop.Mapping.ParcelFabricExtensions.GetSequencedParcelEdgeInfoAsync(ArcGIS.Desktop.Mapping.ParcelLayer,ArcGIS.Desktop.Mapping.Layer,System.Int64,ArcGIS.Core.Geometry.MapPoint,ArcGIS.Desktop.Editing.ParcelLineToEdgeRelationship)">
            <summary>
            Gets a clockwise ordered sequence of parcel edges, and their lines, in the same 
            parcel type as the input parcel, and filtering the result by specifying the 
            desired line-to-edge relationships.
            </summary>
            <param name="parcelLayer">The parcel layer.</param>
            <param name="parcelTypePolygonLayer">The layer of the parcel type.</param>
            <param name="oid">The object Id of the parcel polygon feature that is used to get parcel edge lines of the same type.</param>
            <param name="startPointHint">The map point coordinate location to the nearest edge’s end to start a clockwise search trace.</param>
            <param name="edgeRelationshipFilter">The line-to-edge relationships used to filter the results to get lines only with those edge relationships specified in the enumeration.</param>
            <exception cref="T:ArcGIS.Core.Licensing.Exceptions.LicenseException">Insufficient license. This method requires a standard license. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="parcelLayer"/> cannot be null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="parcelTypePolygonLayer"/> cannot be null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="oid"/> cannot be negative.</exception>
            <returns>A Task to the <see cref="T:ArcGIS.Desktop.Editing.ParcelEdgeCollection"/>.</returns>
        </member>
        <member name="T:ArcGIS.Core.Data.CoreDataExtensions">
            <summary>
            This convenience API provides commonly-used geodatabase extension methods for the <i>ArcGIS.Core.Data</i> API.
            </summary>
            <summary>
            Extension methods for Core.Data classes
            </summary>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.EvaluateInEditOperation(ArcGIS.Core.Data.AttributeRuleManager,ArcGIS.Core.Data.AttributeRuleEvaluationDescription)">
            <summary>
            Evaluates all the applicable tables and feature classes in the geodatabase associated with <paramref name="attributeRuleManager"/>
            using the operation(s) specified by <paramref name="description"/>.
            This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            
            <param name="attributeRuleManager">
            The <see cref="T:ArcGIS.Core.Data.AttributeRuleManager"/> instance to manage attribute rules on behalf of a geodatabase.
            </param>
            
            <param name="description">
            The <see cref="T:ArcGIS.Core.Data.AttributeRuleEvaluationDescription"/> which describes the details of the evaluate operation.
            </param>
            
            <returns>
            An <see cref="T:ArcGIS.Core.Data.AttributeRuleEvaluationResult"/> that describes the result of the operation(s).
            </returns>
            
            <remarks>
            <ul>
            <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
            <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers
            and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. When writing a CoreHost application, use
            <see cref="M:ArcGIS.Core.Data.AttributeRuleManager.Evaluate"/>.</li>
            </ul>
            </remarks>
            
            <exception caption="" cref="T:System.InvalidOperationException">
            <para>
            Cannot find a layer in the active map that connects to the same geodatabase as that of the Attribute Rule Manager.
            </para>
            <para>
            -or-
            </para>
            <para>
            This geodatabase does not support attribute rule evaluation.
            </para>
            <para>
            -or-
            </para>
            <para>
            If the geodatabase is opened from the Default version and <see cref="T:ArcGIS.Core.Data.VersionEvaluationScope.ChangesInVersion"/> is
            specified for the <c>VersionEvaluationScope</c> argument in <see cref="M:ArcGIS.Core.Data.AttributeRuleEvaluationDescription(AttributeRuleType, VersionEvaluationScope)"/>.
            </para>
            </exception>
            
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            
            <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
            A geodatabase-related exception has occurred.
            </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.UpdateErrorsInEditOperation(ArcGIS.Core.Data.AttributeRuleManager,System.Collections.Generic.IEnumerable{ArcGIS.Core.Data.AttributeRuleError})">
             <summary>
             Updates the validation error system tables specified by <paramref name="validationErrors"/>.
             This method must be called on the MCT. Use QueuedTask.Run.
             </summary>
             
             <param name="attributeRuleManager">
             The <see cref="T:ArcGIS.Core.Data.AttributeRuleManager"/> instance to manage attribute rules on behalf of a geodatabase.
             </param>
             
             <param name="validationErrors">
             A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of one or more <see cref="T:ArcGIS.Core.Data.AttributeRuleError"/> objects.
             </param>
            
             <remarks>
             <ul>
             <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
             <li>
             If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers
             and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. When writing a CoreHost application, use
             <see cref="M:ArcGIS.Core.Data.AttributeRuleManager.UpdateErrors"/>.
             </li>
             </ul>
             </remarks>
             
             <exception caption="" cref="T:System.InvalidOperationException">
             <para>
             Cannot find a layer in the active map that connects to the same geodatabase as that of the Attribute Rule Manager.
             </para>
             <para>
             -or-
             </para>
             <para>
             This geodatabase does not support attribute rule evaluation.
             </para>
             </exception>
            
             <exception caption="" cref="T:System.ArgumentException">
             <paramref name="validationErrors"/> is null or empty.
             </exception>
             
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
             
             <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
             A geodatabase-related exception has occurred.
             </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.MarkAsExceptionInEditOperation(ArcGIS.Core.Data.Topology.Topology,ArcGIS.Core.Data.Topology.TopologyError)">
             <summary>
             Marks the topology error specified by <paramref name="topologyError"/> as an exception.
             This method must be called on the MCT. Use QueuedTask.Run.
             </summary>
             
             <param name="topology">
             The <see cref="T:ArcGIS.Core.Data.Topology"/> instance to mark the errors as exceptions.
             </param>
             
             <param name="topologyError">
             The topology error to be marked as an exception.
             </param>
            
             <remarks>
             <ul>
             <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
             <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers
             and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. When writing a CoreHost application, use
             <see cref="M:ArcGIS.Core.Data.Topology.Topology.MarkAsException"/>.</li>
             </ul>
             </remarks>
             
             <exception cref="T:System.ArgumentNullException">
             <paramref name="topologyError"/> is null.
             </exception>
             
             <exception cref="T:System.InvalidOperationException">
             Cannot find a layer in the active map that connects to the same geodatabase as that of the Topology.
             </exception>"
             
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
             
             <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
             A geodatabase-related exception has occurred.
             </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.UnmarkAsExceptionInEditOperation(ArcGIS.Core.Data.Topology.Topology,ArcGIS.Core.Data.Topology.TopologyError)">
             <summary>
             Resets the <paramref name="topologyError"/> currently marked as an exception to once again be an error.
             This method must be called on the MCT. Use QueuedTask.Run.
             </summary>
             
             <param name="topology">
             The <see cref="T:ArcGIS.Core.Data.Topology"/> instance to unmark the errors as exceptions.
             </param>
             
             <param name="topologyError">
             The topology error currently marked as an exception.
             </param>
            
             <remarks>
             <ul>
             <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
             <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers
             and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. When writing a CoreHost application, use
             <see cref="M:ArcGIS.Core.Data.Topology.Topology.UnmarkAsException"/>.</li>
             </ul>
             </remarks>
             
             <exception cref="T:System.ArgumentNullException">
             <paramref name="topologyError"/> is null.
             </exception>
             
             <exception cref="T:System.InvalidOperationException">
             Cannot find a layer in the active map that connects to the same geodatabase as that of the Topology.
             </exception>"
             
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
             
             <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
             A geodatabase-related exception has occurred.
             </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.ValidateInEditOperation(ArcGIS.Core.Data.Topology.Topology,ArcGIS.Core.Data.Topology.ValidationDescription)">
             <summary>
             Ensures data integrity by validating the features in a topology in the area specified by
             <see cref="P:ArcGIS.Core.Data.Topology.ValidationDescription.Extent"/> against a pre-defined set of topology rules.
             This method must be called on the MCT. Use QueuedTask.Run.
             </summary>
             
             <param name="topology">
             The <see cref="T:ArcGIS.Core.Data.Topology"/> instance to validate.
             </param>
             
             <param name="validationDescription">
             The <see cref="T:ArcGIS.Core.Data.Topology.ValidationDescription"/> which describes the details of the validate operation.
             </param>
            
             <remarks>
             <ul>
             <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
             <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers
             and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. When writing a CoreHost application, use
             <see cref="M:ArcGIS.Core.Data.Topology.Topology.Validate"/>.</li>
             </ul>
             </remarks>
             
             <returns>
             A <see cref="T:ArcGIS.Core.Data.Topology.ValidationResult"/> that describes the result of the operation.
             </returns>
             
             <exception cref="T:System.ArgumentNullException">
             <paramref name="validationDescription"/> is null.
             </exception>
             
             <exception cref="T:System.InvalidOperationException">
             Cannot find a layer in the active map that connects to the same geodatabase as that of the Topology.
             </exception>"
             
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
             
             <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
             A geodatabase-related exception has occurred.
             </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.AddActivationExtension(ArcGIS.Core.Data.Table,System.Guid)">
             <summary>
             Registers an extension id (guid) with the specified table. This method
             must be called on the Main CIM Thread. Use QueuedTask.Run.
             </summary>
             <remarks>
              Any number of extension ids can be added to a table. Adding an extension id will <b>limit</b> the
              backward compatibility of the given table/feature class to ArcGIS Pro <b>3.1</b>...meaning the
              given table or feature class cannot be used or referenced within ArcGIS Pro 3.0 or earlier.<br/>
              As with all properties that change the minimum client version, removing all activation extension
              ids will recompute the minimum required client version. So removing activation extensions potentially
              allows older clients to open the table (depending on what other Geodatabase functionality is enabled
              on the table). Refer to <see cref="M:ArcGIS.Core.Data.CoreDataExtensions.RemoveActivationExtension(ArcGIS.Core.Data.Table,System.Guid)"/><br/>
              Activation extension ids are supported on registered classes in Enterprise, File, Mobile and on
              ArcObjects Feature Service geodatabases.<br/>
              Calling AddActivationExtension when the table is being edited will <b>fail</b>.<br/>
              Registering an extension id (guid) with a table allows it to participate in special behaviors.
              One example of this is the ability to show a custom tab in the Pro Editor Attributes dockpane
              when rows from the table are selected.  The following development process outlines how to achieve
              this special behavior:
                <list type = "bullet" >
                <item>
             In an add-in, implement a <see cref="T:ArcGIS.Desktop.Editing.Attributes.AttributeTabEmbeddableControl"/>.
             The associated daml entry for this class updates the “esri_editing_AttributeTabs” category.
             Assign a unique guid value (i.e. the "extension id") to the "guid" attribute value in the content element
             tag within the addin Config.daml.
               </item>
               <item>
            In a separate administrative process, or within a separate addin, register the table(s) which are to show the
            custom tab with the same guid (i.e. "extension id") referenced in step 1 above - using the
            AddActivationExtension method.
               </item>
               </list>
               Note that eve though multiple extension ids can be registered to a single table or feature class
               and each of these extension ids has an AttributeTabEmbeddableControl component defined (in the config.daml),
               only one of the registered components will be added as a custom tab in the Attributes dockpane.
               That is; only ONE custom tab can be displayed in the Attributes dockpane for a feature class or table.
             </remarks>
             <param name="table">The table with which the extension id will be registered</param>
             <param name="extensionId">The extension id (guid) to be registered</param>
             <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
             <exception cref="T:System.ArgumentNullException">Value cannot be null: table</exception>
             <exception cref="T:System.ArgumentException">extension id cannot be empty</exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.RemoveActivationExtension(ArcGIS.Core.Data.Table,System.Guid)">
            <summary>
            Removes the extension id (guid) from being registered with the table. This method
            must be called on the Main CIM Thread. Use QueuedTask.Run.
            </summary>
            <remarks>Removing an extension id (guid) from a table removes it from participating in
            whichever special behaviors were linked to the given id.<br/>
            Any backward compatibility removed by the extension id will be restored (depending on what
            other Geodatabase functionality is currently enabled and may additionally be limiting
            backwards compatibility).<br/>
            Activation extension ids are supported on registered classes in Enterprise, File, Mobile and on
            ArcObjects Feature Service geodatabases.<br/>
            Calling RemoveActivationExtension when the table is being edited will <b>fail</b>.<br/></remarks>
            <param name="table">The table from which the extension id will be removed</param>
            <param name="extensionId">The extension id (guid) to be unregistered</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: table</exception>
            <exception cref="T:System.ArgumentException">extension id cannot be empty</exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.GetHasActivationExtension(ArcGIS.Core.Data.Table,System.Guid)">
            <summary>
            Gets if the specified extension id (guid) is registered with the table. This method
            must be called on the Main CIM Thread. Use QueuedTask.Run.
            </summary>
            <param name="table">The table to check</param>
            <param name="extensionId">The extension id (guid)</param>
            <returns></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: table</exception>
            <exception cref="T:System.ArgumentException">extension id cannot be empty</exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.GetActivationExtensions(ArcGIS.Core.Data.Table)">
            <summary>
            Gets the readonly list of extension ids (guids) registered with the table.
            This method must be called on the Main CIM Thread. Use QueuedTask.Run.
            </summary>
            <param name="table">The table to check</param>
            <returns><see cref="T:System.Collections.Generic.IReadOnlyList`1"/></returns>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <exception cref="T:System.ArgumentNullException">Value cannot be null: table</exception>
        </member>
        <member name="M:ArcGIS.Core.Data.CoreDataExtensions.GetDataConnection(ArcGIS.Core.Data.Dataset)">
            <summary>
            Gets the CIMDataConnection for the specified dataset. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            <param name="dataset">The dataset to get the CIMDataConnection for</param>
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            <returns><see cref="T:ArcGIS.Core.CIM.CIMDataConnection"/></returns>
        </member>
        <member name="T:ArcGIS.Core.Data.UtilityNetwork.UtilityNetworkExtensions">
            <summary>
            This convenience API provides commonly-used UtilityNetwork-related extension methods for the <i>ArcGIS.Core.Data.UtilityNetwork</i> API.
            </summary>
        </member>
        <member name="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetworkExtensions.ValidateNetworkTopologyInEditOperation(ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork)">
            <summary>
            Validates the utility network topology in an edit operation. This method must be called on the MCT.
            Use QueuedTask.Run.
            </summary>
            
            <param name="utilityNetwork">
            The <see cref="T:ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork"/> instance whose network topology is to be validated.
            </param>
            <returns></returns>
            
            <returns>
            A <see cref="T:ArcGIS.Core.Data.UtilityNetwork.ValidationResult"/> that describes the result of the operation.
            </returns>
            
            <remarks>
            <ul>
            <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
            <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. 
            When writing a CoreHost application, use <see cref="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork.ValidateNetworkTopology"/>.</li>
            <li>For services-based UtilityNetwork, this method defaults to <see cref="T:ArcGIS.Core.Data.ServiceSynchronizationType.Asynchronous"/>. Note that this C# routine is still synchronous; the current thread will block until the routine completes.</li>
            </ul>
            </remarks>
            
            <exception caption="" cref="T:System.InvalidOperationException">
            <para>
            The active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> is unavailable.
            </para>
            <para>
            -or-
            </para>
            <para>
            The <see cref="T:ArcGIS.Desktop.Mapping.UtilityNetworkLayer"/> is unavailable.
            </para>
            </exception>
            
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            
            <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
            A geodatabase-related exception has occurred.
            </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetworkExtensions.ValidateNetworkTopologyInEditOperation(ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork,ArcGIS.Core.Geometry.Geometry)">
            <summary>
            Validates the utility network topology in an edit operation. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            
            <param name="utilityNetwork">
            The <see cref="T:ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork"/> instance whose network topology to validate.
            </param>
            
            <param name="extent">
            The extent of the area to be validating.  If this parameter is missing or null, the entire extent of the utility network is used.
            </param>
            
            <returns>
            A <see cref="T:ArcGIS.Core.Data.UtilityNetwork.ValidationResult"/> that describes the result of the operation.
            </returns>
            
            <remarks>
            <ul>
            <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
            <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. 
            When writing a CoreHost application, use <see cref="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork.ValidateNetworkTopology(ArcGIS.Core.Geometry.Geometry)"/>.</li>
            <li>This method defaults to <see cref="T:ArcGIS.Core.Data.ServiceSynchronizationType.Synchronous"/>.</li>
            </ul>
            </remarks>
            
            <exception caption="" cref="T:System.InvalidOperationException">
            <para>
            The active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> is unavailable.
            </para>
            <para>
            -or-
            </para>
            <para>
            The <see cref="T:ArcGIS.Desktop.Mapping.UtilityNetworkLayer"/> is unavailable.
            </para>
            </exception>
            
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            
            <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
            A geodatabase-related exception has occurred.
            </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetworkExtensions.ValidateNetworkTopologyInEditOperation(ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork,ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.Data.ServiceSynchronizationType)">
            <summary>
            Validates the utility network topology in an edit operation. This method must be called on the MCT. Use QueuedTask.Run.
            </summary>
            
            <param name="utilityNetwork">
            The <see cref="T:ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork"/> instance whose network topology to validate.
            </param>
            
            <param name="extent">
            The extent of the area to be validating.  If this parameter is missing or null, the entire extent of the utility network is used.
            </param>
            
            <param name="serviceSynchronizationType">
            Specifies which implementation of the service endpoint to call. This parameter is ignored for non-services based utility networks.
            </param>
            
            <returns>
            A <see cref="T:ArcGIS.Core.Data.UtilityNetwork.ValidationResult"/> that describes the result of the operation.
            </returns>
            
            <remarks>
            <ul>
            <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
            <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. 
            When writing a CoreHost application, use <see cref="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetwork.ValidateNetworkTopology(ArcGIS.Core.Geometry.Geometry,ArcGIS.Core.Data.ServiceSynchronizationType)"/>.</li>
            <li>Note that regardless of the <see cref="T:ArcGIS.Core.Data.ServiceSynchronizationType"/> used, this C# routine is still synchronous; the current thread will block until the routine completes.</li>
            </ul>
            </remarks>
            
            <exception caption="" cref="T:System.InvalidOperationException">
            <para>
            The active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> is unavailable.
            </para>
            <para>
            -or-
            </para>
            <para>
            The <see cref="T:ArcGIS.Desktop.Mapping.UtilityNetworkLayer"/> is unavailable.
            </para>
            </exception>
            
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            
            <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
            A geodatabase-related exception has occurred.
            </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetworkExtensions.EnableControllerInEditOperation(ArcGIS.Core.Data.UtilityNetwork.SubnetworkManager,ArcGIS.Core.Data.UtilityNetwork.Tier,ArcGIS.Core.Data.UtilityNetwork.Element,System.String,System.String,System.String,System.String)">
            <summary>
            Enables a feature corresponding to <paramref name="device"/> to be a <see cref="T:ArcGIS.Core.Data.UtilityNetwork.SubnetworkController"/>
            and adds it to an existing <see cref="T:ArcGIS.Core.Data.UtilityNetwork.Subnetwork"/> corresponding to <paramref name="subnetworkName"/>.
            If the specified subnetwork does not exist, a new one will be created.
            This method must be called on the MCT. Use QueuedTask.Run.  
            </summary>
            <remarks>
            <ul>
            <li>This routine creates its own edit operation, and can therefore not be called within an existing transaction.</li>
            <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. 
            When writing a CoreHost application, use <see cref="M:ArcGIS.Core.Data.UtilityNetwork.SubnetworkManager.EnableController(ArcGIS.Core.Data.UtilityNetwork.Tier,ArcGIS.Core.Data.UtilityNetwork.Element,System.String,System.String,System.String,System.String)"/>.</li>
            </ul>
            </remarks>
            
            <param name="subnetworkManager">
            The <see cref="T:ArcGIS.Core.Data.UtilityNetwork.SubnetworkManager"/> instance used to add a controller to an existing or newly-created subnetwork.
            </param>
            
            <param name="tier">
            The <see cref="T:ArcGIS.Core.Data.UtilityNetwork.Tier"/> to which the <see cref="T:ArcGIS.Core.Data.UtilityNetwork.Subnetwork"/> is created.
            </param>
            
            <param name="device">
            Corresponds to the feature to be enabled as a <see cref="T:ArcGIS.Core.Data.UtilityNetwork.SubnetworkController"/>.  This  
            <see cref="T:ArcGIS.Core.Data.UtilityNetwork.Element"/> must specify a terminal, and this terminal must be specified as a 
            <i>Controller Terminal</i> in the terminal definition.
            </param>
            
            <param name="subnetworkName">
            Name of the subnetwork.
            </param>
            
            <param name="controllerName">
            Name of the subnetwork controller.
            </param>
            
            <param name="description">
            A description for the subnetwork controller.
            </param>
            
            <param name="notes">
            Additional notes for the subnetwork controller.
            </param>
            
            <returns>
            The newly-created or modified subnetwork.
            </returns>
            
            <remarks>
            If this operation is successful, it will invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw.
            </remarks>
            
            <exception caption="" cref="T:System.InvalidOperationException">
            <para>
            The active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> is unavailable.
            </para>
            <para>
            -or-
            </para>
            <para>
            The <see cref="T:ArcGIS.Desktop.Mapping.UtilityNetworkLayer"/> is unavailable.
            </para>
            <para>
            -or-
            </para>
            <para>
            If the <see cref="T:ArcGIS.Core.Data.UtilityNetwork.Terminal"/> in <paramref name="device"/> is null and the associated
            <see cref="T:ArcGIS.Core.Data.UtilityNetwork.TerminalConfiguration"/> has multiple terminals.
            </para>
            </exception>
            
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            
            <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
            A geodatabase-related exception has occurred.
            </exception>
        </member>
        <member name="M:ArcGIS.Core.Data.UtilityNetwork.UtilityNetworkExtensions.DisableControllerInEditOperation(ArcGIS.Core.Data.UtilityNetwork.SubnetworkManager,ArcGIS.Core.Data.UtilityNetwork.Element)">
            <summary>
            Disables a feature corresponding to <paramref name="device"/> from being a <see cref="T:ArcGIS.Core.Data.UtilityNetwork.SubnetworkController"/>.
            This method must be called on the MCT. Use QueuedTask.Run.  
            </summary>
            <remarks>
            <ul>
            <li>This routine generates its own editing transaction and therefore cannot be wrapped inside a separate transaction.</li>
            <li>If this operation is successful, it will create an edit operation on the Pro undo/redo stack, invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw. 
            When writing a CoreHost application, use <see cref="M:ArcGIS.Core.Data.UtilityNetwork.SubnetworkManager.DisableController(ArcGIS.Core.Data.UtilityNetwork.Element)"/>. </li>
            <li>If all subnetwork controllers are deleted from a subnetwork, the subnetwork moves to the <see cref="F:ArcGIS.Core.Data.UtilityNetwork.SubnetworkStates.DirtyAndDeleted"/> state.</li>
            </ul>
            </remarks>
            
            <param name="subnetworkManager">
            The <see cref="T:ArcGIS.Core.Data.UtilityNetwork.SubnetworkManager"/> instance used to disable a controller.
            </param>
            
            <param name="device">
            Corresponds to the feature to be disabled as a <see cref="T:ArcGIS.Core.Data.UtilityNetwork.SubnetworkController"/>.
            </param>
            
            <remarks>
            <para>
            If this operation is successful, it will invalidate the affected layers and cause the <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> to redraw.
            </para>
            <para>
            If all subnetwork controllers are deleted from a subnetwork, the subnetwork moves to the <see cref="F:ArcGIS.Core.Data.UtilityNetwork.SubnetworkStates.DirtyAndDeleted"/> state.
            </para>
            </remarks>
            
            <exception caption="" cref="T:System.InvalidOperationException">
            <para>
            The active <see cref="T:ArcGIS.Desktop.Mapping.MapView"/> is unavailable.
            </para>
            <para>
            -or-
            </para>
            <para>
            The <see cref="T:ArcGIS.Desktop.Mapping.UtilityNetworkLayer"/> is unavailable.
            </para>
            </exception>
            
            <exception cref="T:ArcGIS.Core.CalledOnWrongThreadException">This method or property must be called within the lambda passed to QueuedTask.Run.</exception>
            
            <exception caption="" cref="T:ArcGIS.Core.Data.Exceptions.GeodatabaseException">
            A geodatabase-related exception has occurred.
            </exception>
        </member>
    </members>
</doc>
